// Generated by Haxe 4.0.0-rc.2+77068e1
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) a.push(i.next());
	return a;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) if(x.next() == elt) {
		return true;
	}
	return false;
};
Lambda.fold = function(it,f,first) {
	var x = $getIterator(it);
	while(x.hasNext()) first = f(x.next(),first);
	return first;
};
Math.__name__ = "Math";
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (v.__name__ || v.__ename__) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
var Std = function() { };
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x, x && x[0]=="0" && (x[1]=="x" || x[1]=="X") ? 16 : 10);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
Std.random = function(x) {
	if(x <= 0) {
		return 0;
	} else {
		return Math.floor(Math.random() * x);
	}
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var c = _g_s.charCodeAt(_g_offset++);
		if(c >= 55296 && c < 56319) {
			c = c - 55232 << 10 | _g_s.charCodeAt(_g_offset++) & 1023;
		}
		var code = c;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
Type.__name__ = "Type";
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
var _$UInt_UInt_$Impl_$ = {};
_$UInt_UInt_$Impl_$.__name__ = "_UInt.UInt_Impl_";
_$UInt_UInt_$Impl_$.toFloat = function(this1) {
	if(this1 < 0) {
		return 4294967296.0 + this1;
	} else {
		return this1 + 0.0;
	}
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : "haxe.StackItem", __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = "haxe.CallStack";
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g++];
		b.b += "\nCalled from ";
		haxe_CallStack.itemToString(b,s);
	}
	return b.b;
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.b += "a C function";
		break;
	case 1:
		var m = s.m;
		b.b = (b.b += "module ") + (m == null ? "null" : "" + m);
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.b += " (";
		}
		b.b = (b.b += file == null ? "null" : "" + file) + " line ";
		b.b += line == null ? "null" : "" + line;
		if(col != null) {
			b.b = (b.b += " column ") + (col == null ? "null" : "" + col);
		}
		if(s1 != null) {
			b.b += ")";
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.b = (b.b += cname == null ? "null" : "" + cname) + ".";
		b.b += meth == null ? "null" : "" + meth;
		break;
	case 4:
		var n = s.v;
		b.b = (b.b += "local function #") + (n == null ? "null" : "" + n);
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.prototype = {
	get: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe_Log = function() { };
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) str += ", " + Std.string(_g1[_g++]);
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,get: function(key) {
		if(__map_reserved[key] != null) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,__class__: haxe_io_Bytes
};
var haxe_rtti_Meta = function() { };
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(((o) instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = intf[_g++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(((o) instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		if(o.__enum__ != null) {
			return $hxEnums[o.__enum__] == cl;
		} else {
			return false;
		}
	}
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var postite_display_Display = function(render) {
	this.renderEngine = render;
	this.renderables = new haxe_ds_ObjectMap();
};
postite_display_Display.__name__ = "postite.display.Display";
postite_display_Display.prototype = {
	renderables: null
	,renderEngine: null
	,clearRenderables: function() {
		var r = this.renderables.keys();
		while(r.hasNext()) {
			var r1 = r.next();
			this.renderables.remove(r1);
		}
	}
	,addRenderable: function(renderable) {
		this.renderables.set(renderable,true);
	}
	,removeRenderable: function(renderable) {
		this.renderables.remove(renderable);
	}
	,render: function() {
		this.renderEngine.clear();
		var renderable = this.renderables.keys();
		while(renderable.hasNext()) {
			var renderable1 = renderable.next();
			if(renderable1.enabled) {
				this.renderEngine.beforeEach();
				renderable1.render(this.renderEngine);
				this.renderEngine.afterEach();
			}
		}
	}
	,__class__: postite_display_Display
};
var postite_display_IRender = function() { };
postite_display_IRender.__name__ = "postite.display.IRender";
postite_display_IRender.prototype = {
	clear: null
	,beforeEach: null
	,afterEach: null
	,__class__: postite_display_IRender
};
var postite_display_IRenderable = function() { };
postite_display_IRenderable.__name__ = "postite.display.IRenderable";
postite_display_IRenderable.prototype = {
	enabled: null
	,render: null
	,__class__: postite_display_IRenderable
};
var postite_display_canvas_CanvasDisplay = function() {
	this.paused = false;
	this.display = new postite_display_Display(new postite_display_canvas_CanvasRender(this.createCanvas()));
};
postite_display_canvas_CanvasDisplay.__name__ = "postite.display.canvas.CanvasDisplay";
postite_display_canvas_CanvasDisplay.prototype = {
	_can: null
	,raf: null
	,paused: null
	,onFrame: null
	,get_canvas: function() {
		if(this._can == null) {
			this.createCanvas();
		}
		return this._can;
	}
	,display: null
	,enterframe: function(fps) {
		var _gthis = this;
		var elapsed;
		var fpsInterval = 1000 / fps;
		var then = new Date();
		var now;
		haxe_Log.trace(then,{ fileName : "src/postite/display/canvas/CanvasDisplay.hx", lineNumber : 36, className : "postite.display.canvas.CanvasDisplay", methodName : "enterframe"});
		var frame = 0;
		this.raf = ($_=window,$bind($_,$_.requestAnimationFrame));
		var animate = null;
		animate = function(timestamp) {
			if(_gthis.paused) {
				return;
			}
			_gthis.raf(animate);
			now = new Date();
			elapsed = now.getTime() - then.getTime();
			if(elapsed > fpsInterval) {
				then = new Date(now.getTime() - elapsed % fpsInterval);
				var x = frame += 1;
				_gthis.onFrame(x | 0);
				_gthis.display.render();
			}
		};
		this.onFrame = function(f) {
		};
		this.raf(animate);
	}
	,togPause: function() {
		haxe_Log.trace("paused=" + Std.string(this.paused),{ fileName : "src/postite/display/canvas/CanvasDisplay.hx", lineNumber : 67, className : "postite.display.canvas.CanvasDisplay", methodName : "togPause"});
		this.paused = !this.paused;
		if(!this.paused) {
			this.raf(null);
		}
	}
	,clearRenderables: function() {
		this.display.clearRenderables();
	}
	,addRenderable: function(renderable) {
		this.display.addRenderable(renderable);
	}
	,removeRenderable: function(renderable) {
		this.display.removeRenderable(renderable);
	}
	,render: function() {
		this.display.render();
	}
	,createCanvas: function() {
		haxe_Log.trace("create canvas",{ fileName : "src/postite/display/canvas/CanvasDisplay.hx", lineNumber : 92, className : "postite.display.canvas.CanvasDisplay", methodName : "createCanvas"});
		this._can = window.document.createElement("canvas");
		this._can.width = window.innerWidth;
		this._can.height = window.innerHeight;
		window.document.body.appendChild(this._can);
		return this._can;
	}
	,remove: function() {
		this._can.remove();
		this._can = null;
	}
	,__class__: postite_display_canvas_CanvasDisplay
	,__properties__: {get_canvas:"get_canvas"}
};
var postite_display_canvas_CanvasRender = function(canvas) {
	this.canvas = canvas;
	this.ctx = canvas.getContext("2d",null);
	this.ctx.save();
};
postite_display_canvas_CanvasRender.__name__ = "postite.display.canvas.CanvasRender";
postite_display_canvas_CanvasRender.__interfaces__ = [postite_display_IRender];
postite_display_canvas_CanvasRender.prototype = {
	canvas: null
	,ctx: null
	,clear: function() {
		this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);
	}
	,beforeEach: function() {
		this.ctx.save();
	}
	,afterEach: function() {
		this.ctx.restore();
	}
	,__class__: postite_display_canvas_CanvasRender
};
var postite_dro_Coords = function() { };
postite_dro_Coords.__name__ = "postite.dro.Coords";
var postite_dro_Star = function() { };
postite_dro_Star.__name__ = "postite.dro.Star";
postite_dro_Star.__properties__ = {get_coords:"get_coords"};
postite_dro_Star.get_coords = function() {
	if(postite_dro_Star._coords == null) {
		postite_dro_Star._coords = [];
		var alpha = 2. * Math.PI / 10;
		var i = 11;
		while(i > 0) {
			var r = 50 * (i % 2 + 1) / 2;
			var omega = alpha * i;
			postite_dro_Star._coords.push(postite_geom__$CoolPoint_Point_$Impl_$.fromPress({ x : r * Math.sin(omega) + 100, y : r * Math.cos(omega) + 100, press : 1. * i}));
			--i;
		}
	}
	return postite_dro_Star._coords;
};
postite_dro_Star.assert = function() {
};
var postite_dro__$Couleur_Couleur_$Impl_$ = {};
postite_dro__$Couleur_Couleur_$Impl_$.__name__ = "postite.dro._Couleur.Couleur_Impl_";
postite_dro__$Couleur_Couleur_$Impl_$.__properties__ = {set_alpha:"set_alpha",get_alpha:"get_alpha",set_blue:"set_blue",get_blue:"get_blue",set_green:"set_green",get_green:"get_green",set_red:"set_red",get_red:"get_red",get_allColors:"get_allColors"};
postite_dro__$Couleur_Couleur_$Impl_$.get_allColors = function() {
	return [13382400,14659372,1769883,16016923,16768629,4137476,6856049];
};
postite_dro__$Couleur_Couleur_$Impl_$._new = function(value) {
	return value;
};
postite_dro__$Couleur_Couleur_$Impl_$.get_red = function(this1) {
	return (this1 & 16711680) >>> 16;
};
postite_dro__$Couleur_Couleur_$Impl_$.get_green = function(this1) {
	return (this1 & 65280) >>> 8;
};
postite_dro__$Couleur_Couleur_$Impl_$.get_blue = function(this1) {
	return this1 & 255;
};
postite_dro__$Couleur_Couleur_$Impl_$.get_alpha = function(this1) {
	return this1 >>> 24;
};
postite_dro__$Couleur_Couleur_$Impl_$.set_red = function(this1,value) {
	this1 = this1 >>> 24 << 24 | value << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return value;
};
postite_dro__$Couleur_Couleur_$Impl_$.set_green = function(this1,value) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | value << 8 | this1 & 255;
	return value;
};
postite_dro__$Couleur_Couleur_$Impl_$.set_blue = function(this1,value) {
	this1 = this1 >>> 24 << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | value;
	return value;
};
postite_dro__$Couleur_Couleur_$Impl_$.set_alpha = function(this1,value) {
	this1 = value << 24 | (this1 & 16711680) >>> 16 << 16 | (this1 & 65280) >>> 8 << 8 | this1 & 255;
	return value;
};
postite_dro__$Couleur_Couleur_$Impl_$.random = function(alpha,red,green,blue) {
	var randomCouleur = 0;
	if(alpha == null) {
		randomCouleur = Math.round(255 * Math.random()) << 24 | (randomCouleur & 16711680) >>> 16 << 16 | (randomCouleur & 65280) >>> 8 << 8 | randomCouleur & 255;
	} else {
		randomCouleur = alpha << 24 | (randomCouleur & 16711680) >>> 16 << 16 | (randomCouleur & 65280) >>> 8 << 8 | randomCouleur & 255;
	}
	if(red == null) {
		randomCouleur = randomCouleur >>> 24 << 24 | Math.round(255 * Math.random()) << 16 | (randomCouleur & 65280) >>> 8 << 8 | randomCouleur & 255;
	} else {
		randomCouleur = randomCouleur >>> 24 << 24 | red << 16 | (randomCouleur & 65280) >>> 8 << 8 | randomCouleur & 255;
	}
	if(green == null) {
		randomCouleur = randomCouleur >>> 24 << 24 | (randomCouleur & 16711680) >>> 16 << 16 | Math.round(255 * Math.random()) << 8 | randomCouleur & 255;
	} else {
		randomCouleur = randomCouleur >>> 24 << 24 | (randomCouleur & 16711680) >>> 16 << 16 | green << 8 | randomCouleur & 255;
	}
	if(blue == null) {
		randomCouleur = randomCouleur >>> 24 << 24 | (randomCouleur & 16711680) >>> 16 << 16 | (randomCouleur & 65280) >>> 8 << 8 | Math.round(255 * Math.random());
	} else {
		randomCouleur = randomCouleur >>> 24 << 24 | (randomCouleur & 16711680) >>> 16 << 16 | (randomCouleur & 65280) >>> 8 << 8 | blue;
	}
	return randomCouleur;
};
postite_dro__$Couleur_Couleur_$Impl_$.randomInRange = function(range) {
	return range[Std.random(range.length)];
};
postite_dro__$Couleur_Couleur_$Impl_$.fromString = function(s) {
	if(s.indexOf("#") == 0) {
		return postite_dro__$Couleur_Couleur_$Impl_$._new(Std.parseInt("0x" + s.substring(1,s.length)));
	} else if(s.indexOf("0x") == 0) {
		return postite_dro__$Couleur_Couleur_$Impl_$._new(Std.parseInt(s));
	}
	return postite_dro__$Couleur_Couleur_$Impl_$._new(0);
};
postite_dro__$Couleur_Couleur_$Impl_$.mix = function(this1,color,strength) {
	var output = postite_dro__$Couleur_Couleur_$Impl_$._new(0);
	output = output >>> 24 << 24 | Math.floor(_$UInt_UInt_$Impl_$.toFloat((this1 & 16711680) >>> 16) * (1 - strength) + _$UInt_UInt_$Impl_$.toFloat((color & 16711680) >>> 16) * strength) << 16 | (output & 65280) >>> 8 << 8 | output & 255;
	output = output >>> 24 << 24 | (output & 16711680) >>> 16 << 16 | Math.floor(_$UInt_UInt_$Impl_$.toFloat((this1 & 65280) >>> 8) * (1 - strength) + _$UInt_UInt_$Impl_$.toFloat((color & 65280) >>> 8) * strength) << 8 | output & 255;
	output = output >>> 24 << 24 | (output & 16711680) >>> 16 << 16 | (output & 65280) >>> 8 << 8 | Math.floor(_$UInt_UInt_$Impl_$.toFloat(this1 & 255) * (1 - strength) + _$UInt_UInt_$Impl_$.toFloat(color & 255) * strength);
	output = Math.floor(_$UInt_UInt_$Impl_$.toFloat(this1 >>> 24) * (1 - strength) + _$UInt_UInt_$Impl_$.toFloat(color >>> 24) * strength) << 24 | (output & 16711680) >>> 16 << 16 | (output & 65280) >>> 8 << 8 | output & 255;
	return output;
};
postite_dro__$Couleur_Couleur_$Impl_$.add = function(this1,color) {
	return this1 + color;
};
postite_dro__$Couleur_Couleur_$Impl_$.darken = function(this1,strength) {
	return postite_dro__$Couleur_Couleur_$Impl_$.mix(this1,0,strength);
};
postite_dro__$Couleur_Couleur_$Impl_$.lighten = function(this1,strength) {
	return postite_dro__$Couleur_Couleur_$Impl_$.mix(this1,16777215,strength);
};
postite_dro__$Couleur_Couleur_$Impl_$.toHex = function(c) {
	return "#" + StringTools.hex(c);
};
postite_dro__$Couleur_Couleur_$Impl_$.toString = function(this1) {
	return "0x" + StringTools.hex(this1,8);
};
var postite_geom__$CoolPoint_Points_$Impl_$ = {};
postite_geom__$CoolPoint_Points_$Impl_$.__name__ = "postite.geom._CoolPoint.Points_Impl_";
postite_geom__$CoolPoint_Points_$Impl_$.fromArrayInt = function(a) {
	return a;
};
postite_geom__$CoolPoint_Points_$Impl_$.fromArrayPress = function(a) {
	return a;
};
var postite_geom__$CoolPoint_Point_$Impl_$ = {};
postite_geom__$CoolPoint_Point_$Impl_$.__name__ = "postite.geom._CoolPoint.Point_Impl_";
postite_geom__$CoolPoint_Point_$Impl_$._new = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	return { x : x, y : y};
};
postite_geom__$CoolPoint_Point_$Impl_$.add = function(this1,p) {
	return postite_geom__$CoolPoint_Point_$Impl_$._new(this1.x + p.x,this1.y + p.y);
};
postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt = function(a) {
	return postite_geom__$CoolPoint_Point_$Impl_$._new(a.x * 1.0,a.y * 1.0);
};
postite_geom__$CoolPoint_Point_$Impl_$.fromPress = function(p) {
	return postite_geom__$CoolPoint_Point_$Impl_$._new(p.x,p.y);
};
postite_geom__$CoolPoint_Point_$Impl_$.toPress = function(this1) {
	return { x : this1.x, y : this1.y, press : 10};
};
var postite_geom__$CoolPoint_CoolPoint_$Impl_$ = {};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.__name__ = "postite.geom._CoolPoint.CoolPoint_Impl_";
postite_geom__$CoolPoint_CoolPoint_$Impl_$._new = function(x,y,p) {
	return { x : x, y : y, press : p};
};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromArray = function(a) {
	return postite_geom__$CoolPoint_CoolPoint_$Impl_$._new(a[0],a[1],a[2]);
};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnon = function(a) {
	return postite_geom__$CoolPoint_CoolPoint_$Impl_$._new(a.x,a.y);
};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnonInt = function(a) {
	return postite_geom__$CoolPoint_CoolPoint_$Impl_$._new(a.x * 1.0,a.y * 1.0);
};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnonIntPress = function(a) {
	return postite_geom__$CoolPoint_CoolPoint_$Impl_$._new(a.x * 1.0,a.y * 1.0);
};
postite_geom__$CoolPoint_CoolPoint_$Impl_$.toPoint = function(p) {
	return { x : p.x, y : p.y};
};
var postite_geom_Geste = function() {
	this.NumUnistrokes = 16;
	this.Unistrokes = [];
	var a = postite_geom_UnistrokePatterns.unimap.keys();
	while(a.hasNext()) {
		var a1 = a.next();
		var _this = postite_geom_UnistrokePatterns.unimap;
		this.Unistrokes.push(new postite_geom_UniStroke(a1,__map_reserved[a1] != null ? _this.getReserved(a1) : _this.h[a1]));
	}
};
postite_geom_Geste.__name__ = "postite.geom.Geste";
postite_geom_Geste.Resample = function(origpoints,n) {
	var points = origpoints.slice();
	var I = postite_geom_Geste.PathLength(points) / (n - 1);
	var D = 0.0;
	var newpoints = [points[0]];
	var i = 1;
	var _g = 0;
	while(_g < points.length) {
		++_g;
		var d = postite_geom_Geste.Distance(points[i - 1],points[i]);
		if(D + d >= I) {
			var q = postite_geom__$CoolPoint_Point_$Impl_$._new(points[i - 1].x + (I - D) / d * (points[i].x - points[i - 1].x),points[i - 1].y + (I - D) / d * (points[i].y - points[i - 1].y));
			newpoints.push(q);
			points.slice(i);
			points.splice(i,0,q);
			D = 0.0;
		} else {
			D += d;
		}
		if(i < points.length - 1) {
			++i;
		}
	}
	if(newpoints.length == n - 1) {
		newpoints[newpoints.length] = postite_geom__$CoolPoint_Point_$Impl_$._new(points[points.length - 1].x,points[points.length - 1].y);
	}
	return newpoints;
};
postite_geom_Geste.IndicativeAngle = function(points) {
	var c = postite_geom_Geste.Centroid(points);
	return Math.atan2(c.y - points[0].y,c.x - points[0].x);
};
postite_geom_Geste.RotateBy = function(points,radians) {
	var c = postite_geom_Geste.Centroid(points);
	var cos = Math.cos(radians);
	var sin = Math.sin(radians);
	var newpoints = [];
	var point = HxOverrides.iter(points);
	while(point.hasNext()) {
		var point1 = point.next();
		newpoints[newpoints.length] = postite_geom__$CoolPoint_Point_$Impl_$._new((point1.x - c.x) * cos - (point1.y - c.y) * sin + c.x,(point1.x - c.x) * sin + (point1.y - c.y) * cos + c.y);
	}
	return newpoints;
};
postite_geom_Geste.ScaleTo = function(points,size) {
	var B = postite_geom_Geste.BoundingBox(points);
	var newpoints = [];
	var point = HxOverrides.iter(points);
	while(point.hasNext()) {
		var point1 = point.next();
		newpoints[newpoints.length] = postite_geom__$CoolPoint_Point_$Impl_$._new(point1.x * (size / B.width),point1.y * (size / B.height));
	}
	return newpoints;
};
postite_geom_Geste.TranslateTo = function(points,pt) {
	var c = postite_geom_Geste.Centroid(points);
	var newpoints = [];
	var point = HxOverrides.iter(points);
	while(point.hasNext()) {
		var point1 = point.next();
		newpoints[newpoints.length] = postite_geom__$CoolPoint_Point_$Impl_$._new(point1.x + pt.x - c.x,point1.y + pt.y - c.y);
	}
	return newpoints;
};
postite_geom_Geste.Vectorize = function(points) {
	var sum = 0.0;
	var vector = [];
	var point = HxOverrides.iter(points);
	while(point.hasNext()) {
		var point1 = point.next();
		vector[vector.length] = point1.x;
		vector[vector.length] = point1.y;
		sum += point1.x * point1.x + point1.y * point1.y;
	}
	var magnitude = Math.sqrt(sum);
	var _g = 0;
	var _g1 = vector.length;
	while(_g < _g1) vector[_g++] /= magnitude;
	return vector;
};
postite_geom_Geste.OptimalCosineDistance = function(v1,v2) {
	var a = 0.0;
	var b = 0.0;
	var end = v1.length;
	var _g_index = 0;
	while(_g_index < end) {
		var i = (_g_index += 2) - 2;
		try {
			a += v1[i] * v2[i] + v1[i + 1] * v2[i + 1];
			b += v1[i] * v2[i + 1] - v1[i + 1] * v2[i];
		} catch( msg ) {
			haxe_CallStack.lastException = msg;
			haxe_Log.trace("eer" + Std.string(((msg) instanceof js__$Boot_HaxeError) ? msg.val : msg),{ fileName : "src/postite/geom/Geste.hx", lineNumber : 223, className : "postite.geom.Geste", methodName : "OptimalCosineDistance"});
		}
	}
	var angle = Math.atan(b / a);
	return Math.acos(a * Math.cos(angle) + b * Math.sin(angle));
};
postite_geom_Geste.DistanceAtBestAngle = function(points,t,a,b,threshold) {
	var x1 = postite_geom_Geste.Phi * a + (1.0 - postite_geom_Geste.Phi) * b;
	var f1 = postite_geom_Geste.DistanceAtAngle(points,t,x1);
	var x2 = (1.0 - postite_geom_Geste.Phi) * a + postite_geom_Geste.Phi * b;
	var f2 = postite_geom_Geste.DistanceAtAngle(points,t,x2);
	while(Math.abs(b - a) > threshold) if(f1 < f2) {
		b = x2;
		x2 = x1;
		f2 = f1;
		x1 = postite_geom_Geste.Phi * a + (1.0 - postite_geom_Geste.Phi) * b;
		f1 = postite_geom_Geste.DistanceAtAngle(points,t,x1);
	} else {
		a = x1;
		x1 = x2;
		f1 = f2;
		x2 = (1.0 - postite_geom_Geste.Phi) * a + postite_geom_Geste.Phi * b;
		f2 = postite_geom_Geste.DistanceAtAngle(points,t,x2);
	}
	return Math.min(f1,f2);
};
postite_geom_Geste.DistanceAtAngle = function(points,t,radians) {
	return postite_geom_Geste.PathDistance(postite_geom_Geste.RotateBy(points,radians),t.Points);
};
postite_geom_Geste.Centroid = function(points) {
	var x = 0.0;
	var y = 0.0;
	var point = HxOverrides.iter(points);
	while(point.hasNext()) {
		var point1 = point.next();
		x += point1.x;
		y += point1.y;
	}
	x /= points.length;
	y /= points.length;
	return postite_geom__$CoolPoint_Point_$Impl_$._new(x,y);
};
postite_geom_Geste.BoundingBox = function(points) {
	var minX = Infinity;
	var maxX = -Infinity;
	var minY = Infinity;
	var maxY = -Infinity;
	var _g = 0;
	while(_g < points.length) {
		var point = points[_g];
		++_g;
		minX = Math.min(minX,point.x);
		minY = Math.min(minY,point.y);
		maxX = Math.max(maxX,point.x);
		maxY = Math.max(maxY,point.y);
	}
	return { x : minX, y : minY, width : maxX - minX, height : maxY - minY};
};
postite_geom_Geste.PathDistance = function(pts1,pts2) {
	var d = 0.0;
	var _g = 0;
	var _g1 = pts1.length;
	while(_g < _g1) {
		var i = _g++;
		d += postite_geom_Geste.Distance(pts1[i],pts2[i]);
	}
	return d / pts1.length;
};
postite_geom_Geste.PathLength = function(points) {
	var d = 0.0;
	var _g = 1;
	var _g1 = points.length;
	while(_g < _g1) {
		var i = _g++;
		d += postite_geom_Geste.Distance(points[i - 1],points[i]);
	}
	return d;
};
postite_geom_Geste.Distance = function(p1,p2) {
	var dx = p2.x - p1.x;
	var dy = p2.y - p1.y;
	return Math.sqrt(dx * dx + dy * dy);
};
postite_geom_Geste.Deg2Rad = function(d) {
	return d * Math.PI / 180.0;
};
postite_geom_Geste.prototype = {
	NumUnistrokes: null
	,Unistrokes: null
	,Recognize: function(points,useProtractor) {
		var t0 = new Date();
		points = postite_geom_Geste.Resample(points,postite_geom_Geste.NumPoints);
		points = postite_geom_Geste.RotateBy(points,-postite_geom_Geste.IndicativeAngle(points));
		points = postite_geom_Geste.ScaleTo(points,postite_geom_Geste.SquareSize);
		points = postite_geom_Geste.TranslateTo(points,postite_geom_Geste.Origin);
		var vector = postite_geom_Geste.Vectorize(points);
		var b = Infinity;
		haxe_Log.trace(this.Unistrokes.length,{ fileName : "src/postite/geom/Geste.hx", lineNumber : 36, className : "postite.geom.Geste", methodName : "Recognize"});
		var u = -1;
		var _g = 0;
		var _g1 = this.Unistrokes.length;
		while(_g < _g1) {
			var i = _g++;
			var d;
			if(useProtractor) {
				d = postite_geom_Geste.OptimalCosineDistance(this.Unistrokes[i].Vector,vector);
			} else {
				d = postite_geom_Geste.DistanceAtBestAngle(points,this.Unistrokes[i],-postite_geom_Geste.AngleRange,postite_geom_Geste.AngleRange,postite_geom_Geste.AnglePrecision);
			}
			if(d < b) {
				b = d;
				u = i;
			}
		}
		var newdate = new Date(new Date().getTime() + -t0.getTime());
		if(u == -1) {
			return new postite_geom_Result("No match.",0.0,newdate);
		} else {
			return new postite_geom_Result(this.Unistrokes[u].Name,useProtractor ? 1.0 / b : 1.0 - b / postite_geom_Geste.HalfDiagonal,newdate);
		}
	}
	,addGesture: function(name,points) {
		this.Unistrokes[this.Unistrokes.length] = new postite_geom_UniStroke(name,points);
		var num = 0;
		var _g = 0;
		var _g1 = this.Unistrokes.length;
		while(_g < _g1) if(this.Unistrokes[_g++].Name == name) {
			++num;
		}
		return num;
	}
	,DeleteUserGestures: function() {
		this.Unistrokes = [];
		return this.NumUnistrokes;
	}
	,__class__: postite_geom_Geste
};
var postite_geom_UniStroke = function(name,points) {
	this.Name = name;
	this.Points = postite_geom_Geste.Resample(points,postite_geom_Geste.NumPoints);
	this.Points = postite_geom_Geste.RotateBy(this.Points,-postite_geom_Geste.IndicativeAngle(this.Points));
	this.Points = postite_geom_Geste.ScaleTo(this.Points,postite_geom_Geste.SquareSize);
	this.Points = postite_geom_Geste.TranslateTo(this.Points,postite_geom_Geste.Origin);
	this.Vector = postite_geom_Geste.Vectorize(this.Points);
};
postite_geom_UniStroke.__name__ = "postite.geom.UniStroke";
postite_geom_UniStroke.prototype = {
	Name: null
	,Points: null
	,radians: null
	,Vector: null
	,__class__: postite_geom_UniStroke
};
var postite_geom_Result = function(name,score,ms) {
	this.Name = name;
	this.Score = score;
	this.Time = ms;
};
postite_geom_Result.__name__ = "postite.geom.Result";
postite_geom_Result.prototype = {
	Name: null
	,Score: null
	,Time: null
	,__class__: postite_geom_Result
};
var postite_geom_UnistrokePatterns = function() { };
postite_geom_UnistrokePatterns.__name__ = "postite.geom.UnistrokePatterns";
var postite_uz__$Debug_LogLevel_$Impl_$ = {};
postite_uz__$Debug_LogLevel_$Impl_$.__name__ = "postite.uz._Debug.LogLevel_Impl_";
postite_uz__$Debug_LogLevel_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 20:
		return "INF";
	case 30:
		return "WRN";
	case 40:
		return "ERR";
	case 50:
		return "!!!";
	default:
		return "DBG";
	}
};
postite_uz__$Debug_LogLevel_$Impl_$.format = function(this1,s,color,pos) {
	if(color == null) {
		color = true;
	}
	HxOverrides.dateStr(new Date());
	var p = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
	var l;
	switch(this1) {
	case 20:
		l = "INF";
		break;
	case 30:
		l = "WRN";
		break;
	case 40:
		l = "ERR";
		break;
	case 50:
		l = "!!!";
		break;
	default:
		l = "DBG";
	}
	return "" + p + " " + l + ":" + s;
};
var postite_uz_Debug = function() { };
postite_uz_Debug.__name__ = "postite.uz.Debug";
postite_uz_Debug.log = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	switch(level) {
	case 10:
		var tmp = window.console;
		var s = Std.string(msg);
		HxOverrides.dateStr(new Date());
		var p = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
		var l;
		switch(level) {
		case 20:
			l = "INF";
			break;
		case 30:
			l = "WRN";
			break;
		case 40:
			l = "ERR";
			break;
		case 50:
			l = "!!!";
			break;
		default:
			l = "DBG";
		}
		tmp.log("" + p + " " + l + ":" + s);
		break;
	case 20:
		var tmp1 = window.console;
		var s1 = Std.string(msg);
		HxOverrides.dateStr(new Date());
		var p1 = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
		var l1;
		switch(level) {
		case 20:
			l1 = "INF";
			break;
		case 30:
			l1 = "WRN";
			break;
		case 40:
			l1 = "ERR";
			break;
		case 50:
			l1 = "!!!";
			break;
		default:
			l1 = "DBG";
		}
		tmp1.log("" + p1 + " " + l1 + ":" + s1);
		break;
	case 30:
		var tmp2 = window.console;
		var s2 = Std.string(msg);
		HxOverrides.dateStr(new Date());
		var p2 = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
		var l2;
		switch(level) {
		case 20:
			l2 = "INF";
			break;
		case 30:
			l2 = "WRN";
			break;
		case 40:
			l2 = "ERR";
			break;
		case 50:
			l2 = "!!!";
			break;
		default:
			l2 = "DBG";
		}
		tmp2.warn("" + p2 + " " + l2 + ":" + s2);
		break;
	case 40:
		var tmp3 = window.console;
		var s3 = Std.string(msg);
		HxOverrides.dateStr(new Date());
		var p3 = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
		var l3;
		switch(level) {
		case 20:
			l3 = "INF";
			break;
		case 30:
			l3 = "WRN";
			break;
		case 40:
			l3 = "ERR";
			break;
		case 50:
			l3 = "!!!";
			break;
		default:
			l3 = "DBG";
		}
		tmp3.error("" + p3 + " " + l3 + ":" + s3);
		break;
	case 50:
		var tmp4 = window.console;
		var s4 = Std.string(msg);
		HxOverrides.dateStr(new Date());
		var p4 = StringTools.lpad(pos.fileName," ",postite_uz__$Debug_LogLevel_$Impl_$.longest) + ":" + StringTools.lpad(pos.lineNumber == null ? "null" : "" + pos.lineNumber," ",4) + ":";
		var l4;
		switch(level) {
		case 20:
			l4 = "INF";
			break;
		case 30:
			l4 = "WRN";
			break;
		case 40:
			l4 = "ERR";
			break;
		case 50:
			l4 = "!!!";
			break;
		default:
			l4 = "DBG";
		}
		tmp4.error("" + p4 + " " + l4 + ":" + s4);
		break;
	}
	return msg;
};
postite_uz_Debug.warn = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	return postite_uz_Debug.log(msg,30,pos);
};
postite_uz_Debug.error = function(msg,level,pos) {
	if(level == null) {
		level = 20;
	}
	return postite_uz_Debug.log(msg,40,pos);
};
var postite_uz_StepIterator = function(start,end,step) {
	this.index = start;
	this.end = end;
	this.step = step;
};
postite_uz_StepIterator.__name__ = "postite.uz.StepIterator";
postite_uz_StepIterator.prototype = {
	end: null
	,step: null
	,index: null
	,hasNext: function() {
		return this.index < this.end;
	}
	,next: function() {
		var tmp = this;
		return (tmp.index += this.step) - this.step;
	}
	,__class__: postite_uz_StepIterator
};
var pst_It = function() { };
pst_It.__name__ = "pst.It";
var tests_IRenderMock = function() {
	this.enabled = true;
};
tests_IRenderMock.__name__ = "tests.IRenderMock";
tests_IRenderMock.__interfaces__ = [postite_display_IRenderable];
tests_IRenderMock.prototype = {
	enabled: null
	,render: function(r) {
	}
	,__class__: tests_IRenderMock
};
var tests_TestAll = function() { };
tests_TestAll.__name__ = "tests.TestAll";
tests_TestAll.main = function() {
	postite_uz_Debug.log("op",null,{ fileName : "tests/TestAll.hx", lineNumber : 10, className : "tests.TestAll", methodName : "main"});
	haxe_Log.trace("hop",{ fileName : "tests/TestAll.hx", lineNumber : 12, className : "tests.TestAll", methodName : "main"});
	var runner = new utest_Runner();
	runner.addCase(new tests_TestGesteStatics());
	runner.addCase(new tests_TestResample());
	runner.addCase(new tests_TestGeste());
	runner.addCase(new tests_TestCouleur());
	runner.addCase(new tests_TestDisplay());
	utest_ui_Report.create(runner);
	runner.run();
};
var utest_ITest = function() { };
utest_ITest.__name__ = "utest.ITest";
var utest_Test = function() {
};
utest_Test.__name__ = "utest.Test";
utest_Test.__interfaces__ = [utest_ITest];
utest_Test.prototype = {
	__initializeUtest__: function() {
		return { tests : [], accessories : { }};
	}
	,__class__: utest_Test
};
var tests_TestCouleur = function() {
	this.pureYellow = 16776960;
	this.pureBlue = 255;
	this.pureGreen = 65280;
	this.pureRed = 16711680;
	utest_Test.call(this);
};
tests_TestCouleur.__name__ = "tests.TestCouleur";
tests_TestCouleur.__super__ = utest_Test;
tests_TestCouleur.prototype = $extend(utest_Test.prototype,{
	pureRed: null
	,pureGreen: null
	,pureBlue: null
	,pureYellow: null
	,testNoir: function() {
		utest_Assert.equals(13382400,13382400,null,{ fileName : "tests/TestCouleur.hx", lineNumber : 12, className : "tests.TestCouleur", methodName : "testNoir"});
		utest_Assert.equals("#CC3300",postite_dro__$Couleur_Couleur_$Impl_$.toHex(13382400),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 13, className : "tests.TestCouleur", methodName : "testNoir"});
	}
	,testDarken: function() {
		utest_Assert.equals(8355711,postite_dro__$Couleur_Couleur_$Impl_$.darken(16777215,.5),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 17, className : "tests.TestCouleur", methodName : "testDarken"});
	}
	,testLighten: function() {
		utest_Assert.equals(8355711,postite_dro__$Couleur_Couleur_$Impl_$.lighten(0,.5),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 20, className : "tests.TestCouleur", methodName : "testLighten"});
	}
	,testMix: function() {
		var middleColor = postite_dro__$Couleur_Couleur_$Impl_$._new(0);
		middleColor = middleColor >>> 24 << 24 | 127 << 16 | (middleColor & 65280) >>> 8 << 8 | middleColor & 255;
		middleColor = middleColor >>> 24 << 24 | (middleColor & 16711680) >>> 16 << 16 | 127 << 8 | middleColor & 255;
		utest_Assert.equals(middleColor,postite_dro__$Couleur_Couleur_$Impl_$.mix(this.pureRed,this.pureGreen,.5),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 28, className : "tests.TestCouleur", methodName : "testMix"});
		utest_Assert.equals(8355711,postite_dro__$Couleur_Couleur_$Impl_$.add(postite_dro__$Couleur_Couleur_$Impl_$.fromString("#00007F"),middleColor),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 30, className : "tests.TestCouleur", methodName : "testMix"});
	}
	,testAdd: function() {
		utest_Assert.equals(this.pureYellow,postite_dro__$Couleur_Couleur_$Impl_$.add(this.pureRed,this.pureGreen),null,{ fileName : "tests/TestCouleur.hx", lineNumber : 35, className : "tests.TestCouleur", methodName : "testAdd"});
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.tests.push({ name : "testNoir", execute : function() {
			_gthis.testNoir();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDarken", execute : function() {
			_gthis.testDarken();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testLighten", execute : function() {
			_gthis.testLighten();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMix", execute : function() {
			_gthis.testMix();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testAdd", execute : function() {
			_gthis.testAdd();
			return utest_Async.getResolved();
		}});
		return init;
	}
	,__class__: tests_TestCouleur
});
var tests_TestDisplay = function() {
	this.counter = 0;
	utest_Test.call(this);
};
tests_TestDisplay.__name__ = "tests.TestDisplay";
tests_TestDisplay.__super__ = utest_Test;
tests_TestDisplay.prototype = $extend(utest_Test.prototype,{
	counter: null
	,Opp: null
	,display: null
	,setupClass: function() {
	}
	,setup: function() {
		var _gthis = this;
		this.display = new postite_display_canvas_CanvasDisplay();
		this.Opp = new postite_display_canvas_CanvasDisplay();
		this.counter = 0;
		this.display.addRenderable(new tests_IRenderMock());
		this.display.enterframe(12);
		this.display.onFrame = function(frame) {
			_gthis.counter = frame;
		};
	}
	,testigTested: function(async) {
		var _gthis = this;
		haxe_Timer.delay(function() {
			utest_Assert.equals(24,_gthis.counter,null,{ fileName : "tests/TestDisplay.hx", lineNumber : 25, className : "tests.TestDisplay", methodName : "testigTested"});
			async.done();
		},2000);
	}
	,testPause: function(async) {
		var _gthis = this;
		this.display.togPause();
		haxe_Timer.delay(function() {
			utest_Assert.equals(0,_gthis.counter,null,{ fileName : "tests/TestDisplay.hx", lineNumber : 34, className : "tests.TestDisplay", methodName : "testPause"});
			async.done();
		},1000);
	}
	,testAfterPause: function(async) {
		var _gthis = this;
		this.display.togPause();
		haxe_Timer.delay(function() {
			_gthis.display.togPause();
			utest_Assert.equals(12,_gthis.counter,null,{ fileName : "tests/TestDisplay.hx", lineNumber : 43, className : "tests.TestDisplay", methodName : "testAfterPause"});
			async.done();
		},1000);
	}
	,teardown: function() {
		this.display.remove();
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.accessories.setupClass = function() {
			return utest_Async.getResolved();
		};
		init.accessories.setup = function() {
			_gthis.setup();
			return utest_Async.getResolved();
		};
		init.tests.push({ name : "testigTested", execute : function() {
			var async = new utest_Async(2500);
			_gthis.testigTested(async);
			return async;
		}});
		init.tests.push({ name : "testPause", execute : function() {
			var async1 = new utest_Async(1200);
			_gthis.testPause(async1);
			return async1;
		}});
		init.tests.push({ name : "testAfterPause", execute : function() {
			var async2 = new utest_Async(1200);
			_gthis.testAfterPause(async2);
			return async2;
		}});
		init.accessories.teardown = function() {
			_gthis.teardown();
			return utest_Async.getResolved();
		};
		return init;
	}
	,__class__: tests_TestDisplay
});
var tests_TestGeste = function() {
	utest_Test.call(this);
};
tests_TestGeste.__name__ = "tests.TestGeste";
tests_TestGeste.__super__ = utest_Test;
tests_TestGeste.prototype = $extend(utest_Test.prototype,{
	geste: null
	,stroke: null
	,setup: function() {
		this.geste = new postite_geom_Geste();
		var _this = postite_geom_UnistrokePatterns.unimap;
		this.stroke = __map_reserved["circle"] != null ? _this.getReserved("circle") : _this.h["circle"];
	}
	,testRecognise: function() {
		var t = this.geste.Recognize(this.stroke,false);
		haxe_Log.trace(t.Score,{ fileName : "tests/TestGeste.hx", lineNumber : 19, className : "tests.TestGeste", methodName : "testRecognise"});
		utest_Assert.equals("circle",t.Name,null,{ fileName : "tests/TestGeste.hx", lineNumber : 20, className : "tests.TestGeste", methodName : "testRecognise"});
	}
	,testRecogniseCustom: function() {
		var clocl = postite_dro_Coords.clockcircle.map(function(p) {
			return postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnon({ x : p.x, y : p.y});
		});
		var t = this.geste.Recognize(postite_geom__$CoolPoint_Points_$Impl_$.fromArrayPress(clocl),false);
		haxe_Log.trace(t.Score,{ fileName : "tests/TestGeste.hx", lineNumber : 27, className : "tests.TestGeste", methodName : "testRecogniseCustom"});
		utest_Assert.notEquals("circle",t.Name,null,{ fileName : "tests/TestGeste.hx", lineNumber : 28, className : "tests.TestGeste", methodName : "testRecogniseCustom"});
	}
	,testRecogniseCustomnotClock: function() {
		var clocl = postite_dro_Coords.notclockcircle.map(function(p) {
			return postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnon({ x : p.x, y : p.y});
		});
		var t = this.geste.Recognize(postite_geom__$CoolPoint_Points_$Impl_$.fromArrayPress(clocl),false);
		haxe_Log.trace(t.Score,{ fileName : "tests/TestGeste.hx", lineNumber : 36, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClock"});
		haxe_Log.trace(t.Name,{ fileName : "tests/TestGeste.hx", lineNumber : 37, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClock"});
		utest_Assert.equals("circle",t.Name,null,{ fileName : "tests/TestGeste.hx", lineNumber : 38, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClock"});
	}
	,testRecogniseCustomnotClockProtactor: function() {
		var clocl = postite_dro_Coords.notclockcircle.map(function(p) {
			return postite_geom__$CoolPoint_CoolPoint_$Impl_$.fromAnon({ x : p.x, y : p.y});
		});
		var t = this.geste.Recognize(postite_geom__$CoolPoint_Points_$Impl_$.fromArrayPress(clocl),true);
		haxe_Log.trace(t.Score,{ fileName : "tests/TestGeste.hx", lineNumber : 46, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClockProtactor"});
		haxe_Log.trace(t.Name,{ fileName : "tests/TestGeste.hx", lineNumber : 47, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClockProtactor"});
		utest_Assert.equals("circle",t.Name,null,{ fileName : "tests/TestGeste.hx", lineNumber : 48, className : "tests.TestGeste", methodName : "testRecogniseCustomnotClockProtactor"});
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.accessories.setup = function() {
			_gthis.setup();
			return utest_Async.getResolved();
		};
		init.tests.push({ name : "testRecognise", execute : function() {
			_gthis.testRecognise();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testRecogniseCustom", execute : function() {
			_gthis.testRecogniseCustom();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testRecogniseCustomnotClock", execute : function() {
			_gthis.testRecogniseCustomnotClock();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testRecogniseCustomnotClockProtactor", execute : function() {
			_gthis.testRecogniseCustomnotClockProtactor();
			return utest_Async.getResolved();
		}});
		return init;
	}
	,__class__: tests_TestGeste
});
var tests_TestGesteStatics = function() {
	utest_Test.call(this);
};
tests_TestGesteStatics.__name__ = "tests.TestGesteStatics";
tests_TestGesteStatics.getMaxPoint = function(rr) {
	return Lambda.fold(rr,function(a,b) {
		if(a.x > b.x || a.y > b.y) {
			return a;
		}
		return b;
	},rr[0]);
};
tests_TestGesteStatics.toPoints = function(val) {
	return val.map(function(p) {
		return { x : p, y : p};
	});
};
tests_TestGesteStatics.__super__ = utest_Test;
tests_TestGesteStatics.prototype = $extend(utest_Test.prototype,{
	setup: function() {
		tests_TestGesteStatics.path = postite_dro_Coords.small;
	}
	,testTest: function() {
		utest_Assert.isTrue(true,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 24, className : "tests.TestGesteStatics", methodName : "testTest"});
	}
	,testDeg2Rad: function() {
		utest_Assert.floatEquals(0.785398,postite_geom_Geste.Deg2Rad(45.0),null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 29, className : "tests.TestGesteStatics", methodName : "testDeg2Rad"});
	}
	,testDistance: function() {
		utest_Assert.floatEquals(282.84,postite_geom_Geste.Distance(tests_TestGesteStatics.p1,tests_TestGesteStatics.p2),1e-2,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 34, className : "tests.TestGesteStatics", methodName : "testDistance"});
	}
	,testPathLength: function() {
		utest_Assert.floatEquals(282.84,postite_geom_Geste.PathLength([tests_TestGesteStatics.p1,tests_TestGesteStatics.p2]),1e-2,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 39, className : "tests.TestGesteStatics", methodName : "testPathLength"});
	}
	,testPathDistance: function() {
		utest_Assert.floatEquals(223.60679774997897,postite_geom_Geste.PathDistance([tests_TestGesteStatics.p1,tests_TestGesteStatics.p2],postite_geom_Geste.TranslateTo(tests_TestGesteStatics.seg,postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 400, y : 400}))),1e-2,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 44, className : "tests.TestGesteStatics", methodName : "testPathDistance"});
	}
	,testBound: function() {
		utest_Assert.same({ x : 0, y : 0, width : 100, height : 100},postite_geom_Geste.BoundingBox(tests_TestGesteStatics.rec),null,null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 49, className : "tests.TestGesteStatics", methodName : "testBound"});
	}
	,testCentroid: function() {
		utest_Assert.same({ x : 200, y : 300},postite_geom_Geste.Centroid([tests_TestGesteStatics.p1,tests_TestGesteStatics.p2]),null,null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 59, className : "tests.TestGesteStatics", methodName : "testCentroid"});
	}
	,testDistanceAtAngle: function() {
		utest_Assert.equals(137.79376055283058,postite_geom_Geste.DistanceAtAngle(tests_TestGesteStatics.seg,{ Points : tests_TestGesteStatics.seg},45),null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 64, className : "tests.TestGesteStatics", methodName : "testDistanceAtAngle"});
	}
	,testBestDistanceAtAngle: function() {
		utest_Assert.equals(7.265398696948875,postite_geom_Geste.DistanceAtBestAngle(tests_TestGesteStatics.seg,{ Points : tests_TestGesteStatics.seg},45.0,90.0,1.0),null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 69, className : "tests.TestGesteStatics", methodName : "testBestDistanceAtAngle"});
	}
	,testRotateBy: function() {
		utest_Assert.same(postite_geom_Geste.RotateBy(tests_TestGesteStatics.seg,45.0)[0],{ x : 232.55815357163885, y : 162.37744866481518},null,null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 74, className : "tests.TestGesteStatics", methodName : "testRotateBy"});
	}
	,testOptimalCosineDistance: function() {
		utest_Assert.floatEquals(0,postite_geom_Geste.OptimalCosineDistance([0,1],[1,0]),null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 82, className : "tests.TestGesteStatics", methodName : "testOptimalCosineDistance"});
	}
	,testVectorize: function() {
		utest_Assert.isTrue(postite_geom_Geste.Vectorize(tests_TestGesteStatics.seg).length > 1,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 87, className : "tests.TestGesteStatics", methodName : "testVectorize"});
	}
	,testTranslateTo: function() {
		var t = postite_geom_Geste.TranslateTo(tests_TestGesteStatics.seg,postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 350, y : 350}));
		utest_Assert.same([{ x : 250, y : 250},{ x : 450, y : 450}],t,null,null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 92, className : "tests.TestGesteStatics", methodName : "testTranslateTo"});
	}
	,testScaleTo: function() {
		var upPoint = tests_TestGesteStatics.getMaxPoint(postite_geom_Geste.ScaleTo(postite_geom__$CoolPoint_Points_$Impl_$.fromArrayInt(tests_TestGesteStatics.rec),300));
		utest_Assert.equals(300,Math.min(upPoint.x,upPoint.y),null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 106, className : "tests.TestGesteStatics", methodName : "testScaleTo"});
	}
	,testIndicativeAngle: function() {
		utest_Assert.floatEquals(0.7853981633974483,postite_geom_Geste.IndicativeAngle(tests_TestGesteStatics.seg),null,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 111, className : "tests.TestGesteStatics", methodName : "testIndicativeAngle"});
	}
	,testresample: function() {
		utest_Assert.equals(3,postite_geom_Geste.Resample(tests_TestGesteStatics.seg.slice(),3).length,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 117, className : "tests.TestGesteStatics", methodName : "testresample"});
	}
	,testresamplebiggerArray: function() {
		var v = tests_TestGesteStatics.seg.slice();
		v = postite_geom_Geste.TranslateTo(v,postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 700, y : 600}));
		var con = tests_TestGesteStatics.seg.slice().concat(v);
		var r = postite_geom_Geste.Resample(con,3);
		utest_Assert.equals(4,con.length,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 128, className : "tests.TestGesteStatics", methodName : "testresamplebiggerArray"});
		utest_Assert.equals(3,r.length,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 129, className : "tests.TestGesteStatics", methodName : "testresamplebiggerArray"});
	}
	,testResampleSimple: function() {
		var dix = tests_TestGesteStatics.toPoints([1,2,3,4,5,6,7,8,9,10]);
		var n = postite_geom_Geste.Resample(postite_geom__$CoolPoint_Points_$Impl_$.fromArrayInt(dix),20);
		utest_Assert.equals(20,n.length,null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 135, className : "tests.TestGesteStatics", methodName : "testResampleSimple"});
		utest_Assert.equals(dix[0],n[0],null,{ fileName : "tests/TestGesteStatics.hx", lineNumber : 136, className : "tests.TestGesteStatics", methodName : "testResampleSimple"});
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.accessories.setup = function() {
			_gthis.setup();
			return utest_Async.getResolved();
		};
		init.tests.push({ name : "testTest", execute : function() {
			_gthis.testTest();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDeg2Rad", execute : function() {
			_gthis.testDeg2Rad();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDistance", execute : function() {
			_gthis.testDistance();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testPathLength", execute : function() {
			_gthis.testPathLength();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testPathDistance", execute : function() {
			_gthis.testPathDistance();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testBound", execute : function() {
			_gthis.testBound();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testCentroid", execute : function() {
			_gthis.testCentroid();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDistanceAtAngle", execute : function() {
			_gthis.testDistanceAtAngle();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testBestDistanceAtAngle", execute : function() {
			_gthis.testBestDistanceAtAngle();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testRotateBy", execute : function() {
			_gthis.testRotateBy();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testOptimalCosineDistance", execute : function() {
			_gthis.testOptimalCosineDistance();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testVectorize", execute : function() {
			_gthis.testVectorize();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testTranslateTo", execute : function() {
			_gthis.testTranslateTo();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testScaleTo", execute : function() {
			_gthis.testScaleTo();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testIndicativeAngle", execute : function() {
			_gthis.testIndicativeAngle();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testresample", execute : function() {
			_gthis.testresample();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testresamplebiggerArray", execute : function() {
			_gthis.testresamplebiggerArray();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testResampleSimple", execute : function() {
			_gthis.testResampleSimple();
			return utest_Async.getResolved();
		}});
		return init;
	}
	,__class__: tests_TestGesteStatics
});
var tests_TestResample = function() {
	utest_Test.call(this);
};
tests_TestResample.__name__ = "tests.TestResample";
tests_TestResample.toPoints = function(val) {
	return postite_geom__$CoolPoint_Points_$Impl_$.fromArrayInt(val.map(function(p) {
		return { x : p * 10, y : p * 10 + 100};
	}));
};
tests_TestResample.__super__ = utest_Test;
tests_TestResample.prototype = $extend(utest_Test.prototype,{
	testCircle: function() {
		haxe_Log.trace("circl",{ fileName : "tests/TestResample.hx", lineNumber : 31, className : "tests.TestResample", methodName : "testCircle"});
		var _this = postite_geom_UnistrokePatterns.unimap;
		utest_Assert.equals(64,postite_geom_Geste.Resample(__map_reserved["circle"] != null ? _this.getReserved("circle") : _this.h["circle"],64).length,null,{ fileName : "tests/TestResample.hx", lineNumber : 34, className : "tests.TestResample", methodName : "testCircle"});
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.tests.push({ name : "testCircle", execute : function() {
			_gthis.testCircle();
			return utest_Async.getResolved();
		}});
		return init;
	}
	,__class__: tests_TestResample
});
var utest_Assert = function() { };
utest_Assert.__name__ = "utest.Assert";
utest_Assert.isTrue = function(cond,msg,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert.results is not currently bound to any assert context");
	}
	if(null == msg) {
		msg = "expected true";
	}
	if(cond) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(msg,pos));
	}
};
utest_Assert.isFalse = function(value,msg,pos) {
	if(null == msg) {
		msg = "expected false";
	}
	utest_Assert.isTrue(value == false,msg,pos);
};
utest_Assert.isNull = function(value,msg,pos) {
	if(msg == null) {
		msg = "expected null but it is " + utest_Assert.q(value);
	}
	utest_Assert.isTrue(value == null,msg,pos);
};
utest_Assert.notNull = function(value,msg,pos) {
	if(null == msg) {
		msg = "expected not null";
	}
	utest_Assert.isTrue(value != null,msg,pos);
};
utest_Assert.is = function(value,type,msg,pos) {
	if(msg == null) {
		msg = "expected type " + utest_Assert.typeToString(type) + " but it is " + utest_Assert.typeToString(value);
	}
	utest_Assert.isTrue(js_Boot.__instanceof(value,type),msg,pos);
};
utest_Assert.notEquals = function(expected,value,msg,pos) {
	if(msg == null) {
		msg = "expected " + utest_Assert.q(expected) + " and test value " + utest_Assert.q(value) + " should be different";
	}
	utest_Assert.isFalse(expected == value,msg,pos);
};
utest_Assert.equals = function(expected,value,msg,pos) {
	if(msg == null) {
		msg = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value);
	}
	utest_Assert.isTrue(expected == value,msg,pos);
};
utest_Assert.match = function(pattern,value,msg,pos) {
	if(msg == null) {
		msg = "the value " + utest_Assert.q(value) + " does not match the provided pattern";
	}
	utest_Assert.isTrue(pattern.match(value),msg,pos);
};
utest_Assert.floatEquals = function(expected,value,approx,msg,pos) {
	if(msg == null) {
		msg = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value);
	}
	utest_Assert.isTrue(utest_Assert._floatEquals(expected,value,approx),msg,pos);
	return;
};
utest_Assert._floatEquals = function(expected,value,approx) {
	if(isNaN(expected)) {
		return isNaN(value);
	} else if(isNaN(value)) {
		return false;
	} else if(!isFinite(expected) && !isFinite(value)) {
		return expected > 0 == value > 0;
	}
	if(null == approx) {
		approx = 1e-5;
	}
	return Math.abs(value - expected) <= approx;
};
utest_Assert.getTypeName = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "`null`";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "Object";
	case 5:
		return "function";
	case 6:
		var c = _g.c;
		return c.__name__;
	case 7:
		var e = _g.e;
		return e.__ename__;
	case 8:
		return "`Unknown`";
	}
};
utest_Assert.isIterable = function(v,isAnonym) {
	if(!Lambda.has(isAnonym ? Reflect.fields(v) : Type.getInstanceFields(v == null ? null : js_Boot.getClass(v)),"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
utest_Assert.isIterator = function(v,isAnonym) {
	var fields = isAnonym ? Reflect.fields(v) : Type.getInstanceFields(v == null ? null : js_Boot.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
utest_Assert.sameAs = function(expected,value,status,approx) {
	var texpected = utest_Assert.getTypeName(expected);
	var tvalue = utest_Assert.getTypeName(value);
	if(texpected != tvalue && !(texpected == "Int" && tvalue == "Float" || texpected == "Float" && tvalue == "Int")) {
		status.error = "expected type " + texpected + " but it is " + tvalue + (status.path == "" ? "" : " for field " + status.path);
		return false;
	}
	var _g = Type.typeof(expected);
	switch(_g._hx_index) {
	case 1:case 2:
		if(!utest_Assert._floatEquals(expected,value,approx)) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 0:case 3:
		if(expected != value) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 4:
		if(status.recursive || status.path == "") {
			var tfields = Reflect.fields(value);
			var fields = Reflect.fields(expected);
			var path = status.path;
			var _g1 = 0;
			while(_g1 < fields.length) {
				var field = fields[_g1];
				++_g1;
				HxOverrides.remove(tfields,field);
				status.path = path == "" ? field : path + "." + field;
				if(!Object.prototype.hasOwnProperty.call(value,field)) {
					status.error = "expected field " + status.path + " does not exist in " + utest_Assert.q(value);
					return false;
				}
				var e = Reflect.field(expected,field);
				if(Reflect.isFunction(e)) {
					continue;
				}
				if(!utest_Assert.sameAs(e,Reflect.field(value,field),status,approx)) {
					return false;
				}
			}
			if(tfields.length > 0) {
				status.error = "the tested object has extra field(s) (" + tfields.join(", ") + ") not included in the expected ones";
				return false;
			}
		}
		if(utest_Assert.isIterator(expected,true)) {
			if(!utest_Assert.isIterator(value,true)) {
				status.error = "expected Iterable but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues.length != vvalues.length) {
					status.error = "expected " + evalues.length + " values in Iterator but they are " + vvalues.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path1 = status.path;
				var _g2 = 0;
				var _g11 = evalues.length;
				while(_g2 < _g11) {
					var i = _g2++;
					status.path = path1 == "" ? "iterator[" + i + "]" : path1 + "[" + i + "]";
					if(!utest_Assert.sameAs(evalues[i],vvalues[i],status,approx)) {
						status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,true)) {
			if(!utest_Assert.isIterable(value,true)) {
				status.error = "expected Iterator but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues1 = Lambda.array(expected);
				var vvalues1 = Lambda.array(value);
				if(evalues1.length != vvalues1.length) {
					status.error = "expected " + evalues1.length + " values in Iterable but they are " + vvalues1.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path2 = status.path;
				var _g3 = 0;
				var _g12 = evalues1.length;
				while(_g3 < _g12) {
					var i1 = _g3++;
					status.path = path2 == "" ? "iterable[" + i1 + "]" : path2 + "[" + i1 + "]";
					if(!utest_Assert.sameAs(evalues1[i1],vvalues1[i1],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		return true;
	case 5:
		if(!Reflect.compareMethods(expected,value)) {
			status.error = "expected same function reference" + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 6:
		var c = _g.c;
		var cexpected = c.__name__;
		var o = value;
		var c1 = o == null ? null : js_Boot.getClass(o);
		var cvalue = c1.__name__;
		if(cexpected != cvalue) {
			status.error = "expected instance of " + utest_Assert.q(cexpected) + " but it is " + utest_Assert.q(cvalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(typeof(expected) == "string") {
			if(expected == value) {
				return true;
			} else {
				status.error = "expected string '" + Std.string(expected) + "' but it is '" + Std.string(value) + "'";
				return false;
			}
		}
		if(((expected) instanceof Array) && expected.__enum__ == null) {
			if(status.recursive || status.path == "") {
				if(expected.length != value.length) {
					status.error = "expected " + Std.string(expected.length) + " elements but they are " + Std.string(value.length) + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path3 = status.path;
				var _g4 = 0;
				var _g13 = expected.length;
				while(_g4 < _g13) {
					var i2 = _g4++;
					status.path = path3 == "" ? "array[" + i2 + "]" : path3 + "[" + i2 + "]";
					if(!utest_Assert.sameAs(expected[i2],value[i2],status,approx)) {
						status.error = "expected array element at [" + i2 + "] to be " + utest_Assert.q(expected[i2]) + " but it is " + utest_Assert.q(value[i2]) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(((expected) instanceof Date)) {
			if(expected.getTime() != value.getTime()) {
				status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			return true;
		}
		if(((expected) instanceof haxe_io_Bytes)) {
			if(status.recursive || status.path == "") {
				var ebytes = expected;
				var vbytes = value;
				if(ebytes.length != vbytes.length) {
					return false;
				}
				var _g5 = 0;
				var _g14 = ebytes.length;
				while(_g5 < _g14) {
					var i3 = _g5++;
					if(ebytes.b[i3] != vbytes.b[i3]) {
						status.error = "expected byte " + ebytes.b[i3] + " but it is " + vbytes.b[i3] + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(js_Boot.__instanceof(expected,haxe_IMap)) {
			if(status.recursive || status.path == "") {
				var map = js_Boot.__cast(expected , haxe_IMap);
				var vmap = js_Boot.__cast(value , haxe_IMap);
				var _g6 = [];
				var k = map.keys();
				while(k.hasNext()) _g6.push(k.next());
				var keys = _g6;
				var _g15 = [];
				var k1 = vmap.keys();
				while(k1.hasNext()) _g15.push(k1.next());
				var vkeys = _g15;
				if(keys.length != vkeys.length) {
					status.error = "expected " + keys.length + " keys but they are " + vkeys.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path4 = status.path;
				var _g21 = 0;
				while(_g21 < keys.length) {
					var key = keys[_g21];
					++_g21;
					status.path = path4 == "" ? "hash[" + Std.string(key) + "]" : path4 + "[" + Std.string(key) + "]";
					if(!utest_Assert.sameAs(map.get(key),vmap.get(key),status,approx)) {
						status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterator(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues2 = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues2 = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues2.length != vvalues2.length) {
					status.error = "expected " + evalues2.length + " values in Iterator but they are " + vvalues2.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path5 = status.path;
				var _g7 = 0;
				var _g16 = evalues2.length;
				while(_g7 < _g16) {
					var i4 = _g7++;
					status.path = path5 == "" ? "iterator[" + i4 + "]" : path5 + "[" + i4 + "]";
					if(!utest_Assert.sameAs(evalues2[i4],vvalues2[i4],status,approx)) {
						status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues3 = Lambda.array(expected);
				var vvalues3 = Lambda.array(value);
				if(evalues3.length != vvalues3.length) {
					status.error = "expected " + evalues3.length + " values in Iterable but they are " + vvalues3.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path6 = status.path;
				var _g8 = 0;
				var _g17 = evalues3.length;
				while(_g8 < _g17) {
					var i5 = _g8++;
					status.path = path6 == "" ? "iterable[" + i5 + "]" : path6 + "[" + i5 + "]";
					if(!utest_Assert.sameAs(evalues3[i5],vvalues3[i5],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		if(status.recursive || status.path == "") {
			var o1 = expected;
			var fields1 = Type.getInstanceFields(o1 == null ? null : js_Boot.getClass(o1));
			var path7 = status.path;
			var _g9 = 0;
			while(_g9 < fields1.length) {
				var field1 = fields1[_g9];
				++_g9;
				status.path = path7 == "" ? field1 : path7 + "." + field1;
				var e1 = Reflect.field(expected,field1);
				if(Reflect.isFunction(e1)) {
					continue;
				}
				if(!utest_Assert.sameAs(e1,Reflect.field(value,field1),status,approx)) {
					return false;
				}
			}
		}
		return true;
	case 7:
		var e2 = _g.e;
		var eexpected = e2.__ename__;
		var e3 = Type.getEnum(value);
		var evalue = e3.__ename__;
		if(eexpected != evalue) {
			status.error = "expected enumeration of " + utest_Assert.q(eexpected) + " but it is " + utest_Assert.q(evalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(status.recursive || status.path == "") {
			if(expected._hx_index != value._hx_index) {
				var e4 = expected;
				var tmp = "expected enum constructor " + utest_Assert.q($hxEnums[e4.__enum__].__constructs__[e4._hx_index]) + " but it is ";
				var e5 = value;
				status.error = tmp + utest_Assert.q($hxEnums[e5.__enum__].__constructs__[e5._hx_index]) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			var eparams = Type.enumParameters(expected);
			var vparams = Type.enumParameters(value);
			var path8 = status.path;
			var _g10 = 0;
			var _g18 = eparams.length;
			while(_g10 < _g18) {
				var i6 = _g10++;
				status.path = path8 == "" ? "enum[" + i6 + "]" : path8 + "[" + i6 + "]";
				if(!utest_Assert.sameAs(eparams[i6],vparams[i6],status,approx)) {
					status.error = "expected enum param " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path) + " with " + status.error;
					return false;
				}
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
	}
};
utest_Assert.q = function(v) {
	if(typeof(v) == "string") {
		return "\"" + StringTools.replace(v,"\"","\\\"") + "\"";
	} else {
		return Std.string(v);
	}
};
utest_Assert.same = function(expected,value,recursive,msg,approx,pos) {
	if(null == approx) {
		approx = 1e-5;
	}
	var status = { recursive : null == recursive ? true : recursive, path : "", error : null};
	if(utest_Assert.sameAs(expected,value,status,approx)) {
		utest_Assert.pass(msg,pos);
	} else {
		utest_Assert.fail(msg == null ? status.error : msg,pos);
	}
};
utest_Assert.raises = function(method,type,msgNotThrown,msgWrongType,pos) {
	var name = type != null ? type.__name__ : "Dynamic";
	try {
		method();
		if(null == msgNotThrown) {
			msgNotThrown = "exception of type " + name + " not raised";
		}
		utest_Assert.fail(msgNotThrown,pos);
	} catch( ex ) {
		haxe_CallStack.lastException = ex;
		var ex1 = ((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex;
		if(null == type) {
			utest_Assert.pass(null,pos);
		} else {
			if(null == msgWrongType) {
				msgWrongType = "expected throw of type " + name + " but it is " + Std.string(ex1);
			}
			utest_Assert.isTrue(js_Boot.__instanceof(ex1,type),msgWrongType,pos);
		}
	}
};
utest_Assert.allows = function(possibilities,value,msg,pos) {
	if(Lambda.has(possibilities,value)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " not found in the expected possibilities " + Std.string(possibilities) : msg,pos);
	}
};
utest_Assert.contains = function(match,values,msg,pos) {
	if(Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do not contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.notContains = function(match,values,msg,pos) {
	if(!Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.stringContains = function(match,value,msg,pos) {
	if(value != null && value.indexOf(match) >= 0) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " does not contain " + utest_Assert.q(match) : msg,pos);
	}
};
utest_Assert.stringSequence = function(sequence,value,msg,pos) {
	if(null == value) {
		utest_Assert.fail(msg == null ? "null argument value" : msg,pos);
		return;
	}
	var p = 0;
	var _g = 0;
	while(_g < sequence.length) {
		var s = sequence[_g];
		++_g;
		var p2 = value.indexOf(s,p);
		if(p2 < 0) {
			if(msg == null) {
				msg = "expected '" + s + "' after ";
				if(p > 0) {
					var cut = HxOverrides.substr(value,0,p);
					if(cut.length > 30) {
						cut = "..." + HxOverrides.substr(cut,-27,null);
					}
					msg += " '" + cut + "'";
				} else {
					msg += " begin";
				}
			}
			utest_Assert.fail(msg,pos);
			return;
		}
		p = p2 + s.length;
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.pass = function(msg,pos) {
	if(msg == null) {
		msg = "pass expected";
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.fail = function(msg,pos) {
	if(msg == null) {
		msg = "failure expected";
	}
	utest_Assert.isTrue(false,msg,pos);
};
utest_Assert.warn = function(msg) {
	utest_Assert.results.add(utest_Assertation.Warning(msg));
};
utest_Assert.createAsync = function(f,timeout) {
	return function() {
	};
};
utest_Assert.createEvent = function(f,timeout) {
	return function(e) {
	};
};
utest_Assert.typeToString = function(t) {
	try {
		var o = t;
		var _t = o == null ? null : js_Boot.getClass(o);
		if(_t != null) {
			t = _t;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
	}
	try {
		return t.__name__;
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
	}
	try {
		var _t1 = Type.getEnum(t);
		if(_t1 != null) {
			t = _t1;
		}
	} catch( e2 ) {
		haxe_CallStack.lastException = e2;
	}
	try {
		return t.__ename__;
	} catch( e3 ) {
		haxe_CallStack.lastException = e3;
	}
	try {
		return Std.string(Type.typeof(t));
	} catch( e4 ) {
		haxe_CallStack.lastException = e4;
	}
	try {
		return Std.string(t);
	} catch( e5 ) {
		haxe_CallStack.lastException = e5;
	}
	return "<unable to retrieve type name>";
};
var utest_Assertation = $hxEnums["utest.Assertation"] = { __ename__ : "utest.Assertation", __constructs__ : ["Success","Failure","Error","SetupError","TeardownError","TimeoutError","AsyncError","Warning","Ignore"]
	,Success: ($_=function(pos) { return {_hx_index:0,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["pos"],$_)
	,Failure: ($_=function(msg,pos) { return {_hx_index:1,msg:msg,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg","pos"],$_)
	,Error: ($_=function(e,stack) { return {_hx_index:2,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,SetupError: ($_=function(e,stack) { return {_hx_index:3,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TeardownError: ($_=function(e,stack) { return {_hx_index:4,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TimeoutError: ($_=function(missedAsyncs,stack) { return {_hx_index:5,missedAsyncs:missedAsyncs,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["missedAsyncs","stack"],$_)
	,AsyncError: ($_=function(e,stack) { return {_hx_index:6,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,Warning: ($_=function(msg) { return {_hx_index:7,msg:msg,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,Ignore: ($_=function(reason) { return {_hx_index:8,reason:reason,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["reason"],$_)
};
var utest_Async = function(timeoutMs) {
	if(timeoutMs == null) {
		timeoutMs = 250;
	}
	this.callbacks = [];
	this.timedOut = false;
	this.resolved = false;
	this.timer = haxe_Timer.delay($bind(this,this.setTimedOutState),timeoutMs);
};
utest_Async.__name__ = "utest.Async";
utest_Async.getResolved = function() {
	if(utest_Async.resolvedInstance == null) {
		utest_Async.resolvedInstance = new utest_Async();
		utest_Async.resolvedInstance.done();
	}
	return utest_Async.resolvedInstance;
};
utest_Async.prototype = {
	resolved: null
	,timedOut: null
	,callbacks: null
	,timer: null
	,done: function() {
		if(this.resolved) {
			if(this.timedOut) {
				throw new js__$Boot_HaxeError("Cannot resolve timed out Async.");
			} else {
				throw new js__$Boot_HaxeError("Async is already resolved.");
			}
		}
		this.resolved = true;
		var _g = 0;
		var _g1 = this.callbacks;
		while(_g < _g1.length) _g1[_g++]();
	}
	,then: function(cb) {
		if(this.resolved) {
			cb();
		} else {
			this.callbacks.push(cb);
		}
	}
	,setTimedOutState: function() {
		if(this.resolved) {
			return;
		}
		this.timedOut = true;
		this.done();
	}
	,__class__: utest_Async
};
var utest__$Dispatcher_EventException = $hxEnums["utest._Dispatcher.EventException"] = { __ename__ : "utest._Dispatcher.EventException", __constructs__ : ["StopPropagation"]
	,StopPropagation: {_hx_index:0,__enum__:"utest._Dispatcher.EventException",toString:$estr}
};
var utest_Dispatcher = function() {
	this.handlers = [];
};
utest_Dispatcher.__name__ = "utest.Dispatcher";
utest_Dispatcher.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Dispatcher.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function(e) {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) list[_g++](e);
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			if(js_Boot.__instanceof(((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc,utest__$Dispatcher_EventException)) {
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Dispatcher
};
var utest_Notifier = function() {
	this.handlers = [];
};
utest_Notifier.__name__ = "utest.Notifier";
utest_Notifier.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Notifier.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function() {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) list[_g++]();
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			if(js_Boot.__instanceof(((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc,utest__$Dispatcher_EventException)) {
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Notifier
};
var utest_TestHandler = function(fixture) {
	this.wasBound = false;
	this.finished = false;
	if(fixture == null) {
		throw new js__$Boot_HaxeError("fixture argument is null");
	}
	this.fixture = fixture;
	this.results = new haxe_ds_List();
	this.asyncStack = new haxe_ds_List();
	this.onTested = new utest_Dispatcher();
	this.onTimeout = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	if(fixture.ignoringInfo != null) {
		this.results.add(utest_Assertation.Ignore(fixture.ignoringInfo));
	}
};
utest_TestHandler.__name__ = "utest.TestHandler";
utest_TestHandler.exceptionStack = function(pops) {
	if(pops == null) {
		pops = 2;
	}
	var stack = haxe_CallStack.exceptionStack();
	while(pops-- > 0) stack.pop();
	return stack;
};
utest_TestHandler.prototype = {
	results: null
	,fixture: null
	,finished: null
	,asyncStack: null
	,onTested: null
	,onTimeout: null
	,onComplete: null
	,onPrecheck: null
	,precheck: null
	,wasBound: null
	,execute: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var run = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.executeFixtureMethod();
			_gthis.executeFinally();
		};
		try {
			this.executeMethod(this.fixture.setup);
			this.executeAsyncMethod(this.fixture.setupAsync,run);
			if(!expectingAsync) {
				this.executeFixtureMethod();
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
		isSync = false;
		if(!expectingAsync) {
			this.executeFinally();
		}
	}
	,executeFixtureMethod: function() {
		try {
			this.executeMethod(this.fixture.method);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
	}
	,executeFinally: function() {
		this.onPrecheck.dispatch(this);
		this.checkTested();
	}
	,checkTested: function() {
		if(this.expiration == null || this.asyncStack.length == 0) {
			this.tested();
		} else if(Date.now() / 1000 > this.expiration) {
			this.timeout();
		} else {
			haxe_Timer.delay($bind(this,this.checkTested),10);
		}
	}
	,expiration: null
	,setTimeout: function(timeout) {
		var newExpire = Date.now() / 1000 + timeout / 1000;
		this.expiration = this.expiration == null ? newExpire : newExpire > this.expiration ? newExpire : this.expiration;
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		utest_Assert.createAsync = $bind(this,this.addAsync);
		utest_Assert.createEvent = $bind(this,this.addEvent);
		this.wasBound = true;
	}
	,unbindHandler: function() {
		if(!this.wasBound) {
			return;
		}
		utest_Assert.results = null;
		utest_Assert.createAsync = function(f,t) {
			return function() {
			};
		};
		utest_Assert.createEvent = function(f1,t1) {
			return function(e) {
			};
		};
		this.wasBound = false;
	}
	,addAsync: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		if(null == f) {
			f = function() {
			};
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function() {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("async function already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				handler.results.add(utest_Assertation.AsyncError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,addEvent: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function(e) {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("event already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f(e);
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				handler.results.add(utest_Assertation.AsyncError(((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,executeMethod: function(name) {
		if(name == null) {
			return;
		}
		this.bindHandler();
		Reflect.field(this.fixture.target,name).apply(this.fixture.target,[]);
	}
	,executeAsyncMethod: function(name,done) {
		if(name == null) {
			done();
			return;
		}
		this.bindHandler();
		Reflect.field(this.fixture.target,name).apply(this.fixture.target,[done]);
	}
	,tested: function() {
		if(this.results.length == 0) {
			this.results.add(utest_Assertation.Warning("no assertions"));
		}
		this.onTested.dispatch(this);
		this.completed();
	}
	,timeout: function() {
		this.results.add(utest_Assertation.TimeoutError(this.asyncStack.length,[]));
		this.onTimeout.dispatch(this);
		this.completed();
	}
	,completed: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.completedFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var complete = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.completedFinally();
		};
		try {
			this.executeMethod(this.fixture.teardown);
			this.executeAsyncMethod(this.fixture.teardownAsync,complete);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(2)));
		}
		isSync = false;
		if(!expectingAsync) {
			this.completedFinally();
		}
	}
	,completedFinally: function() {
		this.finished = true;
		this.unbindHandler();
		this.onComplete.dispatch(this);
	}
	,__class__: utest_TestHandler
};
var utest_ITestHandler = function(fixture) {
	utest_TestHandler.call(this,fixture);
	if(!fixture.isITest) {
		throw new js__$Boot_HaxeError("Invalid fixture type for utest.ITestHandler");
	}
	this.testCase = js_Boot.__cast(fixture.target , utest_ITest);
	this.test = fixture.test;
	if(this.test == null) {
		throw new js__$Boot_HaxeError("Fixture is missing test data");
	}
};
utest_ITestHandler.__name__ = "utest.ITestHandler";
utest_ITestHandler.__super__ = utest_TestHandler;
utest_ITestHandler.prototype = $extend(utest_TestHandler.prototype,{
	testCase: null
	,test: null
	,setupAsync: null
	,testAsync: null
	,teardownAsync: null
	,execute: function() {
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		this.bindHandler();
		this.runSetup();
	}
	,runSetup: function() {
		try {
			this.setupAsync = this.fixture.setupMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.setupAsync.then($bind(this,this.checkSetup));
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.results.add(utest_Assertation.SetupError("Setup timeout",[]));
			this.completedFinally();
		} else {
			this.runTest();
		}
	}
	,runTest: function() {
		try {
			this.testAsync = this.test.execute();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.runTeardown();
			return;
		}
		this.testAsync.then($bind(this,this.checkTest));
	}
	,checkTest: function() {
		this.onPrecheck.dispatch(this);
		if(this.testAsync.timedOut) {
			this.results.add(utest_Assertation.TimeoutError(1,[]));
			this.onTimeout.dispatch(this);
		} else if(this.testAsync.resolved) {
			if(this.results.length == 0) {
				this.results.add(utest_Assertation.Warning("no assertions"));
			}
			this.onTested.dispatch(this);
		} else {
			throw new js__$Boot_HaxeError("Unexpected test state");
		}
		this.runTeardown();
	}
	,runTeardown: function() {
		try {
			this.teardownAsync = this.fixture.teardownMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.results.add(utest_Assertation.TeardownError("Teardown timeout",[]));
		}
		this.completedFinally();
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		var msg = " is not allowed in tests extending utest.ITest. Add `async:utestAsync` argument to the test method instead.";
		utest_Assert.createAsync = function(f,t) {
			throw new js__$Boot_HaxeError("Assert.createAsync() " + msg);
		};
		utest_Assert.createEvent = function(f1,t1) {
			throw new js__$Boot_HaxeError("Assert.createEvent() " + msg);
		};
		this.wasBound = true;
	}
	,__class__: utest_ITestHandler
});
var utest__$IgnoredFixture_IgnoredFixture_$Impl_$ = {};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__name__ = "utest._IgnoredFixture.IgnoredFixture_Impl_";
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__properties__ = {get_ignoreReason:"get_ignoreReason",get_isIgnored:"get_isIgnored"};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored = function() {
	return null;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored = function(reason) {
	return reason != null ? reason : "";
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$._new = function(reason) {
	return reason;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_isIgnored = function(this1) {
	return this1 != null;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_ignoreReason = function(this1) {
	return this1;
};
var utest_Runner = function() {
	this.executedFixtures = 0;
	this.pos = 0;
	this.globalPattern = null;
	this.iTestFixtures = new haxe_ds_ObjectMap();
	this.fixtures = [];
	this.onProgress = new utest_Dispatcher();
	this.onStart = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	this.onTestStart = new utest_Dispatcher();
	this.onTestComplete = new utest_Dispatcher();
	this.length = 0;
};
utest_Runner.__name__ = "utest.Runner";
utest_Runner.prototype = {
	fixtures: null
	,iTestFixtures: null
	,onProgress: null
	,onStart: null
	,onComplete: null
	,onPrecheck: null
	,onTestStart: null
	,onTestComplete: null
	,length: null
	,globalPattern: null
	,addCase: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(js_Boot.__instanceof(test,utest_ITest)) {
			this.addITest(test,pattern);
		} else {
			this.addCaseOld(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync);
		}
	}
	,addITest: function(testCase,pattern) {
		if(this.iTestFixtures.h.__keys__[testCase.__id__] != null) {
			throw new js__$Boot_HaxeError("Cannot add the same test twice.");
		}
		var fixtures = [];
		var init = testCase.__initializeUtest__();
		var _g = 0;
		var _g1 = init.tests;
		while(_g < _g1.length) {
			var test = _g1[_g];
			++_g;
			if(!this.isTestFixtureName(test.name,["test","spec"],pattern,this.globalPattern)) {
				continue;
			}
			var fixture = utest_TestFixture.ofData(testCase,test,init.accessories);
			this.addFixture(fixture);
			fixtures.push(fixture);
		}
		this.iTestFixtures.set(testCase,{ setupClass : utest_utils_AccessoriesUtils.getSetupClass(init.accessories), fixtures : fixtures, teardownClass : utest_utils_AccessoriesUtils.getTeardownClass(init.accessories)});
	}
	,addCaseOld: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(!Reflect.isObject(test)) {
			throw new js__$Boot_HaxeError("can't add a null object as a test case");
		}
		if(!this.isMethod(test,setup)) {
			setup = null;
		}
		if(!this.isMethod(test,setupAsync)) {
			setupAsync = null;
		}
		if(!this.isMethod(test,teardown)) {
			teardown = null;
		}
		if(!this.isMethod(test,teardownAsync)) {
			teardownAsync = null;
		}
		var fields = Type.getInstanceFields(test == null ? null : js_Boot.getClass(test));
		var _g = 0;
		while(_g < fields.length) {
			var field = fields[_g];
			++_g;
			if(!this.isMethod(test,field)) {
				continue;
			}
			if(!this.isTestFixtureName(field,[prefix],pattern,this.globalPattern)) {
				continue;
			}
			this.addFixture(new utest_TestFixture(test,field,setup,teardown,setupAsync,teardownAsync));
		}
	}
	,isTestFixtureName: function(name,prefixes,pattern,globalPattern) {
		if(pattern == null && globalPattern == null) {
			var _g = 0;
			while(_g < prefixes.length) if(StringTools.startsWith(name,prefixes[_g++])) {
				return true;
			}
			return false;
		}
		if(pattern == null) {
			pattern = globalPattern;
		}
		return pattern.match(name);
	}
	,addFixture: function(fixture) {
		this.fixtures.push(fixture);
		this.length++;
	}
	,getFixture: function(index) {
		return this.fixtures[index];
	}
	,isMethod: function(test,name) {
		try {
			return Reflect.isFunction(Reflect.field(test,name));
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return false;
		}
	}
	,run: function() {
		this.onStart.dispatch(this);
		new utest__$Runner_ITestRunner(this).run();
	}
	,pos: null
	,executedFixtures: null
	,runNext: function(finishedHandler) {
		var _g = this.pos;
		var _g1 = this.fixtures.length;
		while(_g < _g1) {
			++_g;
			var fixture = this.fixtures[this.pos++];
			if(fixture.isITest) {
				continue;
			}
			var handler = this.runFixture(fixture);
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runNext));
				return;
			}
		}
		this.onComplete.dispatch(this);
	}
	,runFixture: function(fixture) {
		var handler = fixture.isITest ? new utest_ITestHandler(fixture) : new utest_TestHandler(fixture);
		handler.onComplete.add($bind(this,this.testComplete));
		handler.onPrecheck.add(($_=this.onPrecheck,$bind($_,$_.dispatch)));
		this.onTestStart.dispatch(handler);
		handler.execute();
		return handler;
	}
	,testComplete: function(h) {
		++this.executedFixtures;
		this.onTestComplete.dispatch(h);
		this.onProgress.dispatch({ result : utest_TestResult.ofHandler(h), done : this.executedFixtures, totals : this.length});
	}
	,__class__: utest_Runner
};
var utest__$Runner_ITestRunner = function(runner) {
	this.runner = runner;
};
utest__$Runner_ITestRunner.__name__ = "utest._Runner.ITestRunner";
utest__$Runner_ITestRunner.prototype = {
	runner: null
	,cases: null
	,currentCase: null
	,currentCaseFixtures: null
	,teardownClass: null
	,setupAsync: null
	,teardownAsync: null
	,run: function() {
		this.cases = this.runner.iTestFixtures.keys();
		this.runCases();
	}
	,runCases: function() {
		while(this.cases.hasNext()) {
			this.currentCase = this.cases.next();
			var data = this.runner.iTestFixtures.h[this.currentCase.__id__];
			this.currentCaseFixtures = data.fixtures;
			this.teardownClass = data.teardownClass;
			try {
				this.setupAsync = data.setupClass();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				this.setupFailed(utest_Assertation.SetupError("setupClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
				return;
			}
			if(this.setupAsync.resolved) {
				if(!this.runFixtures()) {
					return;
				}
			} else {
				this.setupAsync.then($bind(this,this.checkSetup));
				return;
			}
		}
		this.runner.runNext();
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.setupFailed(utest_Assertation.SetupError("setupClass timeout",[]));
		} else {
			this.runFixtures();
		}
	}
	,setupFailed: function(assertation) {
		this.runner.executedFixtures += this.currentCaseFixtures.length;
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedSetupClass(this.currentCase,assertation), done : this.runner.executedFixtures});
		this.runCases();
	}
	,runFixtures: function(finishedHandler) {
		while(this.currentCaseFixtures.length > 0) {
			var handler = this.runner.runFixture(this.currentCaseFixtures.pop());
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runFixtures));
				return false;
			}
		}
		try {
			this.teardownAsync = this.teardownClass();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.teardownFailed(utest_Assertation.TeardownError("tearDownClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
		}
		if(this.teardownAsync.resolved && finishedHandler == null) {
			return true;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
		return false;
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.teardownFailed(utest_Assertation.TeardownError("teardownClass timeout",[]));
		}
		this.runCases();
	}
	,teardownFailed: function(assertation) {
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedTeardownClass(this.currentCase,assertation), done : this.runner.executedFixtures});
	}
	,__class__: utest__$Runner_ITestRunner
};
var utest_AccessoryName = function() { };
utest_AccessoryName.__name__ = "utest.AccessoryName";
var utest_TestFixture = function(target,method,setup,teardown,setupAsync,teardownAsync) {
	this.isITest = false;
	this.target = target;
	this.method = method;
	this.setup = setup;
	this.setupAsync = setupAsync;
	this.teardown = teardown;
	this.teardownAsync = teardownAsync;
	this.ignoringInfo = this.getIgnored();
};
utest_TestFixture.__name__ = "utest.TestFixture";
utest_TestFixture.ofData = function(target,test,accessories) {
	var fixture = new utest_TestFixture(target,test.name);
	fixture.isITest = true;
	fixture.test = test;
	fixture.setupMethod = utest_utils_AccessoriesUtils.getSetup(accessories);
	fixture.teardownMethod = utest_utils_AccessoriesUtils.getTeardown(accessories);
	return fixture;
};
utest_TestFixture.prototype = {
	target: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,ignoringInfo: null
	,isITest: null
	,test: null
	,setupMethod: null
	,teardownMethod: null
	,checkMethod: function(name,arg) {
		var field = Reflect.field(this.target,name);
		if(field == null) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a field of target");
		}
		if(!Reflect.isFunction(field)) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a function");
		}
	}
	,getIgnored: function() {
		var o = this.target;
		var metasForTestMetas = Reflect.getProperty(haxe_rtti_Meta.getFields(o == null ? null : js_Boot.getClass(o)),this.method);
		if(metasForTestMetas == null || !Object.prototype.hasOwnProperty.call(metasForTestMetas,"Ignored")) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored();
		}
		var ignoredArgs = Reflect.getProperty(metasForTestMetas,"Ignored");
		if(ignoredArgs == null || ignoredArgs.length == 0 || ignoredArgs[0] == null) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored();
		}
		return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored(Std.string(ignoredArgs[0]));
	}
	,__class__: utest_TestFixture
};
var utest_TestResult = function() {
};
utest_TestResult.__name__ = "utest.TestResult";
utest_TestResult.ofHandler = function(handler) {
	var r = new utest_TestResult();
	var o = handler.fixture.target;
	var c = o == null ? null : js_Boot.getClass(o);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = handler.fixture.method;
	r.setup = handler.fixture.setup;
	r.setupAsync = handler.fixture.setupAsync;
	r.teardown = handler.fixture.teardown;
	r.teardownAsync = handler.fixture.teardownAsync;
	r.assertations = handler.results;
	return r;
};
utest_TestResult.ofFailedSetupClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var c = testCase == null ? null : js_Boot.getClass(testCase);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.ofFailedTeardownClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var c = testCase == null ? null : js_Boot.getClass(testCase);
	var path = c.__name__.split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.prototype = {
	pack: null
	,cls: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,assertations: null
	,allOk: function() {
		var head = this.assertations.h;
		while(head != null) if(head.item._hx_index == 0) {
			break;
		} else {
			return false;
		}
		return true;
	}
	,__class__: utest_TestResult
};
var utest_ui_Report = function() { };
utest_ui_Report.__name__ = "utest.ui.Report";
utest_ui_Report.create = function(runner,displaySuccessResults,headerDisplayMode) {
	var report;
	if(typeof window != 'undefined') {
		report = new utest_ui_text_HtmlReport(runner,null,true);
	} else {
		report = new utest_ui_text_PrintReport(runner);
	}
	if(null == displaySuccessResults) {
		report.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.ShowSuccessResultsWithNoErrors;
	} else {
		report.displaySuccessResults = displaySuccessResults;
	}
	if(null == headerDisplayMode) {
		report.displayHeader = utest_ui_common_HeaderDisplayMode.ShowHeaderWithResults;
	} else {
		report.displayHeader = headerDisplayMode;
	}
	return report;
};
var utest_ui_common_ClassResult = function(className,setupName,teardownName) {
	this.fixtures = new haxe_ds_StringMap();
	this.className = className;
	this.setupName = setupName;
	this.hasSetup = setupName != null;
	this.teardownName = teardownName;
	this.hasTeardown = teardownName != null;
	this.methods = 0;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_ClassResult.__name__ = "utest.ui.common.ClassResult";
utest_ui_common_ClassResult.prototype = {
	fixtures: null
	,className: null
	,setupName: null
	,teardownName: null
	,hasSetup: null
	,hasTeardown: null
	,methods: null
	,stats: null
	,add: function(result) {
		var key = result.methodName;
		var _this = this.fixtures;
		if(__map_reserved[key] != null ? _this.existsReserved(key) : _this.h.hasOwnProperty(key)) {
			throw new js__$Boot_HaxeError("invalid duplicated fixture: " + this.className + "." + result.methodName);
		}
		this.stats.wire(result.stats);
		this.methods++;
		var key1 = result.methodName;
		var _this1 = this.fixtures;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,result);
		} else {
			_this1.h[key1] = result;
		}
	}
	,get: function(method) {
		var _this = this.fixtures;
		if(__map_reserved[method] != null) {
			return _this.getReserved(method);
		} else {
			return _this.h[method];
		}
	}
	,exists: function(method) {
		var _this = this.fixtures;
		if(__map_reserved[method] != null) {
			return _this.existsReserved(method);
		} else {
			return _this.h.hasOwnProperty(method);
		}
	}
	,methodNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.fixtures.keys();
		while(name.hasNext()) names.push(name.next());
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.get(a).stats;
				var bs = me.get(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,__class__: utest_ui_common_ClassResult
};
var utest_ui_common_FixtureResult = function(methodName) {
	this.methodName = methodName;
	this.list = new haxe_ds_List();
	this.hasTestError = false;
	this.hasSetupError = false;
	this.hasTeardownError = false;
	this.hasTimeoutError = false;
	this.hasAsyncError = false;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_FixtureResult.__name__ = "utest.ui.common.FixtureResult";
utest_ui_common_FixtureResult.prototype = {
	methodName: null
	,hasTestError: null
	,hasSetupError: null
	,hasTeardownError: null
	,hasTimeoutError: null
	,hasAsyncError: null
	,stats: null
	,list: null
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.list.h);
	}
	,add: function(assertation) {
		this.list.add(assertation);
		switch(assertation._hx_index) {
		case 0:
			this.stats.addSuccesses(1);
			break;
		case 1:
			this.stats.addFailures(1);
			break;
		case 2:
			this.stats.addErrors(1);
			break;
		case 3:
			this.stats.addErrors(1);
			this.hasSetupError = true;
			break;
		case 4:
			this.stats.addErrors(1);
			this.hasTeardownError = true;
			break;
		case 5:
			this.stats.addErrors(1);
			this.hasTimeoutError = true;
			break;
		case 6:
			this.stats.addErrors(1);
			this.hasAsyncError = true;
			break;
		case 7:
			this.stats.addWarnings(1);
			break;
		case 8:
			this.stats.addIgnores(1);
			break;
		}
	}
	,__class__: utest_ui_common_FixtureResult
};
var utest_ui_common_HeaderDisplayMode = $hxEnums["utest.ui.common.HeaderDisplayMode"] = { __ename__ : "utest.ui.common.HeaderDisplayMode", __constructs__ : ["AlwaysShowHeader","NeverShowHeader","ShowHeaderWithResults"]
	,AlwaysShowHeader: {_hx_index:0,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,NeverShowHeader: {_hx_index:1,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,ShowHeaderWithResults: {_hx_index:2,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
};
var utest_ui_common_SuccessResultsDisplayMode = $hxEnums["utest.ui.common.SuccessResultsDisplayMode"] = { __ename__ : "utest.ui.common.SuccessResultsDisplayMode", __constructs__ : ["AlwaysShowSuccessResults","NeverShowSuccessResults","ShowSuccessResultsWithNoErrors"]
	,AlwaysShowSuccessResults: {_hx_index:0,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,NeverShowSuccessResults: {_hx_index:1,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,ShowSuccessResultsWithNoErrors: {_hx_index:2,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
};
var utest_ui_common_IReport = function() { };
utest_ui_common_IReport.__name__ = "utest.ui.common.IReport";
utest_ui_common_IReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,setHandler: null
	,__class__: utest_ui_common_IReport
};
var utest_ui_common_PackageResult = function(packageName) {
	this.isEmpty = true;
	this.packageName = packageName;
	this.classes = new haxe_ds_StringMap();
	this.packages = new haxe_ds_StringMap();
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_PackageResult.__name__ = "utest.ui.common.PackageResult";
utest_ui_common_PackageResult.prototype = {
	packageName: null
	,isEmpty: null
	,classes: null
	,packages: null
	,stats: null
	,addResult: function(result,flattenPackage) {
		this.isEmpty = false;
		this.getOrCreateClass(this.getOrCreatePackage(result.pack,flattenPackage,this),result.cls,result.setup,result.teardown).add(this.createFixture(result.method,result.assertations));
	}
	,addClass: function(result) {
		this.isEmpty = false;
		var key = result.className;
		var _this = this.classes;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,result);
		} else {
			_this.h[key] = result;
		}
		this.stats.wire(result.stats);
	}
	,addPackage: function(result) {
		this.isEmpty = false;
		var key = result.packageName;
		var _this = this.packages;
		if(__map_reserved[key] != null) {
			_this.setReserved(key,result);
		} else {
			_this.h[key] = result;
		}
		this.stats.wire(result.stats);
	}
	,existsPackage: function(name) {
		var _this = this.packages;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,existsClass: function(name) {
		var _this = this.classes;
		if(__map_reserved[name] != null) {
			return _this.existsReserved(name);
		} else {
			return _this.h.hasOwnProperty(name);
		}
	}
	,getPackage: function(name) {
		if(this.packageName == null && name == "") {
			return this;
		}
		var _this = this.packages;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,getClass: function(name) {
		var _this = this.classes;
		if(__map_reserved[name] != null) {
			return _this.getReserved(name);
		} else {
			return _this.h[name];
		}
	}
	,classNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.classes.keys();
		while(name.hasNext()) names.push(name.next());
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getClass(a).stats;
				var bs = me.getClass(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,packageNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		if(this.packageName == null) {
			names.push("");
		}
		var name = this.packages.keys();
		while(name.hasNext()) names.push(name.next());
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getPackage(a).stats;
				var bs = me.getPackage(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,createFixture: function(method,assertations) {
		var f = new utest_ui_common_FixtureResult(method);
		var assertation = $getIterator(assertations);
		while(assertation.hasNext()) f.add(assertation.next());
		return f;
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) ref = this.getOrCreatePackage(parts[_g++],true,ref);
			return ref;
		}
	}
	,__class__: utest_ui_common_PackageResult
};
var utest_ui_common_ReportTools = function() { };
utest_ui_common_ReportTools.__name__ = "utest.ui.common.ReportTools";
utest_ui_common_ReportTools.hasHeader = function(report,stats) {
	switch(report.displayHeader._hx_index) {
	case 0:
		return true;
	case 1:
		return false;
	case 2:
		if(!stats.isOk) {
			return true;
		}
		switch(report.displaySuccessResults._hx_index) {
		case 1:
			return false;
		case 0:case 2:
			return true;
		}
		break;
	}
};
utest_ui_common_ReportTools.skipResult = function(report,stats,isOk) {
	if(!stats.isOk) {
		return false;
	}
	switch(report.displaySuccessResults._hx_index) {
	case 0:
		return false;
	case 1:
		return true;
	case 2:
		return !isOk;
	}
};
utest_ui_common_ReportTools.hasOutput = function(report,stats) {
	if(!stats.isOk) {
		return true;
	}
	return utest_ui_common_ReportTools.hasHeader(report,stats);
};
var utest_ui_common_ResultAggregator = function(runner,flattenPackage) {
	if(flattenPackage == null) {
		flattenPackage = false;
	}
	if(runner == null) {
		throw new js__$Boot_HaxeError("runner argument is null");
	}
	this.flattenPackage = flattenPackage;
	this.runner = runner;
	runner.onStart.add($bind(this,this.start));
	runner.onProgress.add($bind(this,this.progress));
	runner.onComplete.add($bind(this,this.complete));
	this.onStart = new utest_Notifier();
	this.onComplete = new utest_Dispatcher();
	this.onProgress = new utest_Dispatcher();
};
utest_ui_common_ResultAggregator.__name__ = "utest.ui.common.ResultAggregator";
utest_ui_common_ResultAggregator.prototype = {
	runner: null
	,flattenPackage: null
	,root: null
	,onStart: null
	,onComplete: null
	,onProgress: null
	,start: function(runner) {
		this.checkNonITest();
		this.root = new utest_ui_common_PackageResult(null);
		this.onStart.dispatch();
	}
	,checkNonITest: function() {
		var first = null;
		var total = 0;
		var _g = 0;
		var _g1 = this.runner.length;
		while(_g < _g1) {
			var fixture = this.runner.getFixture(_g++);
			if(!fixture.isITest) {
				++total;
				if(first == null) {
					var o = fixture.target;
					var c = o == null ? null : js_Boot.getClass(o);
					first = c.__name__;
				}
			}
		}
		if(total > 0) {
			var baseMsg = "implement utest.ITest. Non-ITest tests are deprecated. Implement utest.ITest or extend utest.Test.";
			var msg;
			switch(total) {
			case 1:
				msg = "" + first + " doesn't " + baseMsg;
				break;
			case 2:
				msg = "" + first + " and 1 other don't " + baseMsg;
				break;
			default:
				msg = "" + first + " and " + total + " others don't " + baseMsg;
			}
			haxe_Log.trace(msg,{ fileName : "utest/ui/common/ResultAggregator.hx", lineNumber : 54, className : "utest.ui.common.ResultAggregator", methodName : "checkNonITest"});
		}
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(ref == null) {
			ref = this.root;
		}
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) ref = this.getOrCreatePackage(parts[_g++],true,ref);
			return ref;
		}
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,createFixture: function(result) {
		var f = new utest_ui_common_FixtureResult(result.method);
		var _g_head = result.assertations.h;
		while(_g_head != null) {
			var val = _g_head.item;
			_g_head = _g_head.next;
			f.add(val);
		}
		return f;
	}
	,progress: function(e) {
		this.root.addResult(e.result,this.flattenPackage);
		this.onProgress.dispatch(e);
	}
	,complete: function(runner) {
		if(this.root.isEmpty) {
			this.root.addResult(this.createNoTestsResult(),false);
		}
		this.onComplete.dispatch(this.root);
	}
	,createNoTestsResult: function() {
		var result = new utest_TestResult();
		result.pack = "";
		result.cls = "";
		result.method = "";
		result.assertations = new haxe_ds_List();
		result.assertations.add(utest_Assertation.Failure("No tests executed.",{ fileName : "", lineNumber : 1, className : "utest.Runner", methodName : "run"}));
		return result;
	}
	,__class__: utest_ui_common_ResultAggregator
};
var utest_ui_common_ResultStats = function() {
	this.assertations = 0;
	this.successes = 0;
	this.failures = 0;
	this.errors = 0;
	this.warnings = 0;
	this.ignores = 0;
	this.isOk = true;
	this.hasFailures = false;
	this.hasErrors = false;
	this.hasWarnings = false;
	this.hasIgnores = false;
	this.onAddSuccesses = new utest_Dispatcher();
	this.onAddFailures = new utest_Dispatcher();
	this.onAddErrors = new utest_Dispatcher();
	this.onAddWarnings = new utest_Dispatcher();
	this.onAddIgnores = new utest_Dispatcher();
};
utest_ui_common_ResultStats.__name__ = "utest.ui.common.ResultStats";
utest_ui_common_ResultStats.prototype = {
	assertations: null
	,successes: null
	,failures: null
	,errors: null
	,warnings: null
	,ignores: null
	,onAddSuccesses: null
	,onAddFailures: null
	,onAddErrors: null
	,onAddWarnings: null
	,onAddIgnores: null
	,isOk: null
	,hasFailures: null
	,hasErrors: null
	,hasWarnings: null
	,hasIgnores: null
	,addSuccesses: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.successes += v;
		this.onAddSuccesses.dispatch(v);
	}
	,addFailures: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.failures += v;
		this.hasFailures = this.failures > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddFailures.dispatch(v);
	}
	,addErrors: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.errors += v;
		this.hasErrors = this.errors > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddErrors.dispatch(v);
	}
	,addIgnores: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.ignores += v;
		this.hasIgnores = this.ignores > 0;
		this.onAddIgnores.dispatch(v);
	}
	,addWarnings: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.warnings += v;
		this.hasWarnings = this.warnings > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddWarnings.dispatch(v);
	}
	,sum: function(other) {
		this.addSuccesses(other.successes);
		this.addFailures(other.failures);
		this.addErrors(other.errors);
		this.addWarnings(other.warnings);
		this.addIgnores(other.ignores);
	}
	,subtract: function(other) {
		this.addSuccesses(-other.successes);
		this.addFailures(-other.failures);
		this.addErrors(-other.errors);
		this.addWarnings(-other.warnings);
		this.addIgnores(-other.ignores);
	}
	,wire: function(dependant) {
		dependant.onAddSuccesses.add($bind(this,this.addSuccesses));
		dependant.onAddFailures.add($bind(this,this.addFailures));
		dependant.onAddErrors.add($bind(this,this.addErrors));
		dependant.onAddWarnings.add($bind(this,this.addWarnings));
		dependant.onAddIgnores.add($bind(this,this.addIgnores));
		this.sum(dependant);
	}
	,unwire: function(dependant) {
		dependant.onAddSuccesses.remove($bind(this,this.addSuccesses));
		dependant.onAddFailures.remove($bind(this,this.addFailures));
		dependant.onAddErrors.remove($bind(this,this.addErrors));
		dependant.onAddWarnings.remove($bind(this,this.addWarnings));
		dependant.onAddIgnores.remove($bind(this,this.addIgnores));
		this.subtract(dependant);
	}
	,__class__: utest_ui_common_ResultStats
};
var utest_ui_text_HtmlReport = function(runner,outputHandler,traceRedirected) {
	if(traceRedirected == null) {
		traceRedirected = true;
	}
	this.aggregator = new utest_ui_common_ResultAggregator(runner,true);
	runner.onStart.add($bind(this,this.start));
	this.aggregator.onComplete.add($bind(this,this.complete));
	if(null == outputHandler) {
		this.setHandler($bind(this,this._handler));
	} else {
		this.setHandler(outputHandler);
	}
	if(traceRedirected) {
		this.redirectTrace();
	}
	this.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.AlwaysShowSuccessResults;
	this.displayHeader = utest_ui_common_HeaderDisplayMode.AlwaysShowHeader;
};
utest_ui_text_HtmlReport.__name__ = "utest.ui.text.HtmlReport";
utest_ui_text_HtmlReport.__interfaces__ = [utest_ui_common_IReport];
utest_ui_text_HtmlReport.prototype = {
	traceRedirected: null
	,displaySuccessResults: null
	,displayHeader: null
	,handler: null
	,aggregator: null
	,oldTrace: null
	,_traces: null
	,setHandler: function(handler) {
		this.handler = handler;
	}
	,redirectTrace: function() {
		if(this.traceRedirected) {
			return;
		}
		this._traces = [];
		this.oldTrace = haxe_Log.trace;
		haxe_Log.trace = $bind(this,this._trace);
	}
	,restoreTrace: function() {
		if(!this.traceRedirected) {
			return;
		}
		haxe_Log.trace = this.oldTrace;
	}
	,_traceTime: null
	,_trace: function(v,infos) {
		var time = Date.now() / 1000;
		var delta = this._traceTime == null ? 0 : time - this._traceTime;
		this._traces.push({ msg : StringTools.htmlEscape(Std.string(v)), infos : infos, time : time - this.startTime, delta : delta, stack : haxe_CallStack.callStack()});
		this._traceTime = Date.now() / 1000;
	}
	,startTime: null
	,start: function(e) {
		this.startTime = Date.now() / 1000;
	}
	,cls: function(stats) {
		if(stats.hasErrors) {
			return "error";
		} else if(stats.hasFailures) {
			return "failure";
		} else if(stats.hasWarnings) {
			return "warn";
		} else {
			return "ok";
		}
	}
	,resultNumbers: function(buf,stats) {
		var numbers = [];
		if(stats.assertations == 1) {
			numbers.push("<strong>1</strong> test");
		} else {
			numbers.push("<strong>" + stats.assertations + "</strong> tests");
		}
		if(stats.successes != stats.assertations) {
			if(stats.successes == 1) {
				numbers.push("<strong>1</strong> pass");
			} else if(stats.successes > 0) {
				numbers.push("<strong>" + stats.successes + "</strong> passes");
			}
		}
		if(stats.errors == 1) {
			numbers.push("<strong>1</strong> error");
		} else if(stats.errors > 0) {
			numbers.push("<strong>" + stats.errors + "</strong> errors");
		}
		if(stats.failures == 1) {
			numbers.push("<strong>1</strong> failure");
		} else if(stats.failures > 0) {
			numbers.push("<strong>" + stats.failures + "</strong> failures");
		}
		if(stats.warnings == 1) {
			numbers.push("<strong>1</strong> warning");
		} else if(stats.warnings > 0) {
			numbers.push("<strong>" + stats.warnings + "</strong> warnings");
		}
		var x = numbers.join(", ");
		buf.b += Std.string(x);
	}
	,blockNumbers: function(buf,stats) {
		buf.b += Std.string("<div class=\"" + this.cls(stats) + "bg statnumbers\">");
		this.resultNumbers(buf,stats);
		buf.b += "</div>";
	}
	,formatStack: function(stack,addNL) {
		if(addNL == null) {
			addNL = true;
		}
		var parts = [];
		var nl = addNL ? "\n" : "";
		var last = null;
		var count = 1;
		var _g = 0;
		var _g1 = haxe_CallStack.toString(stack).split("\n");
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			if(StringTools.trim(part) == "") {
				continue;
			}
			if(-1 < part.indexOf("Called from utest.")) {
				continue;
			}
			if(part == last) {
				parts[parts.length - 1] = part + " (#" + ++count + ")";
			} else {
				count = 1;
				last = part;
				parts.push(part);
			}
		}
		return "<div>" + ("<ul><li>" + parts.join("</li>" + nl + "<li>") + "</li></ul>" + nl) + "</div>" + nl;
	}
	,addFixture: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.b += "<li class=\"fixture\"><div class=\"li\">";
		buf.b += Std.string("<span class=\"" + this.cls(result.stats) + "bg fixtureresult\">");
		if(result.stats.isOk) {
			buf.b += "OK ";
		} else if(result.stats.hasErrors) {
			buf.b += "ERROR ";
		} else if(result.stats.hasFailures) {
			buf.b += "FAILURE ";
		} else if(result.stats.hasWarnings) {
			buf.b += "WARNING ";
		}
		buf.b = (buf.b += "</span>") + "<div class=\"fixturedetails\">";
		buf.b = (buf.b += Std.string("<strong>" + name + "</strong>")) + ": ";
		this.resultNumbers(buf,result.stats);
		var messages = [];
		var _g = result.iterator();
		while(_g.head != null) {
			var val = _g.head.item;
			_g.head = _g.head.next;
			switch(val._hx_index) {
			case 0:
				break;
			case 1:
				messages.push("<strong>line " + val.pos.lineNumber + "</strong>: <em>" + StringTools.htmlEscape(val.msg) + "</em>");
				break;
			case 2:
				var e = val.e;
				messages.push("<strong>error</strong>: <em>" + this.getErrorDescription(e) + "</em>\n<br/><strong>stack</strong>:" + this.getErrorStack(val.stack,e));
				break;
			case 3:
				var e1 = val.e;
				messages.push("<strong>setup error</strong>: " + this.getErrorDescription(e1) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(val.stack,e1));
				break;
			case 4:
				var e2 = val.e;
				messages.push("<strong>tear-down error</strong>: " + this.getErrorDescription(e2) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(val.stack,e2));
				break;
			case 5:
				messages.push("<strong>missed async call(s)</strong>: " + val.missedAsyncs);
				break;
			case 6:
				var e3 = val.e;
				messages.push("<strong>async error</strong>: " + this.getErrorDescription(e3) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(val.stack,e3));
				break;
			case 7:
				messages.push(StringTools.htmlEscape(val.msg));
				break;
			case 8:
				messages.push(StringTools.htmlEscape(val.reason));
				break;
			}
		}
		if(messages.length > 0) {
			buf.b += "<div class=\"testoutput\">";
			var x = messages.join("<br/>");
			buf.b += Std.string(x);
			buf.b += "</div>\n";
		}
		buf.b = (buf.b += "</div>\n") + "</div></li>\n";
	}
	,getErrorDescription: function(e) {
		return Std.string(e);
	}
	,getErrorStack: function(s,e) {
		return this.formatStack(s);
	}
	,addClass: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.b = (buf.b += "<li>") + Std.string("<h2 class=\"classname\">" + name + "</h2>");
		this.blockNumbers(buf,result.stats);
		buf.b += "<ul>\n";
		var _g = 0;
		var _g1 = result.methodNames();
		while(_g < _g1.length) {
			var mname = _g1[_g];
			++_g;
			this.addFixture(buf,result.get(mname),mname,isOk);
		}
		buf.b = (buf.b += "</ul>\n") + "</li>\n";
	}
	,addPackages: function(buf,result,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.b += "<ul id=\"utest-results-packages\">\n";
		var _g = 0;
		var _g1 = result.packageNames(false);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			this.addPackage(buf,result.getPackage(name),name,isOk);
		}
		buf.b += "</ul>\n";
	}
	,addPackage: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		if(name == "" && result.classNames().length == 0) {
			return;
		}
		buf.b = (buf.b += "<li>") + Std.string("<h2>" + name + "</h2>");
		this.blockNumbers(buf,result.stats);
		buf.b += "<ul>\n";
		var _g = 0;
		var _g1 = result.classNames();
		while(_g < _g1.length) {
			var cname = _g1[_g];
			++_g;
			this.addClass(buf,result.getClass(cname),cname,isOk);
		}
		buf.b = (buf.b += "</ul>\n") + "</li>\n";
	}
	,getTextResults: function() {
		var newline = "\n";
		var indents = function(count) {
			var _g = [];
			var _g1 = 0;
			while(_g1 < count) {
				++_g1;
				_g.push("  ");
			}
			return _g.join("");
		};
		var dumpStack = function(stack) {
			if(stack.length == 0) {
				return "";
			}
			var parts = haxe_CallStack.toString(stack).split("\n");
			var r = [];
			var _g2 = 0;
			while(_g2 < parts.length) {
				var part = parts[_g2];
				++_g2;
				if(part.indexOf(" utest.") >= 0) {
					continue;
				}
				r.push(part);
			}
			return r.join(newline);
		};
		var buf_b = "";
		var _g3 = 0;
		var _g11 = this.result.packageNames();
		while(_g3 < _g11.length) {
			var pname = _g11[_g3];
			++_g3;
			var pack = this.result.getPackage(pname);
			if(utest_ui_common_ReportTools.skipResult(this,pack.stats,this.result.stats.isOk)) {
				continue;
			}
			var _g4 = 0;
			var _g12 = pack.classNames();
			while(_g4 < _g12.length) {
				var cname = _g12[_g4];
				++_g4;
				var cls = pack.getClass(cname);
				if(utest_ui_common_ReportTools.skipResult(this,cls.stats,this.result.stats.isOk)) {
					continue;
				}
				buf_b += Std.string((pname == "" ? "" : pname + ".") + cname + newline);
				var _g5 = 0;
				var _g13 = cls.methodNames();
				while(_g5 < _g13.length) {
					var mname = _g13[_g5];
					++_g5;
					var fix = cls.get(mname);
					if(utest_ui_common_ReportTools.skipResult(this,fix.stats,this.result.stats.isOk)) {
						continue;
					}
					buf_b += Std.string(indents(1) + mname + ": ");
					if(fix.stats.isOk) {
						buf_b += "OK ";
					} else if(fix.stats.hasErrors) {
						buf_b += "ERROR ";
					} else if(fix.stats.hasFailures) {
						buf_b += "FAILURE ";
					} else if(fix.stats.hasWarnings) {
						buf_b += "WARNING ";
					}
					var messages = "";
					var _g6 = fix.iterator();
					while(_g6.head != null) {
						var val = _g6.head.item;
						_g6.head = _g6.head.next;
						switch(val._hx_index) {
						case 0:
							buf_b += ".";
							break;
						case 1:
							buf_b += "F";
							messages += indents(2) + "line: " + val.pos.lineNumber + ", " + val.msg + newline;
							break;
						case 2:
							buf_b += "E";
							messages += indents(2) + Std.string(val.e) + dumpStack(val.stack) + newline;
							break;
						case 3:
							buf_b += "S";
							messages += indents(2) + Std.string(val.e) + dumpStack(val.stack) + newline;
							break;
						case 4:
							buf_b += "T";
							messages += indents(2) + Std.string(val.e) + dumpStack(val.stack) + newline;
							break;
						case 5:
							buf_b += "O";
							messages += indents(2) + "missed async calls: " + val.missedAsyncs + dumpStack(val.stack) + newline;
							break;
						case 6:
							buf_b += "A";
							messages += indents(2) + Std.string(val.e) + dumpStack(val.stack) + newline;
							break;
						case 7:
							buf_b += "W";
							messages += indents(2) + val.msg + newline;
							break;
						case 8:
							var reason = val.reason;
							buf_b += "I";
							if(reason != null && reason != "") {
								messages += indents(2) + ("With reason: " + reason) + newline;
							}
							break;
						}
					}
					buf_b += newline == null ? "null" : "" + newline;
					buf_b += messages == null ? "null" : "" + messages;
				}
			}
		}
		return buf_b;
	}
	,getHeader: function() {
		var buf = new StringBuf();
		if(!utest_ui_common_ReportTools.hasHeader(this,this.result.stats)) {
			return "";
		}
		var time = ((Date.now() / 1000 - this.startTime) * 1000 | 0) / 1000;
		var msg = "TEST OK";
		if(this.result.stats.hasErrors) {
			msg = "TEST ERRORS";
		} else if(this.result.stats.hasFailures) {
			msg = "TEST FAILED";
		} else if(this.result.stats.hasWarnings) {
			msg = "WARNING REPORTED";
		}
		buf.b = (buf.b += Std.string("<h1 class=\"" + this.cls(this.result.stats) + "bg header\">" + msg + "</h1>\n")) + "<div class=\"headerinfo\">";
		this.resultNumbers(buf,this.result.stats);
		buf.b += Std.string(" performed on <strong>" + utest_ui_text_HtmlReport.platform + "</strong>, executed in <strong> " + time + " sec. </strong></div >\n ");
		return buf.b;
	}
	,getTrace: function() {
		var buf_b = "";
		if(this._traces == null || this._traces.length == 0) {
			return "";
		}
		buf_b = "<div class=\"trace\"><h2>traces</h2><ol>";
		var _g = 0;
		var _g1 = this._traces;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			buf_b += "<li><div class=\"li\">";
			var stack = StringTools.replace(this.formatStack(t.stack,false),"'","\\'");
			var method = "<span class=\"tracepackage\">" + t.infos.className + "</span><br/>" + t.infos.methodName + "(" + t.infos.lineNumber + ")";
			buf_b += Std.string("<span class=\"tracepos\" onmouseover=\"utestTooltip(this.parentNode, '" + stack + "')\" onmouseout=\"utestRemoveTooltip()\">");
			buf_b += method == null ? "null" : "" + method;
			buf_b += "</span><span class=\"tracetime\">";
			buf_b += Std.string("@ " + this.formatTime(t.time));
			if(Math.round(t.delta * 1000) > 0) {
				buf_b += Std.string(", ~" + this.formatTime(t.delta));
			}
			buf_b += "</span><span class=\"tracemsg\">";
			buf_b += Std.string(StringTools.replace(StringTools.trim(t.msg),"\n","<br/>\n"));
			buf_b += "</span><div class=\"clr\"></div></div></li>";
		}
		buf_b += "</ol></div>";
		return buf_b;
	}
	,getResults: function() {
		var buf = new StringBuf();
		this.addPackages(buf,this.result,this.result.stats.isOk);
		return buf.b;
	}
	,getAll: function() {
		if(!utest_ui_common_ReportTools.hasOutput(this,this.result.stats)) {
			return "";
		} else {
			return this.getHeader() + this.getTrace() + this.getResults();
		}
	}
	,getHtml: function(title) {
		if(null == title) {
			title = "utest: " + utest_ui_text_HtmlReport.platform;
		}
		var s = this.getAll();
		if("" == s) {
			return "";
		} else {
			return this.wrapHtml(title,s);
		}
	}
	,result: null
	,complete: function(result) {
		this.result = result;
		this.handler(this);
		this.restoreTrace();
		var exposedResult = { isOk : result.stats.isOk, message : this.getTextResults()};
		if('undefined' != typeof window) {
			window.utest_result = exposedResult;
		}
	}
	,formatTime: function(t) {
		return Math.round(t * 1000) + " ms";
	}
	,cssStyle: function() {
		return "body, dd, dt {\n  font-family: Verdana, Arial, Sans-serif;\n  font-size: 12px;\n}\ndl {\n  width: 180px;\n}\ndd, dt {\n  margin : 0;\n  padding : 2px 5px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n}\ndd.value {\n  text-align: center;\n  background-color: #eeeeee;\n}\ndt {\n  text-align: left;\n  background-color: #e6e6e6;\n  float: left;\n  width: 100px;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1 {\n  text-align: center;\n  font-weight: bold;\n  padding: 5px 0 4px 0;\n  font-family: Arial, Sans-serif;\n  font-size: 18px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  margin: 0 2px 0px 2px;\n}\n\nh2 {\n  font-weight: bold;\n  padding: 2px 0 2px 8px;\n  font-family: Arial, Sans-serif;\n  font-size: 13px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  margin: 0 0 0px 0;\n  background-color: #FFFFFF;\n  color: #777777;\n}\n\nh2.classname {\n  color: #000000;\n}\n\n.okbg {\n  background-color: #66FF55;\n}\n.errorbg {\n  background-color: #CC1100;\n}\n.failurebg {\n  background-color: #EE3322;\n}\n.warnbg {\n  background-color: #FFCC99;\n}\n.headerinfo {\n  text-align: right;\n  font-size: 11px;\n  font - color: 0xCCCCCC;\n  margin: 0 2px 5px 2px;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  padding: 2px;\n}\n\nli {\n  padding: 4px;\n  margin: 2px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  background-color: #e6e6e6;\n}\n\nli.fixture {\n  background-color: #f6f6f6;\n  padding-bottom: 6px;\n}\n\ndiv.fixturedetails {\n  padding-left: 108px;\n}\n\nul {\n  padding: 0;\n  margin: 6px 0 0 0;\n  list-style-type: none;\n}\n\nol {\n  padding: 0 0 0 28px;\n  margin: 0px 0 0 0;\n}\n\n.statnumbers {\n  padding: 2px 8px;\n}\n\n.fixtureresult {\n  width: 100px;\n  text-align: center;\n  display: block;\n  float: left;\n  font-weight: bold;\n  padding: 1px;\n  margin: 0 0 0 0;\n}\n\n.testoutput {\n  border: 1px dashed #CCCCCC;\n  margin: 4px 0 0 0;\n  padding: 4px 8px;\n  background-color: #eeeeee;\n}\n\nspan.tracepos, span.traceposempty {\n  display: block;\n  float: left;\n  font-weight: bold;\n  font-size: 9px;\n  width: 170px;\n  margin: 2px 0 0 2px;\n}\n\nspan.tracepos:hover {\n  cursor : pointer;\n  background-color: #ffff99;\n}\n\nspan.tracemsg {\n  display: block;\n  margin-left: 180px;\n  background-color: #eeeeee;\n  padding: 7px;\n}\n\nspan.tracetime {\n  display: block;\n  float: right;\n  margin: 2px;\n  font-size: 9px;\n  color: #777777;\n}\n\n\ndiv.trace ol {\n  padding: 0 0 0 40px;\n  color: #777777;\n}\n\ndiv.trace li {\n  padding: 0;\n}\n\ndiv.trace li div.li {\n  color: #000000;\n}\n\ndiv.trace h2 {\n  margin: 0 2px 0px 2px;\n  padding-left: 4px;\n}\n\n.tracepackage {\n  color: #777777;\n  font-weight: normal;\n}\n\n.clr {\n  clear: both;\n}\n\n#utesttip {\n  margin-top: -3px;\n  margin-left: 170px;\n  font-size: 9px;\n}\n\n#utesttip li {\n  margin: 0;\n  background-color: #ffff99;\n  padding: 2px 4px;\n  border: 0;\n  border-bottom: 1px dashed #ffff33;\n}";
	}
	,jsScript: function() {
		return "function utestTooltip(ref, text) {\n  var el = document.getElementById(\"utesttip\");\n  if(!el) {\n    var el = document.createElement(\"div\")\n    el.id = \"utesttip\";\n    el.style.position = \"absolute\";\n    document.body.appendChild(el)\n  }\n  var p = utestFindPos(ref);\n  el.style.left = (4 + p[0]) + \"px\";\n  el.style.top = (p[1] - 1) + \"px\";\n  el.innerHTML =  text;\n}\n\nfunction utestFindPos(el) {\n  var left = 0;\n  var top = 0;\n  do {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n  } while(el = el.offsetParent)\n  return [left, top];\n}\n\nfunction utestRemoveTooltip() {\n  var el = document.getElementById(\"utesttip\")\n  if(el)\n    document.body.removeChild(el)\n}";
	}
	,wrapHtml: function(title,s) {
		return "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n<title>" + title + "</title>\n      <style type=\"text/css\">" + this.cssStyle() + "</style>\n      <script type=\"text/javascript\">\n" + this.jsScript() + "\n</" + "script>\n</head>\n      <body>\n" + s + "\n</body>\n</html>";
	}
	,_handler: function(report) {
		var _gthis = this;
		if(window.document.readyState == "loading") {
			var onReadyStateChange = null;
			onReadyStateChange = function() {
				if(window.document.readyState != "loading") {
					window.document.removeEventListener("readystatechange",onReadyStateChange);
					_gthis._handler(report);
				}
			};
			window.document.addEventListener("readystatechange",onReadyStateChange);
			return;
		}
		var isDef = function(v) {
			return typeof v != 'undefined';
		};
		var hasProcess = typeof process != 'undefined';
		if(hasProcess) {
			process.stdout.write(report.getHtml());
			return;
		}
		var head = window.document.getElementsByTagName("head")[0];
		var script = window.document.createElement("script");
		script.type = "text/javascript";
		var sjs = report.jsScript();
		if(isDef(script.text)) {
			script.text = sjs;
		} else {
			script.innerHTML = sjs;
		}
		head.appendChild(script);
		var style = window.document.createElement("style");
		style.type = "text/css";
		var scss = report.cssStyle();
		if(isDef(style.styleSheet)) {
			style.styleSheet.cssText = scss;
		} else if(isDef(style.cssText)) {
			style.cssText = scss;
		} else if(isDef(style.innerText)) {
			style.innerText = scss;
		} else {
			style.innerHTML = scss;
		}
		head.appendChild(style);
		var el = window.document.getElementById("utest-results");
		if(null == el) {
			el = window.document.createElement("div");
			el.id = "utest-results";
			window.document.body.appendChild(el);
		}
		el.innerHTML = report.getAll();
	}
	,__class__: utest_ui_text_HtmlReport
};
var utest_ui_text_PlainTextReport = function(runner,outputHandler) {
	this.aggregator = new utest_ui_common_ResultAggregator(runner,true);
	runner.onStart.add($bind(this,this.start));
	this.aggregator.onComplete.add($bind(this,this.complete));
	if(null != outputHandler) {
		this.setHandler(outputHandler);
	}
	this.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.AlwaysShowSuccessResults;
	this.displayHeader = utest_ui_common_HeaderDisplayMode.AlwaysShowHeader;
};
utest_ui_text_PlainTextReport.__name__ = "utest.ui.text.PlainTextReport";
utest_ui_text_PlainTextReport.__interfaces__ = [utest_ui_common_IReport];
utest_ui_text_PlainTextReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,handler: null
	,aggregator: null
	,newline: null
	,indent: null
	,setHandler: function(handler) {
		this.handler = handler;
	}
	,startTime: null
	,start: function(e) {
		this.startTime = this.getTime();
	}
	,getTime: function() {
		return Date.now() / 1000;
	}
	,indents: function(c) {
		var s = "";
		while(--c >= 0) s += this.indent;
		return s;
	}
	,dumpStack: function(stack) {
		if(stack.length == 0) {
			return "";
		}
		var parts = haxe_CallStack.toString(stack).split("\n");
		var r = [];
		var _g = 0;
		while(_g < parts.length) {
			var part = parts[_g];
			++_g;
			if(part.indexOf(" utest.") >= 0) {
				continue;
			}
			r.push(part);
		}
		return r.join(this.newline);
	}
	,addHeader: function(buf,result) {
		if(!utest_ui_common_ReportTools.hasHeader(this,result.stats)) {
			return;
		}
		var time = ((this.getTime() - this.startTime) * 1000 | 0) / 1000;
		buf.b += Std.string("\nassertations: " + result.stats.assertations + this.newline);
		buf.b += Std.string("successes: " + result.stats.successes + this.newline);
		buf.b += Std.string("errors: " + result.stats.errors + this.newline);
		buf.b += Std.string("failures: " + result.stats.failures + this.newline);
		buf.b += Std.string("warnings: " + result.stats.warnings + this.newline);
		buf.b += Std.string("execution time: " + time + this.newline);
		buf.b += Std.string(this.newline);
		buf.b += Std.string("results: " + (result.stats.isOk ? "ALL TESTS OK (success: true)" : "SOME TESTS FAILURES (success: false)"));
		buf.b += Std.string(this.newline);
	}
	,result: null
	,getResults: function() {
		var buf = new StringBuf();
		this.addHeader(buf,this.result);
		var _g = 0;
		var _g1 = this.result.packageNames();
		while(_g < _g1.length) {
			var pname = _g1[_g];
			++_g;
			var pack = this.result.getPackage(pname);
			if(utest_ui_common_ReportTools.skipResult(this,pack.stats,this.result.stats.isOk)) {
				continue;
			}
			var _g2 = 0;
			var _g11 = pack.classNames();
			while(_g2 < _g11.length) {
				var cname = _g11[_g2];
				++_g2;
				var cls = pack.getClass(cname);
				if(utest_ui_common_ReportTools.skipResult(this,cls.stats,this.result.stats.isOk)) {
					continue;
				}
				buf.b += Std.string((pname == "" ? "" : pname + ".") + cname + this.newline);
				var _g3 = 0;
				var _g12 = cls.methodNames();
				while(_g3 < _g12.length) {
					var mname = _g12[_g3];
					++_g3;
					var fix = cls.get(mname);
					if(utest_ui_common_ReportTools.skipResult(this,fix.stats,this.result.stats.isOk)) {
						continue;
					}
					buf.b += Std.string(this.indents(1) + mname + ": ");
					if(fix.stats.isOk) {
						buf.b += "OK ";
					} else if(fix.stats.hasErrors) {
						buf.b += "ERROR ";
					} else if(fix.stats.hasFailures) {
						buf.b += "FAILURE ";
					} else if(fix.stats.hasWarnings) {
						buf.b += "WARNING ";
					}
					var messages = "";
					var _g4 = fix.iterator();
					while(_g4.head != null) {
						var val = _g4.head.item;
						_g4.head = _g4.head.next;
						switch(val._hx_index) {
						case 0:
							buf.b += ".";
							break;
						case 1:
							buf.b += "F";
							messages += this.indents(2) + "line: " + val.pos.lineNumber + ", " + val.msg + this.newline;
							break;
						case 2:
							buf.b += "E";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 3:
							buf.b += "S";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 4:
							buf.b += "T";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 5:
							buf.b += "O";
							messages += this.indents(2) + "missed async calls: " + val.missedAsyncs + this.dumpStack(val.stack) + this.newline;
							break;
						case 6:
							buf.b += "A";
							messages += this.indents(2) + Std.string(val.e) + this.dumpStack(val.stack) + this.newline;
							break;
						case 7:
							buf.b += "W";
							messages += this.indents(2) + val.msg + this.newline;
							break;
						case 8:
							var reason = val.reason;
							buf.b += "I";
							if(reason != null && reason != "") {
								messages += this.indents(2) + ("With reason: " + reason) + this.newline;
							}
							break;
						}
					}
					buf.b = (buf.b += Std.string(this.newline)) + (messages == null ? "null" : "" + messages);
				}
			}
		}
		return buf.b;
	}
	,complete: function(result) {
		this.result = result;
		if(this.handler != null) {
			this.handler(this);
		}
		if(typeof phantom != "undefined") {
			phantom.exit(result.stats.isOk ? 0 : 1);
		}
		if(typeof process != "undefined") {
			process.exit(result.stats.isOk ? 0 : 1);
		}
	}
	,__class__: utest_ui_text_PlainTextReport
};
var utest_ui_text_PrintReport = function(runner) {
	utest_ui_text_PlainTextReport.call(this,runner,$bind(this,this._handler));
	this.newline = "\n";
	this.indent = "  ";
};
utest_ui_text_PrintReport.__name__ = "utest.ui.text.PrintReport";
utest_ui_text_PrintReport.__super__ = utest_ui_text_PlainTextReport;
utest_ui_text_PrintReport.prototype = $extend(utest_ui_text_PlainTextReport.prototype,{
	_handler: function(report) {
		this._trace(report.getResults());
	}
	,_trace: function(s) {
		s = StringTools.replace(s,"  ",this.indent);
		s = StringTools.replace(s,"\n",this.newline);
		haxe_Log.trace(s,{ fileName : "utest/ui/text/PrintReport.hx", lineNumber : 52, className : "utest.ui.text.PrintReport", methodName : "_trace"});
	}
	,__class__: utest_ui_text_PrintReport
});
var utest_utils_AccessoriesUtils = function() { };
utest_utils_AccessoriesUtils.__name__ = "utest.utils.AccessoriesUtils";
utest_utils_AccessoriesUtils.getSetupClass = function(accessories) {
	if(accessories.setupClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setupClass;
	}
};
utest_utils_AccessoriesUtils.getSetup = function(accessories) {
	if(accessories.setup == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setup;
	}
};
utest_utils_AccessoriesUtils.getTeardown = function(accessories) {
	if(accessories.teardown == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardown;
	}
};
utest_utils_AccessoriesUtils.getTeardownClass = function(accessories) {
	if(accessories.teardownClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardownClass;
	}
};
var utest_utils_AsyncUtils = function() { };
utest_utils_AsyncUtils.__name__ = "utest.utils.AsyncUtils";
utest_utils_AsyncUtils.orResolved = function(async) {
	if(async == null) {
		return utest_Async.getResolved();
	} else {
		return async;
	}
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
postite_dro_Coords.notclockcircle = [{ x : 595., y : 225., press : -1.},{ x : 593., y : 225., press : 1.},{ x : 587., y : 225., press : 1.},{ x : 583., y : 225., press : 1.},{ x : 571., y : 225., press : 1.},{ x : 566., y : 225., press : 1.},{ x : 562., y : 225., press : 1.},{ x : 558., y : 225., press : 1.},{ x : 553., y : 225., press : 1.},{ x : 548., y : 226., press : 1.},{ x : 544., y : 228., press : 1.},{ x : 540., y : 230., press : 1.},{ x : 535., y : 232., press : 1.},{ x : 530., y : 235., press : 1.},{ x : 527., y : 237., press : 1.},{ x : 523., y : 239., press : 1.},{ x : 519., y : 242., press : 1.},{ x : 515., y : 245., press : 1.},{ x : 513., y : 247., press : 1.},{ x : 510., y : 250., press : 1.},{ x : 503., y : 256., press : 1.},{ x : 501., y : 259., press : 1.},{ x : 496., y : 264., press : 1.},{ x : 494., y : 267., press : 1.},{ x : 492., y : 270., press : 1.},{ x : 490., y : 273., press : 1.},{ x : 489., y : 276., press : 1.},{ x : 487., y : 280., press : 1.},{ x : 486., y : 283., press : 1.},{ x : 485., y : 287., press : 1.},{ x : 485., y : 294., press : 1.},{ x : 485., y : 297., press : 1.},{ x : 485., y : 302., press : 1.},{ x : 485., y : 306., press : 1.},{ x : 487., y : 313., press : 1.},{ x : 487., y : 316., press : 1.},{ x : 489., y : 319., press : 1.},{ x : 489., y : 322., press : 1.},{ x : 490., y : 326., press : 1.},{ x : 491., y : 329., press : 1.},{ x : 493., y : 332., press : 1.},{ x : 493., y : 335., press : 1.},{ x : 496., y : 341., press : 1.},{ x : 497., y : 345., press : 1.},{ x : 500., y : 347., press : 1.},{ x : 501., y : 349., press : 1.},{ x : 503., y : 350., press : 1.},{ x : 506., y : 352., press : 1.},{ x : 508., y : 354., press : 1.},{ x : 510., y : 354., press : 1.},{ x : 512., y : 356., press : 1.},{ x : 514., y : 357., press : 1.},{ x : 516., y : 357., press : 1.},{ x : 518., y : 358., press : 1.},{ x : 520., y : 359., press : 1.},{ x : 522., y : 360., press : 1.},{ x : 524., y : 361., press : 1.},{ x : 526., y : 363., press : 1.},{ x : 529., y : 365., press : 1.},{ x : 531., y : 365., press : 1.},{ x : 533., y : 365., press : 1.},{ x : 537., y : 367., press : 1.},{ x : 540., y : 368., press : 1.},{ x : 542., y : 368., press : 1.},{ x : 544., y : 369., press : 1.},{ x : 547., y : 370., press : 1.},{ x : 549., y : 370., press : 1.},{ x : 551., y : 370., press : 1.},{ x : 553., y : 370., press : 1.},{ x : 556., y : 370., press : 1.},{ x : 559., y : 370., press : 1.},{ x : 564., y : 370., press : 1.},{ x : 572., y : 370., press : 1.},{ x : 576., y : 370., press : 1.},{ x : 579., y : 369., press : 1.},{ x : 582., y : 369., press : 1.},{ x : 585., y : 368., press : 1.},{ x : 588., y : 368., press : 1.},{ x : 593., y : 367., press : 1.},{ x : 596., y : 367., press : 1.},{ x : 603., y : 363., press : 1.},{ x : 609., y : 361., press : 1.},{ x : 612., y : 361., press : 1.},{ x : 615., y : 361., press : 1.},{ x : 616., y : 361., press : 1.},{ x : 620., y : 361., press : 1.},{ x : 622., y : 361., press : 1.},{ x : 624., y : 361., press : 1.},{ x : 626., y : 361., press : 1.},{ x : 628., y : 361., press : 1.},{ x : 629., y : 361., press : 1.},{ x : 636., y : 359., press : 1.},{ x : 643., y : 353., press : 1.},{ x : 645., y : 352., press : 1.},{ x : 648., y : 350., press : 1.},{ x : 650., y : 350., press : 1.},{ x : 651., y : 348., press : 1.},{ x : 655., y : 344., press : 1.},{ x : 656., y : 343., press : 1.},{ x : 657., y : 340., press : 1.},{ x : 659., y : 338., press : 1.},{ x : 660., y : 335., press : 1.},{ x : 661., y : 333., press : 1.},{ x : 662., y : 331., press : 1.},{ x : 663., y : 329., press : 1.},{ x : 663., y : 327., press : 1.},{ x : 663., y : 325., press : 1.},{ x : 663., y : 324., press : 1.},{ x : 663., y : 321., press : 1.},{ x : 663., y : 320., press : 1.},{ x : 663., y : 316., press : 1.},{ x : 663., y : 308., press : 1.},{ x : 663., y : 305., press : 1.},{ x : 663., y : 302., press : 1.},{ x : 663., y : 299., press : 1.},{ x : 663., y : 297., press : 1.},{ x : 663., y : 295., press : 1.},{ x : 663., y : 293., press : 1.},{ x : 663., y : 288., press : 1.},{ x : 663., y : 283., press : 1.},{ x : 663., y : 281., press : 1.},{ x : 662., y : 279., press : 1.},{ x : 662., y : 278., press : 1.},{ x : 661., y : 276., press : 1.},{ x : 661., y : 273., press : 1.},{ x : 660., y : 271., press : 1.},{ x : 660., y : 270., press : 1.},{ x : 659., y : 268., press : 1.},{ x : 658., y : 267., press : 1.},{ x : 655., y : 264., press : 1.},{ x : 654., y : 262., press : 1.},{ x : 651., y : 259., press : 1.},{ x : 650., y : 258., press : 1.},{ x : 649., y : 256., press : 1.},{ x : 648., y : 254., press : 1.},{ x : 647., y : 253., press : 1.},{ x : 646., y : 252., press : 1.},{ x : 644., y : 251., press : 1.},{ x : 643., y : 250., press : 1.},{ x : 642., y : 249., press : 1.},{ x : 641., y : 248., press : 1.},{ x : 640., y : 247., press : 1.},{ x : 639., y : 247., press : 1.},{ x : 638., y : 246., press : 1.},{ x : 637., y : 245., press : 1.},{ x : 636., y : 244., press : 1.},{ x : 635., y : 242., press : 1.},{ x : 633., y : 242., press : 1.},{ x : 632., y : 241., press : 1.},{ x : 631., y : 241., press : 1.},{ x : 630., y : 241., press : 1.},{ x : 630., y : 240., press : 1.},{ x : 629., y : 240., press : 1.},{ x : 628., y : 240., press : 1.},{ x : 627., y : 240., press : 1.},{ x : 627., y : 239., press : 1.},{ x : 626., y : 239., press : 1.},{ x : 625., y : 239., press : 1.},{ x : 624., y : 238., press : 1.},{ x : 624., y : 238., press : 1.},{ x : 623., y : 237., press : 1.},{ x : 622., y : 237., press : 1.},{ x : 622., y : 236., press : 1.},{ x : 621., y : 236., press : 1.},{ x : 620., y : 236., press : 1.},{ x : 619., y : 234., press : 1.},{ x : 618., y : 233., press : 1.},{ x : 618., y : 232., press : 1.},{ x : 617., y : 231., press : 1.},{ x : 614., y : 231., press : 1.},{ x : 613., y : 231., press : 1.},{ x : 612., y : 231., press : 1.},{ x : 611., y : 231., press : 1.},{ x : 609., y : 231., press : 1.},{ x : 608., y : 231., press : 1.},{ x : 606., y : 231., press : 1.},{ x : 606., y : 231., press : -1.}];
postite_dro_Coords.clockcircle = [{ x : 459., y : 344., press : -1.},{ x : 459., y : 342., press : 1.},{ x : 459., y : 341., press : 1.},{ x : 459., y : 337., press : 1.},{ x : 459., y : 333., press : 1.},{ x : 459., y : 329., press : 1.},{ x : 459., y : 325., press : 1.},{ x : 459., y : 321., press : 1.},{ x : 459., y : 316., press : 1.},{ x : 459., y : 312., press : 1.},{ x : 461., y : 309., press : 1.},{ x : 463., y : 303., press : 1.},{ x : 465., y : 299., press : 1.},{ x : 468., y : 295., press : 1.},{ x : 471., y : 291., press : 1.},{ x : 475., y : 287., press : 1.},{ x : 481., y : 280., press : 1.},{ x : 484., y : 277., press : 1.},{ x : 487., y : 275., press : 1.},{ x : 493., y : 272., press : 1.},{ x : 496., y : 271., press : 1.},{ x : 501., y : 269., press : 1.},{ x : 508., y : 267., press : 1.},{ x : 514., y : 266., press : 1.},{ x : 521., y : 264., press : 1.},{ x : 526., y : 262., press : 1.},{ x : 532., y : 261., press : 1.},{ x : 537., y : 260., press : 1.},{ x : 541., y : 258., press : 1.},{ x : 545., y : 258., press : 1.},{ x : 549., y : 258., press : 1.},{ x : 555., y : 258., press : 1.},{ x : 559., y : 258., press : 1.},{ x : 563., y : 258., press : 1.},{ x : 567., y : 258., press : 1.},{ x : 570., y : 258., press : 1.},{ x : 574., y : 259., press : 1.},{ x : 580., y : 261., press : 1.},{ x : 583., y : 263., press : 1.},{ x : 586., y : 264., press : 1.},{ x : 589., y : 266., press : 1.},{ x : 593., y : 269., press : 1.},{ x : 596., y : 270., press : 1.},{ x : 599., y : 272., press : 1.},{ x : 603., y : 275., press : 1.},{ x : 607., y : 278., press : 1.},{ x : 611., y : 281., press : 1.},{ x : 613., y : 284., press : 1.},{ x : 617., y : 287., press : 1.},{ x : 620., y : 290., press : 1.},{ x : 622., y : 294., press : 1.},{ x : 624., y : 297., press : 1.},{ x : 626., y : 300., press : 1.},{ x : 628., y : 302., press : 1.},{ x : 629., y : 304., press : 1.},{ x : 630., y : 306., press : 1.},{ x : 632., y : 309., press : 1.},{ x : 633., y : 311., press : 1.},{ x : 634., y : 313., press : 1.},{ x : 636., y : 316., press : 1.},{ x : 636., y : 319., press : 1.},{ x : 637., y : 322., press : 1.},{ x : 638., y : 326., press : 1.},{ x : 639., y : 331., press : 1.},{ x : 640., y : 334., press : 1.},{ x : 640., y : 339., press : 1.},{ x : 641., y : 342., press : 1.},{ x : 641., y : 345., press : 1.},{ x : 641., y : 349., press : 1.},{ x : 641., y : 352., press : 1.},{ x : 641., y : 356., press : 1.},{ x : 641., y : 359., press : 1.},{ x : 641., y : 364., press : 1.},{ x : 641., y : 370., press : 1.},{ x : 640., y : 374., press : 1.},{ x : 638., y : 379., press : 1.},{ x : 637., y : 383., press : 1.},{ x : 636., y : 387., press : 1.},{ x : 634., y : 389., press : 1.},{ x : 631., y : 394., press : 1.},{ x : 630., y : 397., press : 1.},{ x : 628., y : 400., press : 1.},{ x : 626., y : 405., press : 1.},{ x : 623., y : 408., press : 1.},{ x : 621., y : 410., press : 1.},{ x : 619., y : 413., press : 1.},{ x : 616., y : 415., press : 1.},{ x : 613., y : 417., press : 1.},{ x : 609., y : 419., press : 1.},{ x : 607., y : 421., press : 1.},{ x : 603., y : 423., press : 1.},{ x : 600., y : 424., press : 1.},{ x : 597., y : 426., press : 1.},{ x : 593., y : 426., press : 1.},{ x : 589., y : 428., press : 1.},{ x : 586., y : 429., press : 1.},{ x : 581., y : 429., press : 1.},{ x : 577., y : 429., press : 1.},{ x : 571., y : 430., press : 1.},{ x : 566., y : 430., press : 1.},{ x : 559., y : 430., press : 1.},{ x : 555., y : 431., press : 1.},{ x : 549., y : 432., press : 1.},{ x : 545., y : 432., press : 1.},{ x : 541., y : 432., press : 1.},{ x : 536., y : 432., press : 1.},{ x : 531., y : 432., press : 1.},{ x : 528., y : 432., press : 1.},{ x : 523., y : 431., press : 1.},{ x : 517., y : 431., press : 1.},{ x : 512., y : 430., press : 1.},{ x : 508., y : 430., press : 1.},{ x : 504., y : 429., press : 1.},{ x : 501., y : 428., press : 1.},{ x : 497., y : 427., press : 1.},{ x : 494., y : 426., press : 1.},{ x : 491., y : 425., press : 1.},{ x : 488., y : 424., press : 1.},{ x : 485., y : 424., press : 1.},{ x : 482., y : 422., press : 1.},{ x : 479., y : 422., press : 1.},{ x : 477., y : 421., press : 1.},{ x : 475., y : 420., press : 1.},{ x : 474., y : 418., press : 1.},{ x : 473., y : 416., press : 1.},{ x : 471., y : 414., press : 1.},{ x : 470., y : 412., press : 1.},{ x : 469., y : 410., press : 1.},{ x : 467., y : 408., press : 1.},{ x : 467., y : 406., press : 1.},{ x : 466., y : 404., press : 1.},{ x : 465., y : 402., press : 1.},{ x : 464., y : 399., press : 1.},{ x : 463., y : 398., press : 1.},{ x : 462., y : 396., press : 1.},{ x : 461., y : 393., press : 1.},{ x : 461., y : 391., press : 1.},{ x : 460., y : 388., press : 1.},{ x : 460., y : 386., press : 1.},{ x : 460., y : 384., press : 1.},{ x : 460., y : 381., press : 1.},{ x : 460., y : 378., press : 1.},{ x : 460., y : 376., press : 1.},{ x : 460., y : 374., press : 1.},{ x : 460., y : 372., press : 1.},{ x : 460., y : 370., press : 1.},{ x : 460., y : 368., press : 1.},{ x : 460., y : 366., press : 1.},{ x : 460., y : 365., press : 1.},{ x : 459., y : 364., press : 1.},{ x : 459., y : 363., press : 1.},{ x : 459., y : 362., press : 1.},{ x : 459., y : 361., press : 1.},{ x : 459., y : 360., press : 1.},{ x : 459., y : 359., press : 1.},{ x : 459., y : 358., press : 1.},{ x : 459., y : 358., press : 1.},{ x : 459., y : 357., press : 1.},{ x : 459., y : 356., press : 1.},{ x : 459., y : 355., press : 1.},{ x : 459., y : 355., press : 1.},{ x : 459., y : 354., press : 1.},{ x : 459., y : 354., press : -1.}];
postite_dro_Coords.small = [{ x : 87., y : 150.},{ x : 87., y : 148.},{ x : 91., y : 140.},{ x : 97., y : 133.},{ x : 105., y : 127.},{ x : 112., y : 124.},{ x : 117., y : 124.},{ x : 128., y : 124.},{ x : 135., y : 135.},{ x : 139., y : 144.},{ x : 145., y : 161.},{ x : 151., y : 175.},{ x : 154., y : 187.},{ x : 155., y : 199.},{ x : 156., y : 210.},{ x : 157., y : 215.},{ x : 158., y : 222.},{ x : 160., y : 226.},{ x : 166., y : 230.},{ x : 174., y : 234.},{ x : 185., y : 237.}];
postite_dro_Coords.closed = [{ x : 294., y : 445., press : -1.},{ x : 293., y : 444., press : 1.},{ x : 290., y : 439., press : 1.},{ x : 287., y : 435., press : 1.},{ x : 285., y : 429., press : 1.},{ x : 279., y : 420., press : 1.},{ x : 276., y : 413., press : 1.},{ x : 274., y : 405., press : 1.},{ x : 272., y : 396., press : 1.},{ x : 271., y : 387., press : 1.},{ x : 270., y : 377., press : 1.},{ x : 270., y : 370., press : 1.},{ x : 270., y : 363., press : 1.},{ x : 270., y : 355., press : 1.},{ x : 270., y : 348., press : 1.},{ x : 270., y : 341., press : 1.},{ x : 272., y : 333., press : 1.},{ x : 275., y : 326., press : 1.},{ x : 278., y : 319., press : 1.},{ x : 279., y : 315., press : 1.},{ x : 283., y : 308., press : 1.},{ x : 286., y : 304., press : 1.},{ x : 290., y : 299., press : 1.},{ x : 294., y : 293., press : 1.},{ x : 300., y : 287., press : 1.},{ x : 310., y : 279., press : 1.},{ x : 320., y : 272., press : 1.},{ x : 333., y : 262., press : 1.},{ x : 345., y : 254., press : 1.},{ x : 359., y : 244., press : 1.},{ x : 396., y : 221., press : 1.},{ x : 419., y : 207., press : 1.},{ x : 442., y : 194., press : 1.},{ x : 465., y : 182., press : 1.},{ x : 509., y : 166., press : 1.},{ x : 524., y : 164., press : 1.},{ x : 539., y : 163., press : 1.},{ x : 554., y : 163., press : 1.},{ x : 562., y : 170., press : 1.},{ x : 571., y : 181., press : 1.},{ x : 583., y : 199., press : 1.},{ x : 596., y : 219., press : 1.},{ x : 607., y : 236., press : 1.},{ x : 647., y : 311., press : 1.},{ x : 648., y : 314., press : 1.},{ x : 649., y : 319., press : 1.},{ x : 652., y : 332., press : 1.},{ x : 653., y : 355., press : 1.},{ x : 652., y : 362., press : 1.},{ x : 649., y : 368., press : 1.},{ x : 635., y : 385., press : 1.},{ x : 627., y : 393., press : 1.},{ x : 610., y : 406., press : 1.},{ x : 603., y : 410., press : 1.},{ x : 590., y : 414., press : 1.},{ x : 583., y : 415., press : 1.},{ x : 578., y : 416., press : 1.},{ x : 573., y : 417., press : 1.},{ x : 567., y : 417., press : 1.},{ x : 558., y : 417., press : 1.},{ x : 553., y : 418., press : 1.},{ x : 548., y : 418., press : 1.},{ x : 535., y : 418., press : 1.},{ x : 528., y : 418., press : 1.},{ x : 522., y : 418., press : 1.},{ x : 503., y : 418., press : 1.},{ x : 497., y : 418., press : 1.},{ x : 482., y : 418., press : 1.},{ x : 473., y : 418., press : 1.},{ x : 448., y : 418., press : 1.},{ x : 440., y : 417., press : 1.},{ x : 423., y : 414., press : 1.},{ x : 415., y : 413., press : 1.},{ x : 407., y : 412., press : 1.},{ x : 392., y : 410., press : 1.},{ x : 373., y : 409., press : 1.},{ x : 367., y : 408., press : 1.},{ x : 353., y : 408., press : 1.},{ x : 347., y : 408., press : 1.},{ x : 341., y : 408., press : 1.},{ x : 335., y : 408., press : 1.},{ x : 322., y : 412., press : 1.},{ x : 316., y : 414., press : 1.},{ x : 309., y : 416., press : 1.},{ x : 301., y : 418., press : 1.},{ x : 296., y : 419., press : 1.},{ x : 289., y : 420., press : 1.},{ x : 284., y : 421., press : 1.},{ x : 279., y : 422., press : 1.},{ x : 274., y : 423., press : 1.},{ x : 270., y : 423., press : 1.},{ x : 266., y : 423., press : 1.},{ x : 262., y : 423., press : 1.},{ x : 259., y : 423., press : 1.},{ x : 256., y : 424., press : 1.},{ x : 253., y : 425., press : 1.},{ x : 251., y : 426., press : 1.},{ x : 248., y : 428., press : 1.},{ x : 247., y : 429., press : 1.},{ x : 246., y : 429., press : 1.},{ x : 245., y : 430., press : 1.},{ x : 245., y : 431., press : 1.},{ x : 245., y : 431., press : -1.}];
postite_dro_Coords.path = [{ x : 87., y : 150., press : -1.},{ x : 87., y : 148., press : 1.},{ x : 91., y : 140., press : 1.},{ x : 97., y : 133., press : 1.},{ x : 105., y : 127., press : 1.},{ x : 112., y : 124., press : 1.},{ x : 117., y : 124., press : 1.},{ x : 128., y : 124., press : 1.},{ x : 135., y : 135., press : 1.},{ x : 139., y : 144., press : 1.},{ x : 145., y : 161., press : 1.},{ x : 151., y : 175., press : 1.},{ x : 154., y : 187., press : 1.},{ x : 155., y : 199., press : 1.},{ x : 156., y : 210., press : 1.},{ x : 157., y : 215., press : 1.},{ x : 158., y : 222., press : 1.},{ x : 160., y : 226., press : 1.},{ x : 166., y : 230., press : 1.},{ x : 174., y : 234., press : 1.},{ x : 185., y : 237., press : 1.},{ x : 199., y : 238., press : 1.},{ x : 212., y : 238., press : 1.},{ x : 224., y : 238., press : 1.},{ x : 229., y : 236., press : 1.},{ x : 233., y : 231., press : 1.},{ x : 234., y : 225., press : 1.},{ x : 234., y : 217., press : 1.},{ x : 234., y : 209., press : 1.},{ x : 235., y : 204., press : 1.},{ x : 237., y : 198., press : 1.},{ x : 239., y : 195., press : 1.},{ x : 244., y : 194., press : 1.},{ x : 250., y : 194., press : 1.},{ x : 260., y : 203., press : 1.},{ x : 271., y : 215., press : 1.},{ x : 279., y : 223., press : 1.},{ x : 288., y : 234., press : 1.},{ x : 294., y : 241., press : 1.},{ x : 301., y : 248., press : 1.},{ x : 306., y : 249., press : 1.},{ x : 310., y : 249., press : 1.},{ x : 315., y : 249., press : 1.},{ x : 320., y : 249., press : 1.},{ x : 325., y : 245., press : 1.},{ x : 328., y : 242., press : 1.},{ x : 329., y : 238., press : 1.},{ x : 330., y : 234., press : 1.},{ x : 331., y : 231., press : 1.},{ x : 333., y : 228., press : 1.},{ x : 335., y : 227., press : 1.},{ x : 339., y : 226., press : 1.},{ x : 345., y : 226., press : 1.},{ x : 352., y : 230., press : 1.},{ x : 358., y : 232., press : 1.},{ x : 363., y : 233., press : 1.},{ x : 366., y : 233., press : 1.},{ x : 369., y : 231., press : 1.},{ x : 369., y : 224., press : 1.},{ x : 369., y : 214., press : 1.},{ x : 369., y : 205., press : 1.},{ x : 369., y : 197., press : 1.},{ x : 370., y : 191., press : 1.},{ x : 372., y : 188., press : 1.},{ x : 377., y : 188., press : 1.},{ x : 385., y : 188., press : 1.},{ x : 398., y : 191., press : 1.},{ x : 418., y : 204., press : 1.},{ x : 428., y : 212., press : 1.},{ x : 432., y : 218., press : 1.},{ x : 434., y : 222., press : 1.},{ x : 436., y : 226., press : 1.},{ x : 436., y : 229., press : 1.},{ x : 433., y : 234., press : 1.},{ x : 425., y : 245., press : 1.},{ x : 416., y : 258., press : 1.},{ x : 403., y : 273., press : 1.},{ x : 386., y : 289., press : 1.},{ x : 366., y : 304., press : 1.},{ x : 344., y : 315., press : 1.},{ x : 323., y : 322., press : 1.},{ x : 309., y : 327., press : 1.},{ x : 292., y : 334., press : 1.},{ x : 281., y : 340., press : 1.},{ x : 275., y : 348., press : 1.},{ x : 267., y : 360., press : 1.},{ x : 260., y : 374., press : 1.},{ x : 258., y : 389., press : 1.},{ x : 257., y : 398., press : 1.},{ x : 257., y : 407., press : 1.},{ x : 259., y : 414., press : 1.},{ x : 265., y : 417., press : 1.},{ x : 275., y : 421., press : 1.},{ x : 289., y : 421., press : 1.},{ x : 303., y : 421., press : 1.},{ x : 327., y : 421., press : 1.},{ x : 336., y : 419., press : 1.},{ x : 345., y : 416., press : 1.},{ x : 351., y : 413., press : 1.},{ x : 353., y : 411., press : 1.},{ x : 354., y : 410., press : 1.},{ x : 355., y : 410., press : 1.},{ x : 356., y : 410., press : 1.},{ x : 360., y : 410., press : 1.},{ x : 367., y : 415., press : 1.},{ x : 384., y : 422., press : 1.},{ x : 393., y : 425., press : 1.},{ x : 401., y : 425., press : 1.},{ x : 408., y : 425., press : 1.},{ x : 410., y : 421., press : 1.},{ x : 410., y : 401., press : 1.},{ x : 400., y : 379., press : 1.},{ x : 386., y : 358., press : 1.},{ x : 375., y : 346., press : 1.},{ x : 369., y : 341., press : 1.},{ x : 364., y : 335., press : 1.},{ x : 360., y : 333., press : 1.},{ x : 357., y : 332., press : 1.},{ x : 353., y : 332., press : 1.},{ x : 351., y : 332., press : 1.},{ x : 351., y : 339., press : 1.},{ x : 357., y : 348., press : 1.},{ x : 367., y : 361., press : 1.},{ x : 382., y : 370., press : 1.},{ x : 394., y : 376., press : 1.},{ x : 408., y : 381., press : 1.},{ x : 419., y : 383., press : 1.},{ x : 428., y : 383., press : 1.},{ x : 435., y : 381., press : 1.},{ x : 444., y : 381., press : 1.},{ x : 449., y : 381., press : 1.},{ x : 453., y : 384., press : 1.},{ x : 457., y : 389., press : 1.},{ x : 458., y : 393., press : 1.},{ x : 459., y : 395., press : 1.},{ x : 460., y : 398., press : 1.},{ x : 460., y : 401., press : 1.},{ x : 460., y : 406., press : 1.},{ x : 460., y : 411., press : 1.},{ x : 459., y : 417., press : 1.},{ x : 453., y : 424., press : 1.},{ x : 444., y : 428., press : 1.},{ x : 433., y : 430., press : 1.},{ x : 421., y : 430., press : 1.},{ x : 407., y : 419., press : 1.},{ x : 391., y : 408., press : 1.},{ x : 374., y : 399., press : 1.},{ x : 358., y : 389., press : 1.},{ x : 344., y : 386., press : 1.},{ x : 331., y : 386., press : 1.},{ x : 317., y : 385., press : 1.},{ x : 295., y : 385., press : 1.},{ x : 278., y : 387., press : 1.},{ x : 263., y : 396., press : 1.},{ x : 252., y : 405., press : 1.},{ x : 241., y : 414., press : 1.},{ x : 234., y : 423., press : 1.},{ x : 226., y : 433., press : 1.},{ x : 221., y : 441., press : 1.},{ x : 218., y : 447., press : 1.},{ x : 217., y : 450., press : 1.},{ x : 214., y : 455., press : 1.},{ x : 212., y : 458., press : 1.},{ x : 211., y : 460., press : 1.},{ x : 211., y : 461., press : 1.},{ x : 212., y : 461., press : 1.},{ x : 219., y : 461., press : 1.},{ x : 224., y : 460., press : 1.},{ x : 229., y : 458., press : 1.},{ x : 231., y : 457., press : 1.},{ x : 232., y : 457., press : 1.},{ x : 232., y : 456., press : 1.},{ x : 231., y : 456., press : 1.},{ x : 218., y : 455., press : 1.},{ x : 200., y : 452., press : 1.},{ x : 174., y : 447., press : 1.},{ x : 156., y : 444., press : 1.},{ x : 137., y : 439., press : 1.},{ x : 124., y : 436., press : 1.},{ x : 112., y : 432., press : 1.},{ x : 105., y : 428., press : 1.},{ x : 100., y : 425., press : 1.},{ x : 95., y : 421., press : 1.},{ x : 90., y : 418., press : 1.},{ x : 88., y : 413., press : 1.},{ x : 85., y : 409., press : 1.},{ x : 82., y : 403., press : 1.},{ x : 80., y : 394., press : 1.},{ x : 79., y : 385., press : 1.},{ x : 79., y : 372., press : 1.},{ x : 79., y : 365., press : 1.},{ x : 80., y : 359., press : 1.},{ x : 84., y : 354., press : 1.},{ x : 94., y : 347., press : 1.},{ x : 99., y : 345., press : 1.},{ x : 103., y : 342., press : 1.},{ x : 107., y : 339., press : 1.},{ x : 109., y : 337., press : 1.},{ x : 111., y : 335., press : 1.},{ x : 111., y : 331., press : 1.},{ x : 111., y : 326., press : 1.},{ x : 109., y : 321., press : 1.},{ x : 99., y : 309., press : 1.},{ x : 93., y : 303., press : 1.},{ x : 86., y : 298., press : 1.},{ x : 78., y : 294., press : 1.},{ x : 70., y : 291., press : 1.},{ x : 61., y : 289., press : 1.},{ x : 56., y : 287., press : 1.},{ x : 56., y : 287., press : -1.}];
postite_dro__$Couleur_Couleur_$Impl_$.Rouge = 13382400;
postite_dro__$Couleur_Couleur_$Impl_$.Bleu = 1769883;
postite_dro__$Couleur_Couleur_$Impl_$.Orange = 16016923;
postite_dro__$Couleur_Couleur_$Impl_$.Ombre = 4137476;
postite_dro__$Couleur_Couleur_$Impl_$.Jaune = 16768629;
postite_dro__$Couleur_Couleur_$Impl_$.Ocre = 14659372;
postite_dro__$Couleur_Couleur_$Impl_$.Vert = 6856049;
postite_dro__$Couleur_Couleur_$Impl_$.Prusse = 17767;
postite_dro__$Couleur_Couleur_$Impl_$.Olive = 8421376;
postite_dro__$Couleur_Couleur_$Impl_$.Noir = 0;
postite_dro__$Couleur_Couleur_$Impl_$.Blanc = 16777215;
postite_dro__$Couleur_Couleur_$Impl_$.Gris = 8355711;
postite_geom_Geste.NumPoints = 64;
postite_geom_Geste.SquareSize = 250.0;
postite_geom_Geste.Origin = postite_geom__$CoolPoint_Point_$Impl_$._new(0,0);
postite_geom_Geste.Diagonal = Math.sqrt(postite_geom_Geste.SquareSize * postite_geom_Geste.SquareSize + postite_geom_Geste.SquareSize * postite_geom_Geste.SquareSize);
postite_geom_Geste.HalfDiagonal = 0.5 * postite_geom_Geste.Diagonal;
postite_geom_Geste.AngleRange = postite_geom_Geste.Deg2Rad(45.0);
postite_geom_Geste.AnglePrecision = postite_geom_Geste.Deg2Rad(2.0);
postite_geom_Geste.Phi = 0.5 * (-1.0 + Math.sqrt(5.0));
postite_geom_UnistrokePatterns.unimap = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	{
		var value = [postite_geom__$CoolPoint_Point_$Impl_$._new(137,139),postite_geom__$CoolPoint_Point_$Impl_$._new(135,141),postite_geom__$CoolPoint_Point_$Impl_$._new(133,144),postite_geom__$CoolPoint_Point_$Impl_$._new(132,146),postite_geom__$CoolPoint_Point_$Impl_$._new(130,149),postite_geom__$CoolPoint_Point_$Impl_$._new(128,151),postite_geom__$CoolPoint_Point_$Impl_$._new(126,155),postite_geom__$CoolPoint_Point_$Impl_$._new(123,160),postite_geom__$CoolPoint_Point_$Impl_$._new(120,166),postite_geom__$CoolPoint_Point_$Impl_$._new(116,171),postite_geom__$CoolPoint_Point_$Impl_$._new(112,177),postite_geom__$CoolPoint_Point_$Impl_$._new(107,183),postite_geom__$CoolPoint_Point_$Impl_$._new(102,188),postite_geom__$CoolPoint_Point_$Impl_$._new(100,191),postite_geom__$CoolPoint_Point_$Impl_$._new(95,195),postite_geom__$CoolPoint_Point_$Impl_$._new(90,199),postite_geom__$CoolPoint_Point_$Impl_$._new(86,203),postite_geom__$CoolPoint_Point_$Impl_$._new(82,206),postite_geom__$CoolPoint_Point_$Impl_$._new(80,209),postite_geom__$CoolPoint_Point_$Impl_$._new(75,213),postite_geom__$CoolPoint_Point_$Impl_$._new(73,213),postite_geom__$CoolPoint_Point_$Impl_$._new(70,216),postite_geom__$CoolPoint_Point_$Impl_$._new(67,219),postite_geom__$CoolPoint_Point_$Impl_$._new(64,221),postite_geom__$CoolPoint_Point_$Impl_$._new(61,223),postite_geom__$CoolPoint_Point_$Impl_$._new(60,225),postite_geom__$CoolPoint_Point_$Impl_$._new(62,226),postite_geom__$CoolPoint_Point_$Impl_$._new(65,225),postite_geom__$CoolPoint_Point_$Impl_$._new(67,226),postite_geom__$CoolPoint_Point_$Impl_$._new(74,226),postite_geom__$CoolPoint_Point_$Impl_$._new(77,227),postite_geom__$CoolPoint_Point_$Impl_$._new(85,229),postite_geom__$CoolPoint_Point_$Impl_$._new(91,230),postite_geom__$CoolPoint_Point_$Impl_$._new(99,231),postite_geom__$CoolPoint_Point_$Impl_$._new(108,232),postite_geom__$CoolPoint_Point_$Impl_$._new(116,233),postite_geom__$CoolPoint_Point_$Impl_$._new(125,233),postite_geom__$CoolPoint_Point_$Impl_$._new(134,234),postite_geom__$CoolPoint_Point_$Impl_$._new(145,233),postite_geom__$CoolPoint_Point_$Impl_$._new(153,232),postite_geom__$CoolPoint_Point_$Impl_$._new(160,233),postite_geom__$CoolPoint_Point_$Impl_$._new(170,234),postite_geom__$CoolPoint_Point_$Impl_$._new(177,235),postite_geom__$CoolPoint_Point_$Impl_$._new(179,236),postite_geom__$CoolPoint_Point_$Impl_$._new(186,237),postite_geom__$CoolPoint_Point_$Impl_$._new(193,238),postite_geom__$CoolPoint_Point_$Impl_$._new(198,239),postite_geom__$CoolPoint_Point_$Impl_$._new(200,237),postite_geom__$CoolPoint_Point_$Impl_$._new(202,239),postite_geom__$CoolPoint_Point_$Impl_$._new(204,238),postite_geom__$CoolPoint_Point_$Impl_$._new(206,234),postite_geom__$CoolPoint_Point_$Impl_$._new(205,230),postite_geom__$CoolPoint_Point_$Impl_$._new(202,222),postite_geom__$CoolPoint_Point_$Impl_$._new(197,216),postite_geom__$CoolPoint_Point_$Impl_$._new(192,207),postite_geom__$CoolPoint_Point_$Impl_$._new(186,198),postite_geom__$CoolPoint_Point_$Impl_$._new(179,189),postite_geom__$CoolPoint_Point_$Impl_$._new(174,183),postite_geom__$CoolPoint_Point_$Impl_$._new(170,178),postite_geom__$CoolPoint_Point_$Impl_$._new(164,171),postite_geom__$CoolPoint_Point_$Impl_$._new(161,168),postite_geom__$CoolPoint_Point_$Impl_$._new(154,160),postite_geom__$CoolPoint_Point_$Impl_$._new(148,155),postite_geom__$CoolPoint_Point_$Impl_$._new(143,150),postite_geom__$CoolPoint_Point_$Impl_$._new(138,148),postite_geom__$CoolPoint_Point_$Impl_$._new(136,148)];
		if(__map_reserved["triangle"] != null) {
			_g.setReserved("triangle",value);
		} else {
			_g.h["triangle"] = value;
		}
	}
	{
		var value1 = [postite_geom__$CoolPoint_Point_$Impl_$._new(87,142),postite_geom__$CoolPoint_Point_$Impl_$._new(89,145),postite_geom__$CoolPoint_Point_$Impl_$._new(91,148),postite_geom__$CoolPoint_Point_$Impl_$._new(93,151),postite_geom__$CoolPoint_Point_$Impl_$._new(96,155),postite_geom__$CoolPoint_Point_$Impl_$._new(98,157),postite_geom__$CoolPoint_Point_$Impl_$._new(100,160),postite_geom__$CoolPoint_Point_$Impl_$._new(102,162),postite_geom__$CoolPoint_Point_$Impl_$._new(106,167),postite_geom__$CoolPoint_Point_$Impl_$._new(108,169),postite_geom__$CoolPoint_Point_$Impl_$._new(110,171),postite_geom__$CoolPoint_Point_$Impl_$._new(115,177),postite_geom__$CoolPoint_Point_$Impl_$._new(119,183),postite_geom__$CoolPoint_Point_$Impl_$._new(123,189),postite_geom__$CoolPoint_Point_$Impl_$._new(127,193),postite_geom__$CoolPoint_Point_$Impl_$._new(129,196),postite_geom__$CoolPoint_Point_$Impl_$._new(133,200),postite_geom__$CoolPoint_Point_$Impl_$._new(137,206),postite_geom__$CoolPoint_Point_$Impl_$._new(140,209),postite_geom__$CoolPoint_Point_$Impl_$._new(143,212),postite_geom__$CoolPoint_Point_$Impl_$._new(146,215),postite_geom__$CoolPoint_Point_$Impl_$._new(151,220),postite_geom__$CoolPoint_Point_$Impl_$._new(153,222),postite_geom__$CoolPoint_Point_$Impl_$._new(155,223),postite_geom__$CoolPoint_Point_$Impl_$._new(157,225),postite_geom__$CoolPoint_Point_$Impl_$._new(158,223),postite_geom__$CoolPoint_Point_$Impl_$._new(157,218),postite_geom__$CoolPoint_Point_$Impl_$._new(155,211),postite_geom__$CoolPoint_Point_$Impl_$._new(154,208),postite_geom__$CoolPoint_Point_$Impl_$._new(152,200),postite_geom__$CoolPoint_Point_$Impl_$._new(150,189),postite_geom__$CoolPoint_Point_$Impl_$._new(148,179),postite_geom__$CoolPoint_Point_$Impl_$._new(147,170),postite_geom__$CoolPoint_Point_$Impl_$._new(147,158),postite_geom__$CoolPoint_Point_$Impl_$._new(147,148),postite_geom__$CoolPoint_Point_$Impl_$._new(147,141),postite_geom__$CoolPoint_Point_$Impl_$._new(147,136),postite_geom__$CoolPoint_Point_$Impl_$._new(144,135),postite_geom__$CoolPoint_Point_$Impl_$._new(142,137),postite_geom__$CoolPoint_Point_$Impl_$._new(140,139),postite_geom__$CoolPoint_Point_$Impl_$._new(135,145),postite_geom__$CoolPoint_Point_$Impl_$._new(131,152),postite_geom__$CoolPoint_Point_$Impl_$._new(124,163),postite_geom__$CoolPoint_Point_$Impl_$._new(116,177),postite_geom__$CoolPoint_Point_$Impl_$._new(108,191),postite_geom__$CoolPoint_Point_$Impl_$._new(100,206),postite_geom__$CoolPoint_Point_$Impl_$._new(94,217),postite_geom__$CoolPoint_Point_$Impl_$._new(91,222),postite_geom__$CoolPoint_Point_$Impl_$._new(89,225),postite_geom__$CoolPoint_Point_$Impl_$._new(87,226),postite_geom__$CoolPoint_Point_$Impl_$._new(87,224)];
		if(__map_reserved["x"] != null) {
			_g.setReserved("x",value1);
		} else {
			_g.h["x"] = value1;
		}
	}
	{
		var value2 = [postite_geom__$CoolPoint_Point_$Impl_$._new(78,149),postite_geom__$CoolPoint_Point_$Impl_$._new(78,153),postite_geom__$CoolPoint_Point_$Impl_$._new(78,157),postite_geom__$CoolPoint_Point_$Impl_$._new(78,160),postite_geom__$CoolPoint_Point_$Impl_$._new(79,162),postite_geom__$CoolPoint_Point_$Impl_$._new(79,164),postite_geom__$CoolPoint_Point_$Impl_$._new(79,167),postite_geom__$CoolPoint_Point_$Impl_$._new(79,169),postite_geom__$CoolPoint_Point_$Impl_$._new(79,173),postite_geom__$CoolPoint_Point_$Impl_$._new(79,178),postite_geom__$CoolPoint_Point_$Impl_$._new(79,183),postite_geom__$CoolPoint_Point_$Impl_$._new(80,189),postite_geom__$CoolPoint_Point_$Impl_$._new(80,193),postite_geom__$CoolPoint_Point_$Impl_$._new(80,198),postite_geom__$CoolPoint_Point_$Impl_$._new(80,202),postite_geom__$CoolPoint_Point_$Impl_$._new(81,208),postite_geom__$CoolPoint_Point_$Impl_$._new(81,210),postite_geom__$CoolPoint_Point_$Impl_$._new(81,216),postite_geom__$CoolPoint_Point_$Impl_$._new(82,222),postite_geom__$CoolPoint_Point_$Impl_$._new(82,224),postite_geom__$CoolPoint_Point_$Impl_$._new(82,227),postite_geom__$CoolPoint_Point_$Impl_$._new(83,229),postite_geom__$CoolPoint_Point_$Impl_$._new(83,231),postite_geom__$CoolPoint_Point_$Impl_$._new(85,230),postite_geom__$CoolPoint_Point_$Impl_$._new(88,232),postite_geom__$CoolPoint_Point_$Impl_$._new(90,233),postite_geom__$CoolPoint_Point_$Impl_$._new(92,232),postite_geom__$CoolPoint_Point_$Impl_$._new(94,233),postite_geom__$CoolPoint_Point_$Impl_$._new(99,232),postite_geom__$CoolPoint_Point_$Impl_$._new(102,233),postite_geom__$CoolPoint_Point_$Impl_$._new(106,233),postite_geom__$CoolPoint_Point_$Impl_$._new(109,234),postite_geom__$CoolPoint_Point_$Impl_$._new(117,235),postite_geom__$CoolPoint_Point_$Impl_$._new(123,236),postite_geom__$CoolPoint_Point_$Impl_$._new(126,236),postite_geom__$CoolPoint_Point_$Impl_$._new(135,237),postite_geom__$CoolPoint_Point_$Impl_$._new(142,238),postite_geom__$CoolPoint_Point_$Impl_$._new(145,238),postite_geom__$CoolPoint_Point_$Impl_$._new(152,238),postite_geom__$CoolPoint_Point_$Impl_$._new(154,239),postite_geom__$CoolPoint_Point_$Impl_$._new(165,238),postite_geom__$CoolPoint_Point_$Impl_$._new(174,237),postite_geom__$CoolPoint_Point_$Impl_$._new(179,236),postite_geom__$CoolPoint_Point_$Impl_$._new(186,235),postite_geom__$CoolPoint_Point_$Impl_$._new(191,235),postite_geom__$CoolPoint_Point_$Impl_$._new(195,233),postite_geom__$CoolPoint_Point_$Impl_$._new(197,233),postite_geom__$CoolPoint_Point_$Impl_$._new(200,233),postite_geom__$CoolPoint_Point_$Impl_$._new(201,235),postite_geom__$CoolPoint_Point_$Impl_$._new(201,233),postite_geom__$CoolPoint_Point_$Impl_$._new(199,231),postite_geom__$CoolPoint_Point_$Impl_$._new(198,226),postite_geom__$CoolPoint_Point_$Impl_$._new(198,220),postite_geom__$CoolPoint_Point_$Impl_$._new(196,207),postite_geom__$CoolPoint_Point_$Impl_$._new(195,195),postite_geom__$CoolPoint_Point_$Impl_$._new(195,181),postite_geom__$CoolPoint_Point_$Impl_$._new(195,173),postite_geom__$CoolPoint_Point_$Impl_$._new(195,163),postite_geom__$CoolPoint_Point_$Impl_$._new(194,155),postite_geom__$CoolPoint_Point_$Impl_$._new(192,145),postite_geom__$CoolPoint_Point_$Impl_$._new(192,143),postite_geom__$CoolPoint_Point_$Impl_$._new(192,138),postite_geom__$CoolPoint_Point_$Impl_$._new(191,135),postite_geom__$CoolPoint_Point_$Impl_$._new(191,133),postite_geom__$CoolPoint_Point_$Impl_$._new(191,130),postite_geom__$CoolPoint_Point_$Impl_$._new(190,128),postite_geom__$CoolPoint_Point_$Impl_$._new(188,129),postite_geom__$CoolPoint_Point_$Impl_$._new(186,129),postite_geom__$CoolPoint_Point_$Impl_$._new(181,132),postite_geom__$CoolPoint_Point_$Impl_$._new(173,131),postite_geom__$CoolPoint_Point_$Impl_$._new(162,131),postite_geom__$CoolPoint_Point_$Impl_$._new(151,132),postite_geom__$CoolPoint_Point_$Impl_$._new(149,132),postite_geom__$CoolPoint_Point_$Impl_$._new(138,132),postite_geom__$CoolPoint_Point_$Impl_$._new(136,132),postite_geom__$CoolPoint_Point_$Impl_$._new(122,131),postite_geom__$CoolPoint_Point_$Impl_$._new(120,131),postite_geom__$CoolPoint_Point_$Impl_$._new(109,130),postite_geom__$CoolPoint_Point_$Impl_$._new(107,130),postite_geom__$CoolPoint_Point_$Impl_$._new(90,132),postite_geom__$CoolPoint_Point_$Impl_$._new(81,133),postite_geom__$CoolPoint_Point_$Impl_$._new(76,133)];
		if(__map_reserved["rectangle"] != null) {
			_g.setReserved("rectangle",value2);
		} else {
			_g.h["rectangle"] = value2;
		}
	}
	{
		var value3 = [postite_geom__$CoolPoint_Point_$Impl_$._new(127,141),postite_geom__$CoolPoint_Point_$Impl_$._new(124,140),postite_geom__$CoolPoint_Point_$Impl_$._new(120,139),postite_geom__$CoolPoint_Point_$Impl_$._new(118,139),postite_geom__$CoolPoint_Point_$Impl_$._new(116,139),postite_geom__$CoolPoint_Point_$Impl_$._new(111,140),postite_geom__$CoolPoint_Point_$Impl_$._new(109,141),postite_geom__$CoolPoint_Point_$Impl_$._new(104,144),postite_geom__$CoolPoint_Point_$Impl_$._new(100,147),postite_geom__$CoolPoint_Point_$Impl_$._new(96,152),postite_geom__$CoolPoint_Point_$Impl_$._new(93,157),postite_geom__$CoolPoint_Point_$Impl_$._new(90,163),postite_geom__$CoolPoint_Point_$Impl_$._new(87,169),postite_geom__$CoolPoint_Point_$Impl_$._new(85,175),postite_geom__$CoolPoint_Point_$Impl_$._new(83,181),postite_geom__$CoolPoint_Point_$Impl_$._new(82,190),postite_geom__$CoolPoint_Point_$Impl_$._new(82,195),postite_geom__$CoolPoint_Point_$Impl_$._new(83,200),postite_geom__$CoolPoint_Point_$Impl_$._new(84,205),postite_geom__$CoolPoint_Point_$Impl_$._new(88,213),postite_geom__$CoolPoint_Point_$Impl_$._new(91,216),postite_geom__$CoolPoint_Point_$Impl_$._new(96,219),postite_geom__$CoolPoint_Point_$Impl_$._new(103,222),postite_geom__$CoolPoint_Point_$Impl_$._new(108,224),postite_geom__$CoolPoint_Point_$Impl_$._new(111,224),postite_geom__$CoolPoint_Point_$Impl_$._new(120,224),postite_geom__$CoolPoint_Point_$Impl_$._new(133,223),postite_geom__$CoolPoint_Point_$Impl_$._new(142,222),postite_geom__$CoolPoint_Point_$Impl_$._new(152,218),postite_geom__$CoolPoint_Point_$Impl_$._new(160,214),postite_geom__$CoolPoint_Point_$Impl_$._new(167,210),postite_geom__$CoolPoint_Point_$Impl_$._new(173,204),postite_geom__$CoolPoint_Point_$Impl_$._new(178,198),postite_geom__$CoolPoint_Point_$Impl_$._new(179,196),postite_geom__$CoolPoint_Point_$Impl_$._new(182,188),postite_geom__$CoolPoint_Point_$Impl_$._new(182,177),postite_geom__$CoolPoint_Point_$Impl_$._new(178,167),postite_geom__$CoolPoint_Point_$Impl_$._new(170,150),postite_geom__$CoolPoint_Point_$Impl_$._new(163,138),postite_geom__$CoolPoint_Point_$Impl_$._new(152,130),postite_geom__$CoolPoint_Point_$Impl_$._new(143,129),postite_geom__$CoolPoint_Point_$Impl_$._new(140,131),postite_geom__$CoolPoint_Point_$Impl_$._new(129,136),postite_geom__$CoolPoint_Point_$Impl_$._new(126,139)];
		if(__map_reserved["circle"] != null) {
			_g.setReserved("circle",value3);
		} else {
			_g.h["circle"] = value3;
		}
	}
	{
		var value4 = [postite_geom__$CoolPoint_Point_$Impl_$._new(91,185),postite_geom__$CoolPoint_Point_$Impl_$._new(93,185),postite_geom__$CoolPoint_Point_$Impl_$._new(95,185),postite_geom__$CoolPoint_Point_$Impl_$._new(97,185),postite_geom__$CoolPoint_Point_$Impl_$._new(100,188),postite_geom__$CoolPoint_Point_$Impl_$._new(102,189),postite_geom__$CoolPoint_Point_$Impl_$._new(104,190),postite_geom__$CoolPoint_Point_$Impl_$._new(106,193),postite_geom__$CoolPoint_Point_$Impl_$._new(108,195),postite_geom__$CoolPoint_Point_$Impl_$._new(110,198),postite_geom__$CoolPoint_Point_$Impl_$._new(112,201),postite_geom__$CoolPoint_Point_$Impl_$._new(114,204),postite_geom__$CoolPoint_Point_$Impl_$._new(115,207),postite_geom__$CoolPoint_Point_$Impl_$._new(117,210),postite_geom__$CoolPoint_Point_$Impl_$._new(118,212),postite_geom__$CoolPoint_Point_$Impl_$._new(120,214),postite_geom__$CoolPoint_Point_$Impl_$._new(121,217),postite_geom__$CoolPoint_Point_$Impl_$._new(122,219),postite_geom__$CoolPoint_Point_$Impl_$._new(123,222),postite_geom__$CoolPoint_Point_$Impl_$._new(124,224),postite_geom__$CoolPoint_Point_$Impl_$._new(126,226),postite_geom__$CoolPoint_Point_$Impl_$._new(127,229),postite_geom__$CoolPoint_Point_$Impl_$._new(129,231),postite_geom__$CoolPoint_Point_$Impl_$._new(130,233),postite_geom__$CoolPoint_Point_$Impl_$._new(129,231),postite_geom__$CoolPoint_Point_$Impl_$._new(129,228),postite_geom__$CoolPoint_Point_$Impl_$._new(129,226),postite_geom__$CoolPoint_Point_$Impl_$._new(129,224),postite_geom__$CoolPoint_Point_$Impl_$._new(129,221),postite_geom__$CoolPoint_Point_$Impl_$._new(129,218),postite_geom__$CoolPoint_Point_$Impl_$._new(129,212),postite_geom__$CoolPoint_Point_$Impl_$._new(129,208),postite_geom__$CoolPoint_Point_$Impl_$._new(130,198),postite_geom__$CoolPoint_Point_$Impl_$._new(132,189),postite_geom__$CoolPoint_Point_$Impl_$._new(134,182),postite_geom__$CoolPoint_Point_$Impl_$._new(137,173),postite_geom__$CoolPoint_Point_$Impl_$._new(143,164),postite_geom__$CoolPoint_Point_$Impl_$._new(147,157),postite_geom__$CoolPoint_Point_$Impl_$._new(151,151),postite_geom__$CoolPoint_Point_$Impl_$._new(155,144),postite_geom__$CoolPoint_Point_$Impl_$._new(161,137),postite_geom__$CoolPoint_Point_$Impl_$._new(165,131),postite_geom__$CoolPoint_Point_$Impl_$._new(171,122),postite_geom__$CoolPoint_Point_$Impl_$._new(174,118),postite_geom__$CoolPoint_Point_$Impl_$._new(176,114),postite_geom__$CoolPoint_Point_$Impl_$._new(177,112),postite_geom__$CoolPoint_Point_$Impl_$._new(177,114),postite_geom__$CoolPoint_Point_$Impl_$._new(175,116),postite_geom__$CoolPoint_Point_$Impl_$._new(173,118)];
		if(__map_reserved["check"] != null) {
			_g.setReserved("check",value4);
		} else {
			_g.h["check"] = value4;
		}
	}
	{
		var value5 = [postite_geom__$CoolPoint_Point_$Impl_$._new(79,245),postite_geom__$CoolPoint_Point_$Impl_$._new(79,242),postite_geom__$CoolPoint_Point_$Impl_$._new(79,239),postite_geom__$CoolPoint_Point_$Impl_$._new(80,237),postite_geom__$CoolPoint_Point_$Impl_$._new(80,234),postite_geom__$CoolPoint_Point_$Impl_$._new(81,232),postite_geom__$CoolPoint_Point_$Impl_$._new(82,230),postite_geom__$CoolPoint_Point_$Impl_$._new(84,224),postite_geom__$CoolPoint_Point_$Impl_$._new(86,220),postite_geom__$CoolPoint_Point_$Impl_$._new(86,218),postite_geom__$CoolPoint_Point_$Impl_$._new(87,216),postite_geom__$CoolPoint_Point_$Impl_$._new(88,213),postite_geom__$CoolPoint_Point_$Impl_$._new(90,207),postite_geom__$CoolPoint_Point_$Impl_$._new(91,202),postite_geom__$CoolPoint_Point_$Impl_$._new(92,200),postite_geom__$CoolPoint_Point_$Impl_$._new(93,194),postite_geom__$CoolPoint_Point_$Impl_$._new(94,192),postite_geom__$CoolPoint_Point_$Impl_$._new(96,189),postite_geom__$CoolPoint_Point_$Impl_$._new(97,186),postite_geom__$CoolPoint_Point_$Impl_$._new(100,179),postite_geom__$CoolPoint_Point_$Impl_$._new(102,173),postite_geom__$CoolPoint_Point_$Impl_$._new(105,165),postite_geom__$CoolPoint_Point_$Impl_$._new(107,160),postite_geom__$CoolPoint_Point_$Impl_$._new(109,158),postite_geom__$CoolPoint_Point_$Impl_$._new(112,151),postite_geom__$CoolPoint_Point_$Impl_$._new(115,144),postite_geom__$CoolPoint_Point_$Impl_$._new(117,139),postite_geom__$CoolPoint_Point_$Impl_$._new(119,136),postite_geom__$CoolPoint_Point_$Impl_$._new(119,134),postite_geom__$CoolPoint_Point_$Impl_$._new(120,132),postite_geom__$CoolPoint_Point_$Impl_$._new(121,129),postite_geom__$CoolPoint_Point_$Impl_$._new(122,127),postite_geom__$CoolPoint_Point_$Impl_$._new(124,125),postite_geom__$CoolPoint_Point_$Impl_$._new(126,124),postite_geom__$CoolPoint_Point_$Impl_$._new(129,125),postite_geom__$CoolPoint_Point_$Impl_$._new(131,127),postite_geom__$CoolPoint_Point_$Impl_$._new(132,130),postite_geom__$CoolPoint_Point_$Impl_$._new(136,139),postite_geom__$CoolPoint_Point_$Impl_$._new(141,154),postite_geom__$CoolPoint_Point_$Impl_$._new(145,166),postite_geom__$CoolPoint_Point_$Impl_$._new(151,182),postite_geom__$CoolPoint_Point_$Impl_$._new(156,193),postite_geom__$CoolPoint_Point_$Impl_$._new(157,196),postite_geom__$CoolPoint_Point_$Impl_$._new(161,209),postite_geom__$CoolPoint_Point_$Impl_$._new(162,211),postite_geom__$CoolPoint_Point_$Impl_$._new(167,223),postite_geom__$CoolPoint_Point_$Impl_$._new(169,229),postite_geom__$CoolPoint_Point_$Impl_$._new(170,231),postite_geom__$CoolPoint_Point_$Impl_$._new(173,237),postite_geom__$CoolPoint_Point_$Impl_$._new(176,242),postite_geom__$CoolPoint_Point_$Impl_$._new(177,244),postite_geom__$CoolPoint_Point_$Impl_$._new(179,250),postite_geom__$CoolPoint_Point_$Impl_$._new(181,255),postite_geom__$CoolPoint_Point_$Impl_$._new(182,257)];
		if(__map_reserved["caret"] != null) {
			_g.setReserved("caret",value5);
		} else {
			_g.h["caret"] = value5;
		}
	}
	{
		var value6 = [postite_geom__$CoolPoint_Point_$Impl_$._new(68,222),postite_geom__$CoolPoint_Point_$Impl_$._new(70,220),postite_geom__$CoolPoint_Point_$Impl_$._new(73,218),postite_geom__$CoolPoint_Point_$Impl_$._new(75,217),postite_geom__$CoolPoint_Point_$Impl_$._new(77,215),postite_geom__$CoolPoint_Point_$Impl_$._new(80,213),postite_geom__$CoolPoint_Point_$Impl_$._new(82,212),postite_geom__$CoolPoint_Point_$Impl_$._new(84,210),postite_geom__$CoolPoint_Point_$Impl_$._new(87,209),postite_geom__$CoolPoint_Point_$Impl_$._new(89,208),postite_geom__$CoolPoint_Point_$Impl_$._new(92,206),postite_geom__$CoolPoint_Point_$Impl_$._new(95,204),postite_geom__$CoolPoint_Point_$Impl_$._new(101,201),postite_geom__$CoolPoint_Point_$Impl_$._new(106,198),postite_geom__$CoolPoint_Point_$Impl_$._new(112,194),postite_geom__$CoolPoint_Point_$Impl_$._new(118,191),postite_geom__$CoolPoint_Point_$Impl_$._new(124,187),postite_geom__$CoolPoint_Point_$Impl_$._new(127,186),postite_geom__$CoolPoint_Point_$Impl_$._new(132,183),postite_geom__$CoolPoint_Point_$Impl_$._new(138,181),postite_geom__$CoolPoint_Point_$Impl_$._new(141,180),postite_geom__$CoolPoint_Point_$Impl_$._new(146,178),postite_geom__$CoolPoint_Point_$Impl_$._new(154,173),postite_geom__$CoolPoint_Point_$Impl_$._new(159,171),postite_geom__$CoolPoint_Point_$Impl_$._new(161,170),postite_geom__$CoolPoint_Point_$Impl_$._new(166,167),postite_geom__$CoolPoint_Point_$Impl_$._new(168,167),postite_geom__$CoolPoint_Point_$Impl_$._new(171,166),postite_geom__$CoolPoint_Point_$Impl_$._new(174,164),postite_geom__$CoolPoint_Point_$Impl_$._new(177,162),postite_geom__$CoolPoint_Point_$Impl_$._new(180,160),postite_geom__$CoolPoint_Point_$Impl_$._new(182,158),postite_geom__$CoolPoint_Point_$Impl_$._new(183,156),postite_geom__$CoolPoint_Point_$Impl_$._new(181,154),postite_geom__$CoolPoint_Point_$Impl_$._new(178,153),postite_geom__$CoolPoint_Point_$Impl_$._new(171,153),postite_geom__$CoolPoint_Point_$Impl_$._new(164,153),postite_geom__$CoolPoint_Point_$Impl_$._new(160,153),postite_geom__$CoolPoint_Point_$Impl_$._new(150,154),postite_geom__$CoolPoint_Point_$Impl_$._new(147,155),postite_geom__$CoolPoint_Point_$Impl_$._new(141,157),postite_geom__$CoolPoint_Point_$Impl_$._new(137,158),postite_geom__$CoolPoint_Point_$Impl_$._new(135,158),postite_geom__$CoolPoint_Point_$Impl_$._new(137,158),postite_geom__$CoolPoint_Point_$Impl_$._new(140,157),postite_geom__$CoolPoint_Point_$Impl_$._new(143,156),postite_geom__$CoolPoint_Point_$Impl_$._new(151,154),postite_geom__$CoolPoint_Point_$Impl_$._new(160,152),postite_geom__$CoolPoint_Point_$Impl_$._new(170,149),postite_geom__$CoolPoint_Point_$Impl_$._new(179,147),postite_geom__$CoolPoint_Point_$Impl_$._new(185,145),postite_geom__$CoolPoint_Point_$Impl_$._new(192,144),postite_geom__$CoolPoint_Point_$Impl_$._new(196,144),postite_geom__$CoolPoint_Point_$Impl_$._new(198,144),postite_geom__$CoolPoint_Point_$Impl_$._new(200,144),postite_geom__$CoolPoint_Point_$Impl_$._new(201,147),postite_geom__$CoolPoint_Point_$Impl_$._new(199,149),postite_geom__$CoolPoint_Point_$Impl_$._new(194,157),postite_geom__$CoolPoint_Point_$Impl_$._new(191,160),postite_geom__$CoolPoint_Point_$Impl_$._new(186,167),postite_geom__$CoolPoint_Point_$Impl_$._new(180,176),postite_geom__$CoolPoint_Point_$Impl_$._new(177,179),postite_geom__$CoolPoint_Point_$Impl_$._new(171,187),postite_geom__$CoolPoint_Point_$Impl_$._new(169,189),postite_geom__$CoolPoint_Point_$Impl_$._new(165,194),postite_geom__$CoolPoint_Point_$Impl_$._new(164,196)];
		if(__map_reserved["arrow"] != null) {
			_g.setReserved("arrow",value6);
		} else {
			_g.h["arrow"] = value6;
		}
	}
	{
		var value7 = [postite_geom__$CoolPoint_Point_$Impl_$._new(140,124),postite_geom__$CoolPoint_Point_$Impl_$._new(138,123),postite_geom__$CoolPoint_Point_$Impl_$._new(135,122),postite_geom__$CoolPoint_Point_$Impl_$._new(133,123),postite_geom__$CoolPoint_Point_$Impl_$._new(130,123),postite_geom__$CoolPoint_Point_$Impl_$._new(128,124),postite_geom__$CoolPoint_Point_$Impl_$._new(125,125),postite_geom__$CoolPoint_Point_$Impl_$._new(122,124),postite_geom__$CoolPoint_Point_$Impl_$._new(120,124),postite_geom__$CoolPoint_Point_$Impl_$._new(118,124),postite_geom__$CoolPoint_Point_$Impl_$._new(116,125),postite_geom__$CoolPoint_Point_$Impl_$._new(113,125),postite_geom__$CoolPoint_Point_$Impl_$._new(111,125),postite_geom__$CoolPoint_Point_$Impl_$._new(108,124),postite_geom__$CoolPoint_Point_$Impl_$._new(106,125),postite_geom__$CoolPoint_Point_$Impl_$._new(104,125),postite_geom__$CoolPoint_Point_$Impl_$._new(102,124),postite_geom__$CoolPoint_Point_$Impl_$._new(100,123),postite_geom__$CoolPoint_Point_$Impl_$._new(98,123),postite_geom__$CoolPoint_Point_$Impl_$._new(95,124),postite_geom__$CoolPoint_Point_$Impl_$._new(93,123),postite_geom__$CoolPoint_Point_$Impl_$._new(90,124),postite_geom__$CoolPoint_Point_$Impl_$._new(88,124),postite_geom__$CoolPoint_Point_$Impl_$._new(85,125),postite_geom__$CoolPoint_Point_$Impl_$._new(83,126),postite_geom__$CoolPoint_Point_$Impl_$._new(81,127),postite_geom__$CoolPoint_Point_$Impl_$._new(81,129),postite_geom__$CoolPoint_Point_$Impl_$._new(82,131),postite_geom__$CoolPoint_Point_$Impl_$._new(82,134),postite_geom__$CoolPoint_Point_$Impl_$._new(83,138),postite_geom__$CoolPoint_Point_$Impl_$._new(84,141),postite_geom__$CoolPoint_Point_$Impl_$._new(84,144),postite_geom__$CoolPoint_Point_$Impl_$._new(85,148),postite_geom__$CoolPoint_Point_$Impl_$._new(85,151),postite_geom__$CoolPoint_Point_$Impl_$._new(86,156),postite_geom__$CoolPoint_Point_$Impl_$._new(86,160),postite_geom__$CoolPoint_Point_$Impl_$._new(86,164),postite_geom__$CoolPoint_Point_$Impl_$._new(86,168),postite_geom__$CoolPoint_Point_$Impl_$._new(87,171),postite_geom__$CoolPoint_Point_$Impl_$._new(87,175),postite_geom__$CoolPoint_Point_$Impl_$._new(87,179),postite_geom__$CoolPoint_Point_$Impl_$._new(87,182),postite_geom__$CoolPoint_Point_$Impl_$._new(87,186),postite_geom__$CoolPoint_Point_$Impl_$._new(88,188),postite_geom__$CoolPoint_Point_$Impl_$._new(88,195),postite_geom__$CoolPoint_Point_$Impl_$._new(88,198),postite_geom__$CoolPoint_Point_$Impl_$._new(88,201),postite_geom__$CoolPoint_Point_$Impl_$._new(88,207),postite_geom__$CoolPoint_Point_$Impl_$._new(89,211),postite_geom__$CoolPoint_Point_$Impl_$._new(89,213),postite_geom__$CoolPoint_Point_$Impl_$._new(89,217),postite_geom__$CoolPoint_Point_$Impl_$._new(89,222),postite_geom__$CoolPoint_Point_$Impl_$._new(88,225),postite_geom__$CoolPoint_Point_$Impl_$._new(88,229),postite_geom__$CoolPoint_Point_$Impl_$._new(88,231),postite_geom__$CoolPoint_Point_$Impl_$._new(88,233),postite_geom__$CoolPoint_Point_$Impl_$._new(88,235),postite_geom__$CoolPoint_Point_$Impl_$._new(89,237),postite_geom__$CoolPoint_Point_$Impl_$._new(89,240),postite_geom__$CoolPoint_Point_$Impl_$._new(89,242),postite_geom__$CoolPoint_Point_$Impl_$._new(91,241),postite_geom__$CoolPoint_Point_$Impl_$._new(94,241),postite_geom__$CoolPoint_Point_$Impl_$._new(96,240),postite_geom__$CoolPoint_Point_$Impl_$._new(98,239),postite_geom__$CoolPoint_Point_$Impl_$._new(105,240),postite_geom__$CoolPoint_Point_$Impl_$._new(109,240),postite_geom__$CoolPoint_Point_$Impl_$._new(113,239),postite_geom__$CoolPoint_Point_$Impl_$._new(116,240),postite_geom__$CoolPoint_Point_$Impl_$._new(121,239),postite_geom__$CoolPoint_Point_$Impl_$._new(130,240),postite_geom__$CoolPoint_Point_$Impl_$._new(136,237),postite_geom__$CoolPoint_Point_$Impl_$._new(139,237),postite_geom__$CoolPoint_Point_$Impl_$._new(144,238),postite_geom__$CoolPoint_Point_$Impl_$._new(151,237),postite_geom__$CoolPoint_Point_$Impl_$._new(157,236),postite_geom__$CoolPoint_Point_$Impl_$._new(159,237)];
		if(__map_reserved["left square bracket"] != null) {
			_g.setReserved("left square bracket",value7);
		} else {
			_g.h["left square bracket"] = value7;
		}
	}
	{
		var value8 = [postite_geom__$CoolPoint_Point_$Impl_$._new(112,138),postite_geom__$CoolPoint_Point_$Impl_$._new(112,136),postite_geom__$CoolPoint_Point_$Impl_$._new(115,136),postite_geom__$CoolPoint_Point_$Impl_$._new(118,137),postite_geom__$CoolPoint_Point_$Impl_$._new(120,136),postite_geom__$CoolPoint_Point_$Impl_$._new(123,136),postite_geom__$CoolPoint_Point_$Impl_$._new(125,136),postite_geom__$CoolPoint_Point_$Impl_$._new(128,136),postite_geom__$CoolPoint_Point_$Impl_$._new(131,136),postite_geom__$CoolPoint_Point_$Impl_$._new(134,135),postite_geom__$CoolPoint_Point_$Impl_$._new(137,135),postite_geom__$CoolPoint_Point_$Impl_$._new(140,134),postite_geom__$CoolPoint_Point_$Impl_$._new(143,133),postite_geom__$CoolPoint_Point_$Impl_$._new(145,132),postite_geom__$CoolPoint_Point_$Impl_$._new(147,132),postite_geom__$CoolPoint_Point_$Impl_$._new(149,132),postite_geom__$CoolPoint_Point_$Impl_$._new(152,132),postite_geom__$CoolPoint_Point_$Impl_$._new(153,134),postite_geom__$CoolPoint_Point_$Impl_$._new(154,137),postite_geom__$CoolPoint_Point_$Impl_$._new(155,141),postite_geom__$CoolPoint_Point_$Impl_$._new(156,144),postite_geom__$CoolPoint_Point_$Impl_$._new(157,152),postite_geom__$CoolPoint_Point_$Impl_$._new(158,161),postite_geom__$CoolPoint_Point_$Impl_$._new(160,170),postite_geom__$CoolPoint_Point_$Impl_$._new(162,182),postite_geom__$CoolPoint_Point_$Impl_$._new(164,192),postite_geom__$CoolPoint_Point_$Impl_$._new(166,200),postite_geom__$CoolPoint_Point_$Impl_$._new(167,209),postite_geom__$CoolPoint_Point_$Impl_$._new(168,214),postite_geom__$CoolPoint_Point_$Impl_$._new(168,216),postite_geom__$CoolPoint_Point_$Impl_$._new(169,221),postite_geom__$CoolPoint_Point_$Impl_$._new(169,223),postite_geom__$CoolPoint_Point_$Impl_$._new(169,228),postite_geom__$CoolPoint_Point_$Impl_$._new(169,231),postite_geom__$CoolPoint_Point_$Impl_$._new(166,233),postite_geom__$CoolPoint_Point_$Impl_$._new(164,234),postite_geom__$CoolPoint_Point_$Impl_$._new(161,235),postite_geom__$CoolPoint_Point_$Impl_$._new(155,236),postite_geom__$CoolPoint_Point_$Impl_$._new(147,235),postite_geom__$CoolPoint_Point_$Impl_$._new(140,233),postite_geom__$CoolPoint_Point_$Impl_$._new(131,233),postite_geom__$CoolPoint_Point_$Impl_$._new(124,233),postite_geom__$CoolPoint_Point_$Impl_$._new(117,235),postite_geom__$CoolPoint_Point_$Impl_$._new(114,238),postite_geom__$CoolPoint_Point_$Impl_$._new(112,238)];
		if(__map_reserved["right square bracket"] != null) {
			_g.setReserved("right square bracket",value8);
		} else {
			_g.h["right square bracket"] = value8;
		}
	}
	{
		var value9 = [postite_geom__$CoolPoint_Point_$Impl_$._new(89,164),postite_geom__$CoolPoint_Point_$Impl_$._new(90,162),postite_geom__$CoolPoint_Point_$Impl_$._new(92,162),postite_geom__$CoolPoint_Point_$Impl_$._new(94,164),postite_geom__$CoolPoint_Point_$Impl_$._new(95,166),postite_geom__$CoolPoint_Point_$Impl_$._new(96,169),postite_geom__$CoolPoint_Point_$Impl_$._new(97,171),postite_geom__$CoolPoint_Point_$Impl_$._new(99,175),postite_geom__$CoolPoint_Point_$Impl_$._new(101,178),postite_geom__$CoolPoint_Point_$Impl_$._new(103,182),postite_geom__$CoolPoint_Point_$Impl_$._new(106,189),postite_geom__$CoolPoint_Point_$Impl_$._new(108,194),postite_geom__$CoolPoint_Point_$Impl_$._new(111,199),postite_geom__$CoolPoint_Point_$Impl_$._new(114,204),postite_geom__$CoolPoint_Point_$Impl_$._new(117,209),postite_geom__$CoolPoint_Point_$Impl_$._new(119,214),postite_geom__$CoolPoint_Point_$Impl_$._new(122,218),postite_geom__$CoolPoint_Point_$Impl_$._new(124,222),postite_geom__$CoolPoint_Point_$Impl_$._new(126,225),postite_geom__$CoolPoint_Point_$Impl_$._new(128,228),postite_geom__$CoolPoint_Point_$Impl_$._new(130,229),postite_geom__$CoolPoint_Point_$Impl_$._new(133,233),postite_geom__$CoolPoint_Point_$Impl_$._new(134,236),postite_geom__$CoolPoint_Point_$Impl_$._new(136,239),postite_geom__$CoolPoint_Point_$Impl_$._new(138,240),postite_geom__$CoolPoint_Point_$Impl_$._new(139,242),postite_geom__$CoolPoint_Point_$Impl_$._new(140,244),postite_geom__$CoolPoint_Point_$Impl_$._new(142,242),postite_geom__$CoolPoint_Point_$Impl_$._new(142,240),postite_geom__$CoolPoint_Point_$Impl_$._new(142,237),postite_geom__$CoolPoint_Point_$Impl_$._new(143,235),postite_geom__$CoolPoint_Point_$Impl_$._new(143,233),postite_geom__$CoolPoint_Point_$Impl_$._new(145,229),postite_geom__$CoolPoint_Point_$Impl_$._new(146,226),postite_geom__$CoolPoint_Point_$Impl_$._new(148,217),postite_geom__$CoolPoint_Point_$Impl_$._new(149,208),postite_geom__$CoolPoint_Point_$Impl_$._new(149,205),postite_geom__$CoolPoint_Point_$Impl_$._new(151,196),postite_geom__$CoolPoint_Point_$Impl_$._new(151,193),postite_geom__$CoolPoint_Point_$Impl_$._new(153,182),postite_geom__$CoolPoint_Point_$Impl_$._new(155,172),postite_geom__$CoolPoint_Point_$Impl_$._new(157,165),postite_geom__$CoolPoint_Point_$Impl_$._new(159,160),postite_geom__$CoolPoint_Point_$Impl_$._new(162,155),postite_geom__$CoolPoint_Point_$Impl_$._new(164,150),postite_geom__$CoolPoint_Point_$Impl_$._new(165,148),postite_geom__$CoolPoint_Point_$Impl_$._new(166,146)];
		if(__map_reserved["v"] != null) {
			_g.setReserved("v",value9);
		} else {
			_g.h["v"] = value9;
		}
	}
	{
		var value10 = [postite_geom__$CoolPoint_Point_$Impl_$._new(123,129),postite_geom__$CoolPoint_Point_$Impl_$._new(123,131),postite_geom__$CoolPoint_Point_$Impl_$._new(124,133),postite_geom__$CoolPoint_Point_$Impl_$._new(125,136),postite_geom__$CoolPoint_Point_$Impl_$._new(127,140),postite_geom__$CoolPoint_Point_$Impl_$._new(129,142),postite_geom__$CoolPoint_Point_$Impl_$._new(133,148),postite_geom__$CoolPoint_Point_$Impl_$._new(137,154),postite_geom__$CoolPoint_Point_$Impl_$._new(143,158),postite_geom__$CoolPoint_Point_$Impl_$._new(145,161),postite_geom__$CoolPoint_Point_$Impl_$._new(148,164),postite_geom__$CoolPoint_Point_$Impl_$._new(153,170),postite_geom__$CoolPoint_Point_$Impl_$._new(158,176),postite_geom__$CoolPoint_Point_$Impl_$._new(160,178),postite_geom__$CoolPoint_Point_$Impl_$._new(164,183),postite_geom__$CoolPoint_Point_$Impl_$._new(168,188),postite_geom__$CoolPoint_Point_$Impl_$._new(171,191),postite_geom__$CoolPoint_Point_$Impl_$._new(175,196),postite_geom__$CoolPoint_Point_$Impl_$._new(178,200),postite_geom__$CoolPoint_Point_$Impl_$._new(180,202),postite_geom__$CoolPoint_Point_$Impl_$._new(181,205),postite_geom__$CoolPoint_Point_$Impl_$._new(184,208),postite_geom__$CoolPoint_Point_$Impl_$._new(186,210),postite_geom__$CoolPoint_Point_$Impl_$._new(187,213),postite_geom__$CoolPoint_Point_$Impl_$._new(188,215),postite_geom__$CoolPoint_Point_$Impl_$._new(186,212),postite_geom__$CoolPoint_Point_$Impl_$._new(183,211),postite_geom__$CoolPoint_Point_$Impl_$._new(177,208),postite_geom__$CoolPoint_Point_$Impl_$._new(169,206),postite_geom__$CoolPoint_Point_$Impl_$._new(162,205),postite_geom__$CoolPoint_Point_$Impl_$._new(154,207),postite_geom__$CoolPoint_Point_$Impl_$._new(145,209),postite_geom__$CoolPoint_Point_$Impl_$._new(137,210),postite_geom__$CoolPoint_Point_$Impl_$._new(129,214),postite_geom__$CoolPoint_Point_$Impl_$._new(122,217),postite_geom__$CoolPoint_Point_$Impl_$._new(118,218),postite_geom__$CoolPoint_Point_$Impl_$._new(111,221),postite_geom__$CoolPoint_Point_$Impl_$._new(109,222),postite_geom__$CoolPoint_Point_$Impl_$._new(110,219),postite_geom__$CoolPoint_Point_$Impl_$._new(112,217),postite_geom__$CoolPoint_Point_$Impl_$._new(118,209),postite_geom__$CoolPoint_Point_$Impl_$._new(120,207),postite_geom__$CoolPoint_Point_$Impl_$._new(128,196),postite_geom__$CoolPoint_Point_$Impl_$._new(135,187),postite_geom__$CoolPoint_Point_$Impl_$._new(138,183),postite_geom__$CoolPoint_Point_$Impl_$._new(148,167),postite_geom__$CoolPoint_Point_$Impl_$._new(157,153),postite_geom__$CoolPoint_Point_$Impl_$._new(163,145),postite_geom__$CoolPoint_Point_$Impl_$._new(165,142),postite_geom__$CoolPoint_Point_$Impl_$._new(172,133),postite_geom__$CoolPoint_Point_$Impl_$._new(177,127),postite_geom__$CoolPoint_Point_$Impl_$._new(179,127),postite_geom__$CoolPoint_Point_$Impl_$._new(180,125)];
		if(__map_reserved["delete"] != null) {
			_g.setReserved("delete",value10);
		} else {
			_g.h["delete"] = value10;
		}
	}
	{
		var value11 = [postite_geom__$CoolPoint_Point_$Impl_$._new(117,132),postite_geom__$CoolPoint_Point_$Impl_$._new(115,132),postite_geom__$CoolPoint_Point_$Impl_$._new(115,129),postite_geom__$CoolPoint_Point_$Impl_$._new(117,129),postite_geom__$CoolPoint_Point_$Impl_$._new(119,128),postite_geom__$CoolPoint_Point_$Impl_$._new(122,127),postite_geom__$CoolPoint_Point_$Impl_$._new(125,127),postite_geom__$CoolPoint_Point_$Impl_$._new(127,127),postite_geom__$CoolPoint_Point_$Impl_$._new(130,127),postite_geom__$CoolPoint_Point_$Impl_$._new(133,129),postite_geom__$CoolPoint_Point_$Impl_$._new(136,129),postite_geom__$CoolPoint_Point_$Impl_$._new(138,130),postite_geom__$CoolPoint_Point_$Impl_$._new(140,131),postite_geom__$CoolPoint_Point_$Impl_$._new(143,134),postite_geom__$CoolPoint_Point_$Impl_$._new(144,136),postite_geom__$CoolPoint_Point_$Impl_$._new(145,139),postite_geom__$CoolPoint_Point_$Impl_$._new(145,142),postite_geom__$CoolPoint_Point_$Impl_$._new(145,145),postite_geom__$CoolPoint_Point_$Impl_$._new(145,147),postite_geom__$CoolPoint_Point_$Impl_$._new(145,149),postite_geom__$CoolPoint_Point_$Impl_$._new(144,152),postite_geom__$CoolPoint_Point_$Impl_$._new(142,157),postite_geom__$CoolPoint_Point_$Impl_$._new(141,160),postite_geom__$CoolPoint_Point_$Impl_$._new(139,163),postite_geom__$CoolPoint_Point_$Impl_$._new(137,166),postite_geom__$CoolPoint_Point_$Impl_$._new(135,167),postite_geom__$CoolPoint_Point_$Impl_$._new(133,169),postite_geom__$CoolPoint_Point_$Impl_$._new(131,172),postite_geom__$CoolPoint_Point_$Impl_$._new(128,173),postite_geom__$CoolPoint_Point_$Impl_$._new(126,176),postite_geom__$CoolPoint_Point_$Impl_$._new(125,178),postite_geom__$CoolPoint_Point_$Impl_$._new(125,180),postite_geom__$CoolPoint_Point_$Impl_$._new(125,182),postite_geom__$CoolPoint_Point_$Impl_$._new(126,184),postite_geom__$CoolPoint_Point_$Impl_$._new(128,187),postite_geom__$CoolPoint_Point_$Impl_$._new(130,187),postite_geom__$CoolPoint_Point_$Impl_$._new(132,188),postite_geom__$CoolPoint_Point_$Impl_$._new(135,189),postite_geom__$CoolPoint_Point_$Impl_$._new(140,189),postite_geom__$CoolPoint_Point_$Impl_$._new(145,189),postite_geom__$CoolPoint_Point_$Impl_$._new(150,187),postite_geom__$CoolPoint_Point_$Impl_$._new(155,186),postite_geom__$CoolPoint_Point_$Impl_$._new(157,185),postite_geom__$CoolPoint_Point_$Impl_$._new(159,184),postite_geom__$CoolPoint_Point_$Impl_$._new(156,185),postite_geom__$CoolPoint_Point_$Impl_$._new(154,185),postite_geom__$CoolPoint_Point_$Impl_$._new(149,185),postite_geom__$CoolPoint_Point_$Impl_$._new(145,187),postite_geom__$CoolPoint_Point_$Impl_$._new(141,188),postite_geom__$CoolPoint_Point_$Impl_$._new(136,191),postite_geom__$CoolPoint_Point_$Impl_$._new(134,191),postite_geom__$CoolPoint_Point_$Impl_$._new(131,192),postite_geom__$CoolPoint_Point_$Impl_$._new(129,193),postite_geom__$CoolPoint_Point_$Impl_$._new(129,195),postite_geom__$CoolPoint_Point_$Impl_$._new(129,197),postite_geom__$CoolPoint_Point_$Impl_$._new(131,200),postite_geom__$CoolPoint_Point_$Impl_$._new(133,202),postite_geom__$CoolPoint_Point_$Impl_$._new(136,206),postite_geom__$CoolPoint_Point_$Impl_$._new(139,211),postite_geom__$CoolPoint_Point_$Impl_$._new(142,215),postite_geom__$CoolPoint_Point_$Impl_$._new(145,220),postite_geom__$CoolPoint_Point_$Impl_$._new(147,225),postite_geom__$CoolPoint_Point_$Impl_$._new(148,231),postite_geom__$CoolPoint_Point_$Impl_$._new(147,239),postite_geom__$CoolPoint_Point_$Impl_$._new(144,244),postite_geom__$CoolPoint_Point_$Impl_$._new(139,248),postite_geom__$CoolPoint_Point_$Impl_$._new(134,250),postite_geom__$CoolPoint_Point_$Impl_$._new(126,253),postite_geom__$CoolPoint_Point_$Impl_$._new(119,253),postite_geom__$CoolPoint_Point_$Impl_$._new(115,253)];
		if(__map_reserved["right curly brace"] != null) {
			_g.setReserved("right curly brace",value11);
		} else {
			_g.h["right curly brace"] = value11;
		}
	}
	{
		var value12 = [postite_geom__$CoolPoint_Point_$Impl_$._new(75,250),postite_geom__$CoolPoint_Point_$Impl_$._new(75,247),postite_geom__$CoolPoint_Point_$Impl_$._new(77,244),postite_geom__$CoolPoint_Point_$Impl_$._new(78,242),postite_geom__$CoolPoint_Point_$Impl_$._new(79,239),postite_geom__$CoolPoint_Point_$Impl_$._new(80,237),postite_geom__$CoolPoint_Point_$Impl_$._new(82,234),postite_geom__$CoolPoint_Point_$Impl_$._new(82,232),postite_geom__$CoolPoint_Point_$Impl_$._new(84,229),postite_geom__$CoolPoint_Point_$Impl_$._new(85,225),postite_geom__$CoolPoint_Point_$Impl_$._new(87,222),postite_geom__$CoolPoint_Point_$Impl_$._new(88,219),postite_geom__$CoolPoint_Point_$Impl_$._new(89,216),postite_geom__$CoolPoint_Point_$Impl_$._new(91,212),postite_geom__$CoolPoint_Point_$Impl_$._new(92,208),postite_geom__$CoolPoint_Point_$Impl_$._new(94,204),postite_geom__$CoolPoint_Point_$Impl_$._new(95,201),postite_geom__$CoolPoint_Point_$Impl_$._new(96,196),postite_geom__$CoolPoint_Point_$Impl_$._new(97,194),postite_geom__$CoolPoint_Point_$Impl_$._new(98,191),postite_geom__$CoolPoint_Point_$Impl_$._new(100,185),postite_geom__$CoolPoint_Point_$Impl_$._new(102,178),postite_geom__$CoolPoint_Point_$Impl_$._new(104,173),postite_geom__$CoolPoint_Point_$Impl_$._new(104,171),postite_geom__$CoolPoint_Point_$Impl_$._new(105,164),postite_geom__$CoolPoint_Point_$Impl_$._new(106,158),postite_geom__$CoolPoint_Point_$Impl_$._new(107,156),postite_geom__$CoolPoint_Point_$Impl_$._new(107,152),postite_geom__$CoolPoint_Point_$Impl_$._new(108,145),postite_geom__$CoolPoint_Point_$Impl_$._new(109,141),postite_geom__$CoolPoint_Point_$Impl_$._new(110,139),postite_geom__$CoolPoint_Point_$Impl_$._new(112,133),postite_geom__$CoolPoint_Point_$Impl_$._new(113,131),postite_geom__$CoolPoint_Point_$Impl_$._new(116,127),postite_geom__$CoolPoint_Point_$Impl_$._new(117,125),postite_geom__$CoolPoint_Point_$Impl_$._new(119,122),postite_geom__$CoolPoint_Point_$Impl_$._new(121,121),postite_geom__$CoolPoint_Point_$Impl_$._new(123,120),postite_geom__$CoolPoint_Point_$Impl_$._new(125,122),postite_geom__$CoolPoint_Point_$Impl_$._new(125,125),postite_geom__$CoolPoint_Point_$Impl_$._new(127,130),postite_geom__$CoolPoint_Point_$Impl_$._new(128,133),postite_geom__$CoolPoint_Point_$Impl_$._new(131,143),postite_geom__$CoolPoint_Point_$Impl_$._new(136,153),postite_geom__$CoolPoint_Point_$Impl_$._new(140,163),postite_geom__$CoolPoint_Point_$Impl_$._new(144,172),postite_geom__$CoolPoint_Point_$Impl_$._new(145,175),postite_geom__$CoolPoint_Point_$Impl_$._new(151,189),postite_geom__$CoolPoint_Point_$Impl_$._new(156,201),postite_geom__$CoolPoint_Point_$Impl_$._new(161,213),postite_geom__$CoolPoint_Point_$Impl_$._new(166,225),postite_geom__$CoolPoint_Point_$Impl_$._new(169,233),postite_geom__$CoolPoint_Point_$Impl_$._new(171,236),postite_geom__$CoolPoint_Point_$Impl_$._new(174,243),postite_geom__$CoolPoint_Point_$Impl_$._new(177,247),postite_geom__$CoolPoint_Point_$Impl_$._new(178,249),postite_geom__$CoolPoint_Point_$Impl_$._new(179,251),postite_geom__$CoolPoint_Point_$Impl_$._new(180,253),postite_geom__$CoolPoint_Point_$Impl_$._new(180,255),postite_geom__$CoolPoint_Point_$Impl_$._new(179,257),postite_geom__$CoolPoint_Point_$Impl_$._new(177,257),postite_geom__$CoolPoint_Point_$Impl_$._new(174,255),postite_geom__$CoolPoint_Point_$Impl_$._new(169,250),postite_geom__$CoolPoint_Point_$Impl_$._new(164,247),postite_geom__$CoolPoint_Point_$Impl_$._new(160,245),postite_geom__$CoolPoint_Point_$Impl_$._new(149,238),postite_geom__$CoolPoint_Point_$Impl_$._new(138,230),postite_geom__$CoolPoint_Point_$Impl_$._new(127,221),postite_geom__$CoolPoint_Point_$Impl_$._new(124,220),postite_geom__$CoolPoint_Point_$Impl_$._new(112,212),postite_geom__$CoolPoint_Point_$Impl_$._new(110,210),postite_geom__$CoolPoint_Point_$Impl_$._new(96,201),postite_geom__$CoolPoint_Point_$Impl_$._new(84,195),postite_geom__$CoolPoint_Point_$Impl_$._new(74,190),postite_geom__$CoolPoint_Point_$Impl_$._new(64,182),postite_geom__$CoolPoint_Point_$Impl_$._new(55,175),postite_geom__$CoolPoint_Point_$Impl_$._new(51,172),postite_geom__$CoolPoint_Point_$Impl_$._new(49,170),postite_geom__$CoolPoint_Point_$Impl_$._new(51,169),postite_geom__$CoolPoint_Point_$Impl_$._new(56,169),postite_geom__$CoolPoint_Point_$Impl_$._new(66,169),postite_geom__$CoolPoint_Point_$Impl_$._new(78,168),postite_geom__$CoolPoint_Point_$Impl_$._new(92,166),postite_geom__$CoolPoint_Point_$Impl_$._new(107,164),postite_geom__$CoolPoint_Point_$Impl_$._new(123,161),postite_geom__$CoolPoint_Point_$Impl_$._new(140,162),postite_geom__$CoolPoint_Point_$Impl_$._new(156,162),postite_geom__$CoolPoint_Point_$Impl_$._new(171,160),postite_geom__$CoolPoint_Point_$Impl_$._new(173,160),postite_geom__$CoolPoint_Point_$Impl_$._new(186,160),postite_geom__$CoolPoint_Point_$Impl_$._new(195,160),postite_geom__$CoolPoint_Point_$Impl_$._new(198,161),postite_geom__$CoolPoint_Point_$Impl_$._new(203,163),postite_geom__$CoolPoint_Point_$Impl_$._new(208,163),postite_geom__$CoolPoint_Point_$Impl_$._new(206,164),postite_geom__$CoolPoint_Point_$Impl_$._new(200,167),postite_geom__$CoolPoint_Point_$Impl_$._new(187,172),postite_geom__$CoolPoint_Point_$Impl_$._new(174,179),postite_geom__$CoolPoint_Point_$Impl_$._new(172,181),postite_geom__$CoolPoint_Point_$Impl_$._new(153,192),postite_geom__$CoolPoint_Point_$Impl_$._new(137,201),postite_geom__$CoolPoint_Point_$Impl_$._new(123,211),postite_geom__$CoolPoint_Point_$Impl_$._new(112,220),postite_geom__$CoolPoint_Point_$Impl_$._new(99,229),postite_geom__$CoolPoint_Point_$Impl_$._new(90,237),postite_geom__$CoolPoint_Point_$Impl_$._new(80,244),postite_geom__$CoolPoint_Point_$Impl_$._new(73,250),postite_geom__$CoolPoint_Point_$Impl_$._new(69,254),postite_geom__$CoolPoint_Point_$Impl_$._new(69,252)];
		if(__map_reserved["star"] != null) {
			_g.setReserved("star",value12);
		} else {
			_g.h["star"] = value12;
		}
	}
	{
		var value13 = [postite_geom__$CoolPoint_Point_$Impl_$._new(81,219),postite_geom__$CoolPoint_Point_$Impl_$._new(84,218),postite_geom__$CoolPoint_Point_$Impl_$._new(86,220),postite_geom__$CoolPoint_Point_$Impl_$._new(88,220),postite_geom__$CoolPoint_Point_$Impl_$._new(90,220),postite_geom__$CoolPoint_Point_$Impl_$._new(92,219),postite_geom__$CoolPoint_Point_$Impl_$._new(95,220),postite_geom__$CoolPoint_Point_$Impl_$._new(97,219),postite_geom__$CoolPoint_Point_$Impl_$._new(99,220),postite_geom__$CoolPoint_Point_$Impl_$._new(102,218),postite_geom__$CoolPoint_Point_$Impl_$._new(105,217),postite_geom__$CoolPoint_Point_$Impl_$._new(107,216),postite_geom__$CoolPoint_Point_$Impl_$._new(110,216),postite_geom__$CoolPoint_Point_$Impl_$._new(113,214),postite_geom__$CoolPoint_Point_$Impl_$._new(116,212),postite_geom__$CoolPoint_Point_$Impl_$._new(118,210),postite_geom__$CoolPoint_Point_$Impl_$._new(121,208),postite_geom__$CoolPoint_Point_$Impl_$._new(124,205),postite_geom__$CoolPoint_Point_$Impl_$._new(126,202),postite_geom__$CoolPoint_Point_$Impl_$._new(129,199),postite_geom__$CoolPoint_Point_$Impl_$._new(132,196),postite_geom__$CoolPoint_Point_$Impl_$._new(136,191),postite_geom__$CoolPoint_Point_$Impl_$._new(139,187),postite_geom__$CoolPoint_Point_$Impl_$._new(142,182),postite_geom__$CoolPoint_Point_$Impl_$._new(144,179),postite_geom__$CoolPoint_Point_$Impl_$._new(146,174),postite_geom__$CoolPoint_Point_$Impl_$._new(148,170),postite_geom__$CoolPoint_Point_$Impl_$._new(149,168),postite_geom__$CoolPoint_Point_$Impl_$._new(151,162),postite_geom__$CoolPoint_Point_$Impl_$._new(152,160),postite_geom__$CoolPoint_Point_$Impl_$._new(152,157),postite_geom__$CoolPoint_Point_$Impl_$._new(152,155),postite_geom__$CoolPoint_Point_$Impl_$._new(152,151),postite_geom__$CoolPoint_Point_$Impl_$._new(152,149),postite_geom__$CoolPoint_Point_$Impl_$._new(152,146),postite_geom__$CoolPoint_Point_$Impl_$._new(149,142),postite_geom__$CoolPoint_Point_$Impl_$._new(148,139),postite_geom__$CoolPoint_Point_$Impl_$._new(145,137),postite_geom__$CoolPoint_Point_$Impl_$._new(141,135),postite_geom__$CoolPoint_Point_$Impl_$._new(139,135),postite_geom__$CoolPoint_Point_$Impl_$._new(134,136),postite_geom__$CoolPoint_Point_$Impl_$._new(130,140),postite_geom__$CoolPoint_Point_$Impl_$._new(128,142),postite_geom__$CoolPoint_Point_$Impl_$._new(126,145),postite_geom__$CoolPoint_Point_$Impl_$._new(122,150),postite_geom__$CoolPoint_Point_$Impl_$._new(119,158),postite_geom__$CoolPoint_Point_$Impl_$._new(117,163),postite_geom__$CoolPoint_Point_$Impl_$._new(115,170),postite_geom__$CoolPoint_Point_$Impl_$._new(114,175),postite_geom__$CoolPoint_Point_$Impl_$._new(117,184),postite_geom__$CoolPoint_Point_$Impl_$._new(120,190),postite_geom__$CoolPoint_Point_$Impl_$._new(125,199),postite_geom__$CoolPoint_Point_$Impl_$._new(129,203),postite_geom__$CoolPoint_Point_$Impl_$._new(133,208),postite_geom__$CoolPoint_Point_$Impl_$._new(138,213),postite_geom__$CoolPoint_Point_$Impl_$._new(145,215),postite_geom__$CoolPoint_Point_$Impl_$._new(155,218),postite_geom__$CoolPoint_Point_$Impl_$._new(164,219),postite_geom__$CoolPoint_Point_$Impl_$._new(166,219),postite_geom__$CoolPoint_Point_$Impl_$._new(177,219),postite_geom__$CoolPoint_Point_$Impl_$._new(182,218),postite_geom__$CoolPoint_Point_$Impl_$._new(192,216),postite_geom__$CoolPoint_Point_$Impl_$._new(196,213),postite_geom__$CoolPoint_Point_$Impl_$._new(199,212),postite_geom__$CoolPoint_Point_$Impl_$._new(201,211)];
		if(__map_reserved["pigtail"] != null) {
			_g.setReserved("pigtail",value13);
		} else {
			_g.h["pigtail"] = value13;
		}
	}
	$r = _g;
	return $r;
}(this));
postite_uz__$Debug_LogLevel_$Impl_$.Debug = 10;
postite_uz__$Debug_LogLevel_$Impl_$.Info = 20;
postite_uz__$Debug_LogLevel_$Impl_$.Warning = 30;
postite_uz__$Debug_LogLevel_$Impl_$.Error = 40;
postite_uz__$Debug_LogLevel_$Impl_$.Critical = 50;
postite_uz__$Debug_LogLevel_$Impl_$.longest = 10;
tests_TestGesteStatics.p1 = postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 100, y : 200});
tests_TestGesteStatics.p2 = postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 300, y : 400});
tests_TestGesteStatics.seg = [tests_TestGesteStatics.p1,tests_TestGesteStatics.p2];
tests_TestGesteStatics.rec = [{ x : 0, y : 0},{ x : 100, y : 0},{ x : 100, y : 100},{ x : 0, y : 100},{ x : 0, y : 0}];
tests_TestResample.p1 = postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 100, y : 200});
tests_TestResample.p2 = postite_geom__$CoolPoint_Point_$Impl_$.fromAnonInt({ x : 300, y : 400});
tests_TestResample.seg = [tests_TestResample.p1,tests_TestResample.p2];
tests_TestResample.dix = [1,2,3,4,5,6,7,8,9,10];
tests_TestResample.zig = [postite_geom__$CoolPoint_Point_$Impl_$._new(307,216),postite_geom__$CoolPoint_Point_$Impl_$._new(333,186),postite_geom__$CoolPoint_Point_$Impl_$._new(356,215),postite_geom__$CoolPoint_Point_$Impl_$._new(375,186),postite_geom__$CoolPoint_Point_$Impl_$._new(399,216),postite_geom__$CoolPoint_Point_$Impl_$._new(418,186)];
utest_TestHandler.POLLING_TIME = 10;
utest_AccessoryName.SETUP_NAME = "setup";
utest_AccessoryName.SETUP_CLASS_NAME = "setupClass";
utest_AccessoryName.TEARDOWN_NAME = "teardown";
utest_AccessoryName.TEARDOWN_CLASS_NAME = "teardownClass";
utest_ui_text_HtmlReport.platform = "javascript";
tests_TestAll.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
